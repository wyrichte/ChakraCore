<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Condition="'$(BuildingWithBuildExe)'=='true'" Project="..\..\..\Build\Chakra.Build.Paths.props" />
  <Import Condition="'$(ChakraBuildPathImported)'!='true'" Project="$(SolutionDir)Chakra.Build.Paths.props" />
  <Import Project="$(BuildConfigPropsPath)Chakra.Build.ProjectConfiguration.props" />
  <PropertyGroup Label="Globals">
    <ProjectGuid>{8AF67707-1D98-4054-BC9A-6130865484BA}</ProjectGuid>
    <RootNamespace>JnConsole</RootNamespace>
    <Keyword>Win32Proj</Keyword>
  </PropertyGroup>
  <PropertyGroup Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseStaticAtl>true</UseStaticAtl>
    <AtlVersion>70</AtlVersion>
    <BuildForCoreSystem>true</BuildForCoreSystem>
    <UseStl>true</UseStl>
    <StlVersion>70</StlVersion>
    <!-- Setting TestCode=true will prevent MUI from being generated in razzle -->
    <TestCode Condition="'$(BuildingWithBuildExe)'=='true'">true</TestCode>
  </PropertyGroup>
  <Import Project="$(BuildConfigPropsPath)Chakra.Build.Default.props" />
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <Import Project="$(BuildConfigPropsPath)Chakra.Build.props" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <AdditionalIncludeDirectories>
        $(IntDir);
        $(ChakraRootDirectory)core\lib\Common;
        $(ChakraRootDirectory)private\lib\Engine;
        $(ChakraRootDirectory)private\bin\ChakraDiag;
        $(ChakraRootDirectory)private\lib\HostCommon;
        $(ChakraRootDirectory)private\Lib\MemProtectHeap;
        $(ChakraRootDirectory)private\lib\SCALookup;
        $(ChakraRootDirectory)private\lib\JsrtChakra;
        $(ChakraRootDirectory)core\lib\jsrt;
        $(ChakraInternalIDLIntDir);

        <!-- For EdgeJsHostNativeTest.h, EdgeScriptDirect.h and EdgeJavascriptTypeId.h -->
        $(ChakraRootDirectory)publish;
        $(ChakraPublishIntDir);
        $(ChakraCoreRootDirectory)lib\runtime\types;

        %(AdditionalIncludeDirectories)
      </AdditionalIncludeDirectories>
      <PrecompiledHeader>Use</PrecompiledHeader>
    </ClCompile>
    <!-- Explicity define the ModuleDefinitionFile for the ImpLibtarget.  It doesn't always get set when we are incremental building -->
    <ImpLib Condition="'$(BuildingWithBuildExe)'=='true'">
      <ModuleDefinitionFile>jshost.def</ModuleDefinitionFile>
    </ImpLib>
    <Link>
      <SubSystem>Console</SubSystem>
      <ModuleDefinitionFile>jshost.def</ModuleDefinitionFile>
      <LargeAddressAware Condition="'$(Platform)'=='Win32' or '$(Platform)'=='Arm'">true</LargeAddressAware>
      <StackReserveSize Condition="'$(Platform)'=='x64' AND '$(Platform)'!='Arm64'">0x200000</StackReserveSize>
      <StackReserveSize Condition="'$(Platform)'=='Win32' OR '$(Platform)'=='ARM'">0x100000</StackReserveSize>
      <StackCommitSize>0x2000</StackCommitSize>
      <AdditionalDependencies>
        %(AdditionalDependencies);
        $(OneCoreSdkLibPath)\$(OneCoreTargetVersionStr)\onecore.lib;
        $(MinCoreSdkLibPath)\mincore_fw.lib;
        $(MinCorePrivSdkLibPath)\$(MinCoreTargetVersionStr)\mincore_private.lib;
        $(SdkLibPath)\ole32.lib;
        $(PublicInternalPath)\shell\lib\$(PlatformPathNameAlt)\$(WindowsVersionStr)\api-ms-win-shcore-stream-l1.lib;
        $(MinCorePrivSdkLibPath)\ext-ms-win-ntuser-message-l1-1-1.lib;
        $(MinCorePrivSdkLibPath)\ext-ms-win-ntuser-window-l1-1-0.lib;
        $(MinCorePrivSdkLibPath)\ext-ms-win-ntuser-windowclass-l1-1-0.lib;
        $(MinCorePrivSdkLibPath)\api-ms-win-ntuser-rectangle-l1-1-0.lib;
        $(MinCorePrivSdkLibPath)\ext-ms-win-ntuser-synch-l1-1-0.lib;
        $(MinCorePrivSdkLibPath)\ext-ms-win-shell-shell32-l1-2-1.lib;
        $(MinCorePrivSdkLibPath)\ext-ms-win-ntuser-draw-l1-1-2.lib;
        $(MinCorePrivSdkLibPath)\ext-ms-win-ntuser-misc-l1-1-0.lib;
        $(MinCorePrivSdkLibPath)\ext-ms-win-ntuser-gui-l1-1-0.lib;

        <!-- For InternetCrackURl and CreateURLMoniker for HtmlApp.cpp -->
        $(SdkLibPath)\urlmon.lib;
        $(SdkLibPath)\wininet.lib;
        $(PublicInternalPath)\inetcore\lib\$(PlatformPathNameAlt)\iertutilp.lib
      </AdditionalDependencies>
      <DelayLoadDLLs>
        %(DelayLoadDlls);
        ext-ms-win-ntuser-synch-l1-1-0.dll;
        ext-ms-win-ntuser-message-l1-1-1.dll;
        ext-ms-win-ntuser-misc-l1-1-0.dll;
        ext-ms-win-ntuser-window-l1-1-0.dll;
        ext-ms-win-ntuser-gui-l1-1-0.dll;
        ext-ms-win-ntuser-windowclass-l1-1-0.dll;
        ole32.dll
      </DelayLoadDLLs>
      <DelayLoadDLLs Condition="'$(Platform)'!='Arm64'">
        %(DelayLoadDlls);
        ext-ms-win-shell-shell32-l1-2-0.dll;
        ext-ms-win-ntuser-draw-l1-1-1.dll
      </DelayLoadDLLs>
      <DelayLoadDLLs Condition="'$(Platform)'=='Arm64'">
        %(DelayLoadDlls);
        ext-ms-win-shell-shell32-l1-2-1.dll;
        ext-ms-win-ntuser-draw-l1-1-2.dll
      </DelayLoadDLLs>
    </Link>
    <Link Condition="'$(BuildingWithBuildExe)'=='true'">
      <AdditionalDependencies>
        %(AdditionalDependencies);
        $(ChakraCommonCodexLib);
        $(RazzleJscriptObjectRoot)\private\lib\scalookup\$(ObjectDirectory)\SCALookup_iel3.lib;
        $(RazzleJscriptObjectRoot)\private\lib\HostCommon\$(ObjectDirectory)\Chakra.Host.Common.lib;
        $(SdkLibPath)\advapi32.lib
      </AdditionalDependencies>

      <!-- Always use LTCG since dloadwin7helper.lib contain /GL objects -->
      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
    </Link>
    <PostBuildEvent Condition="'$(BuildingWithBuildExe)'!='true'">
      <Command Condition="'$(Configuration)'!='Release'">"$(ProjectDir)postbuild.cmd" $(PlatformTarget) "$(OutputPath)" "$(IELibPath)"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <!-- sign instruction -->
  <ItemGroup>
    <FilesToSign Include="$(OutDir)$(TargetName)$(TargetExt)">
      <Authenticode>MicrosoftSHA2</Authenticode>
    </FilesToSign>
  </ItemGroup>
  <!-- Razzle binplace -->
  <ItemGroup Condition="'$(BuildingWithBuildExe)'=='true'">
    <BinplaceLinked Include="$(ObjectPath)\$(ObjectDirectory)$(TargetFileName)">
      <DestinationFolder>jscript</DestinationFolder>
    </BinplaceLinked>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="CodexAssert.cpp" />
    <ClCompile Include="DebuggerCore.cpp" />
    <ClCompile Include="DelayLoadLibrary.cpp" />
    <ClCompile Include="delegatewrapper.cpp" />
    <ClCompile Include="DiagnosticsHelper.cpp" />
    <ClCompile Include="Helpers.cpp" />
    <ClCompile Include="HtmlApp.cpp" />
    <ClCompile Include="HtmlAppWindow.cpp" />
    <ClCompile Include="HtmlHeapEnum.cpp" />
    <ClCompile Include="HtmlHost.cpp" />
    <ClCompile Include="HtmlWinSink.cpp" />
    <ClCompile Include="JsHost.cpp" />
    <ClCompile Include="MockImageData.cpp" />
    <ClCompile Include="MockSCAContext.cpp" />
    <ClCompile Include="MockTypeOperations.cpp" />
    <ClCompile Include="phscriptsite.cpp" />
    <ClCompile Include="proxystub.c">
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="SCA.cpp" />
    <ClCompile Include="ScriptDebugNodeSource.cpp" />
    <ClCompile Include="ScriptDirectHelper.cpp" />
    <ClCompile Include="ScriptProfiler.cpp" />
    <ClCompile Include="StdAfx.cpp">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="TestUtilities.cpp" />
    <ClCompile Include="TypeResolution.cpp" />
    <ClCompile Include="WScriptFastDom.cpp" />
    <ClCompile Include="WScriptJsrt.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="ComObject.h" />
    <ClInclude Include="DebuggerCore.h" />
    <ClInclude Include="DelayLoadLibrary.h" />
    <ClInclude Include="delegatewrapper.h" />
    <ClInclude Include="DiagnosticsHelper.h" />
    <ClInclude Include="Helpers.h" />
    <ClInclude Include="HtmlApp.h" />
    <ClInclude Include="HtmlAppWindow.h" />
    <ClInclude Include="HtmlWinSink.h" />
    <ClInclude Include="MessageQueue.h" />
    <ClInclude Include="MockImageData.h" />
    <ClInclude Include="MockSCAContext.h" />
    <ClInclude Include="MockTypeOperations.h" />
    <ClInclude Include="phscriptsite.h" />
    <ClInclude Include="proxystub.h" />
    <ClInclude Include="SCA.h" />
    <ClInclude Include="ScriptDebugEvent.h" />
    <ClInclude Include="ScriptDebugNodeSource.h" />
    <ClInclude Include="ScriptDirectHelper.h" />
    <ClInclude Include="ScriptProfiler.h" />
    <ClInclude Include="StdAfx.h" />
    <ClInclude Include="testutilities.h" />
    <ClInclude Include="testutilitiesreferences.h" />
    <ClInclude Include="ThreadMessage.h" />
    <ClInclude Include="WScriptFastDom.h" />
    <ClInclude Include="WScriptJsrt.h" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="JsHost.rc" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include="JsHostScriptSite.idl">
      <DllDataFileName>%(Filename)_dlldata.c</DllDataFileName>
      <!-- Only needed by razzle -->
      <UseIdlBasedDllData Condition="'$(BuildingWithBuildExe)'=='true'">true</UseIdlBasedDllData>
    </Midl>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\..\core\lib\common\codex\Chakra.Common.Codex.vcxproj">
      <Project>{1876e800-ad77-48c4-a2f7-e5265f24ac38}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\lib\InternalIDL\Chakra.InternalIDL.vcxproj">
      <Project>{fd37f38b-cce6-4bd2-a3ad-2f93d25467f4}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\Lib\SCALookup\Chakra.SCAlookup.vcxproj">
      <Project>{1876e800-ad77-48c4-a2f7-e5265f24ac36}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\Lib\HostCommon\HostCommon.vcxproj">
      <Project>{f2e998aa-fb27-4f65-a6f7-4142be64294f}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\..\publish\Publish.vcxproj">
      <Project>{1876e800-ad77-48c4-a2f7-e5265f24ac35}</Project>
    </ProjectReference>
    <ProjectReference Include="..\Chakra\Chakra.vcxproj">
      <Project>{EA882C8D-81FC-42FE-ABD5-2666DB933FDA}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="jshost.def" />
  </ItemGroup>
  <Import Project="$(BuildConfigPropsPath)Chakra.Build.targets" Condition="exists('$(BuildConfigPropsPath)Chakra.Build.targets')"/>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
</Project>