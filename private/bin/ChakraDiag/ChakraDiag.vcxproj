<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Condition="'$(ChakraBuildPathImported)'!='true'" Project="$(SolutionDir)Chakra.Build.Paths.props" />
  <Import Project="$(BuildConfigPropsPath)Chakra.Build.ProjectConfiguration.props" />
  <PropertyGroup Label="Globals">
    <ProjectName>ChakraDiag</ProjectName>
    <ProjectGuid>{D81EF7CF-1D44-46B5-843E-4C0F1626A1E2}</ProjectGuid>
    <RootNamespace>Js</RootNamespace>
    <Keyword>Win32Proj</Keyword>
    <TargetName>ChakraDiag</TargetName>
    <TargetName Condition="'$(FreTest)'=='true'">ChakraDiagTest</TargetName>
  </PropertyGroup>
  <PropertyGroup Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseStaticAtl>true</UseStaticAtl>
    <AtlVersion>70</AtlVersion>
    <BuildForCoreSystem>true</BuildForCoreSystem>
    <!-- ChakraDiag doesn't have any localizable resources -->
    <Mui Condition="'$(BuildingWithBuildExe)'=='true'">false</Mui>
  </PropertyGroup>
  <Import Project="$(BuildConfigPropsPath)Chakra.Build.Default.props" />
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <Import Project="$(BuildConfigPropsPath)Chakra.Build.props" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <AdditionalIncludeDirectories>
        %(AdditionalIncludeDirectories);
        $(ChakraRootDirectory)core\Lib\Common;
        $(ChakraRootDirectory)core\Lib\Common\DataStructures;
        $(ChakraRootDirectory)core\Lib\Common\Memory;
        $(ChakraRootDirectory)core\Lib\Parser;
        $(ChakraRootDirectory)core\Lib\Runtime;
        $(ChakraRootDirectory)core\Lib\Runtime\Base;
        $(ChakraRootDirectory)core\Lib\Runtime\ByteCode;
        $(ChakraRootDirectory)core\Lib\Runtime\Debug;
        $(ChakraRootDirectory)core\Lib\Runtime\Language;
        $(ChakraRootDirectory)core\Lib\Runtime\Library;
        $(ChakraRootDirectory)core\Lib\Runtime\PlatformAgnostic;
        $(ChakraRootDirectory)core\Lib\Runtime\Types;
        $(ChakraRootDirectory)core\Lib\Backend;
        $(ChakraRootDirectory)core\Lib\JITClient;
        $(ChakraJITIDLIntDir);
        $(ChakraRootDirectory)private\lib\Engine;
        $(ChakraRootDirectory)private\lib\Projection;
        $(ChakraRootDirectory)private\lib;


        $(ChakraPublishIntDir);
        $(ChakraCoreRootDirectory)lib\runtime\types;

        $(ONECORESDKTOOLSINCPATH);

        $(SdkToolsIncPath);
      </AdditionalIncludeDirectories>
      <DisableSpecificWarnings>
        %(DisableSpecificWarnings);
        4189;     <!-- local variable is initialized but not referenced -->
        4290;     <!-- C++ exception specification ignored except to indicate a function is not __declspec(nothrow) -->
        4456;     <!-- declaration of '' hides previous local declaration -->
        4459;     <!-- declaration of '' hides global declaration -->
        4475;     <!-- TODO(curtism): Invalid length modifier in format string on x64 -->
      </DisableSpecificWarnings>
      <DisableSpecificWarnings Condition="'$(Platform)'=='x64' OR '$(Platform)'=='Arm64' ">
        %(DisableSpecificWarnings);
        4302; <!-- 'type cast': truncation from 'ScriptEngineBase *' to 'DWORD' -->
        4311; <!-- 'type cast': pointer truncation from 'ScriptEngineBase *' to 'DWORD' -->
      </DisableSpecificWarnings>
      <PrecompiledHeader>Use</PrecompiledHeader>
    </ClCompile>
    <!-- Explicity define the ModuleDefinitionFile for the ImpLibtarget.  It doesn't always get set when we are incremental building -->
    <ImpLib Condition="'$(BuildingWithBuildExe)'=='true'">
      <ModuleDefinitionFile>$(IntDir)ChakraDiag.def</ModuleDefinitionFile>
    </ImpLib>
    <Link>
      <SubSystem>Console</SubSystem>
      <ModuleDefinitionFile>$(IntDir)ChakraDiag.def</ModuleDefinitionFile>

      <AdditionalDependencies>
        %(AdditionalDependencies);
        $(InternalSdkLibPath)\nothrownew.lib;
        $(SdkLibPath)\mincore.lib;
        $(SdkLibPath)\ntdll.lib;
        $(MinCoreSdkLibPath)\mincore_fw.lib;
        $(MinCoreSdkLibPath)\mincore_obsolete.lib;
        $(OneCoreShellLibPath)\$(WindowsVersionStr)\api-ms-win-shcore-stream-l1.lib;

        <!-- _DoNotUseDirectly_CULprintf in codex -->
        $(OneCoreUapShellLibPath)\CommonUtilityLibrary.lib;

        <!-- Setting store -->
        $(OneCoreUapInetcoreLibPath)\iertutilp.lib;
        $(OneCoreUapInetcoreLibPath)\EdgeSettingsApi.lib;
        $(OneCoreUapInetcoreLibPath)\EdgeSettingsId.lib
      </AdditionalDependencies>

      <DelayLoadDLLs>%(DelayLoadDLLs);api-ms-win-shcore-stream-l1-1-0.dll</DelayLoadDLLs>
      <!-- Always use LTCG since atls_nouser32.lib contain /GL objects -->
      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
    </Link>
    <Link Condition="'$(BuildingWithBuildExe)'=='true'">
      <!-- For Razzle build, Solution relies on ProjectReferences -->
      <AdditionalDependencies>
        %(AdditionalDependencies);
        $(ChakraCommonCodexLib);
        $(ChakraCommonCommonLib);
        $(ChakraCommonCoreLib);
        $(ChakraCommonDataStructureLib);
        $(ChakraRuntimeLanguageLib)
      </AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <!-- Razzle binplace -->
  <ItemGroup Condition="'$(BuildingWithBuildExe)'=='true'">
    <BinplaceLinked Include="$(ObjectPath)\$(ObjectDirectory)$(TargetFileName)">
      <DestinationFolder Condition="'$(TargetName)'=='ChakraDiagTest'">jscript</DestinationFolder>
    </BinplaceLinked>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="$(MSBuildThisFileDirectory)chakradiag.def">
      <PreprocessToFile>true</PreprocessToFile>
      <PreprocessSuppressLineNumbers>true</PreprocessSuppressLineNumbers>
      <PreprocessorDefinitions Condition="'$(TargetName)'=='ChakraDiagTest'">%(PreprocessorDefinitions);CHAKRADIAGTEST=1</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)chakradiag.def</ObjectFileName>
      <LinkCompiled>false</LinkCompiled>
      <ImpLibCompiled>false</ImpLibCompiled>
      <!-- Clear the forced includes -->
      <ForcedIncludeFiles></ForcedIncludeFiles>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="$(MSBuildThisFileDirectory)guids.c">
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="$(MSBuildThisFileDirectory)ScriptDump.cpp" />
    <ClCompile Include="$(MSBuildThisFileDirectory)ScriptDumpReader.cpp" />
    <ClCompile Include="$(MSBuildThisFileDirectory)stdafx.cpp">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="$(MSBuildThisFileDirectory)dllfunc.cpp" />
    <ClCompile Include="$(MSBuildThisFileDirectory)DAC.cpp" />
    <ClCompile Include="$(MSBuildThisFileDirectory)DebugClient.cpp" />
    <ClCompile Include="$(MSBuildThisFileDirectory)DiagProvider.cpp" />
    <ClCompile Include="$(MSBuildThisFileDirectory)InternalStackFrame.cpp" />
    <ClCompile Include="$(MSBuildThisFileDirectory)RemoteStackFrameEnumerator.cpp" />
    <ClCompile Include="$(MSBuildThisFileDirectory)RemoteStackWalker.cpp" />
    <ClCompile Include="$(MSBuildThisFileDirectory)RemoteInlineFrameWalker.cpp" />
    <ClCompile Include="$(MSBuildThisFileDirectory)RemoteStackFrame.cpp" />
    <ClCompile Include="$(MSBuildThisFileDirectory)ScriptState.cpp" />
    <ClCompile Include="$(MSBuildThisFileDirectory)Serializer.cpp" />
    <ClCompile Include="$(MSBuildThisFileDirectory)thrownew.cpp" />
    <ClCompile Include="$(MSBuildThisFileDirectory)VirtualReader.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="DiagErrorCode.h" />
    <ClInclude Include="jscript9diagprivate.h" />
    <ClInclude Include="MockDataTarget.h" />
    <ClInclude Include="thrownew.h" />
    <ClInclude Include="werdump.h" />
    <ClInclude Include="DiagAutoPtr.h" />
    <ClInclude Include="DiagConstants.h" />
    <ClInclude Include="DiagException.h" />
    <ClInclude Include="InternalStackFrame.h" />
    <ClInclude Include="jsdiag.h" />
    <ClInclude Include="RuntimeCore.h" />
    <ClInclude Include="guids.h" />
    <!-- TODO: Remove this line entirely once using the VS solution from the git repo becomes the norm -->
    <Midl Include="..\..\..\..\published\sdk\inc\jscript9diag.idl" Condition="'$(BuildingWithBuildExe)'!='true' AND '$(BuildingGitRepo)'!='true' " />
    <ClInclude Include="ScriptDump.h" />
    <ClInclude Include="ScriptDumpReader.h" />
    <ClInclude Include="stdafx.h" />
    <ClInclude Include="dllfunc.h" />
    <ClInclude Include="DAC.h" />
    <ClInclude Include="RemoteBuffer.h" />
    <ClInclude Include="RemoteBuffer.inl" />
    <ClInclude Include="DebugClient.h" />
    <ClInclude Include="DiagProvider.h" />
    <ClInclude Include="RemoteStackFrame.h" />
    <ClInclude Include="RemoteStackFrameEnumerator.h" />
    <ClInclude Include="RemoteStackWalker.h" />
    <ClInclude Include="RemoteInlineFrameWalker.h" />
    <ClInclude Include="ScriptState.h" />
    <ClInclude Include="Serializer.h" />
    <ClInclude Include="Serializer.inl" />
    <ClInclude Include="DiagAssertion.h" />
    <ClInclude Include="VirtualReader.h" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="$(MSBuildThisFileDirectory)ChakraDiag.rc" />
  </ItemGroup>
  <!-- sign instruction -->
    <ItemGroup>
    <FilesToSign Include="$(OutDir)\$(TargetName).dll">
      <Authenticode>MicrosoftSHA2</Authenticode>
    </FilesToSign>
  </ItemGroup>
  <ItemGroup>
    <None Include="JsDebug.rgs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\..\core\lib\common\codex\Chakra.Common.Codex.vcxproj">
      <Project>{1876e800-ad77-48c4-a2f7-e5265f24ac38}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\..\core\Lib\Common\common\Chakra.Common.Common.vcxproj">
      <Project>{bb4153ff-ac3e-4734-b562-cc23812df31b}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\..\core\Lib\Common\core\Chakra.Common.Core.vcxproj">
      <Project>{cc4153ff-ac3e-4734-b562-cc23812df31b}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\..\core\Lib\Common\DataStructures\Chakra.Common.DataStructures.vcxproj">
      <Project>{5643d42a-c38d-4d82-9662-58470b3ac9f7}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\..\core\Lib\Runtime\Language\Chakra.Runtime.Language.vcxproj">
      <Project>{706083f7-6aa4-4558-a153-6352ef9110f8}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\..\core\Lib\Runtime\Debug\Chakra.Runtime.Debug.vcxproj">
      <Project>{8C61E4E7-F0D6-420D-A352-3E6E50D406DD}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\..\core\Lib\Runtime\PlatformAgnostic\Chakra.Runtime.PlatformAgnostic.vcxproj">
      <Project>{129ac184-877c-441f-ac49-a692ce700e62}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\..\publish\Publish.vcxproj">
      <Project>{1876e800-ad77-48c4-a2f7-e5265f24ac35}</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(BuildConfigPropsPath)Chakra.Build.targets" Condition="exists('$(BuildConfigPropsPath)Chakra.Build.targets')" />
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
</Project>
