<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5">
      <assemblies>
        <add assembly="System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      </assemblies>
    </compilation>
    <httpRuntime targetFramework="4.5" />
  </system.web>
  <system.serviceModel>
    <services>
      <service name="ChakraTelemetryWebService.UnitTestTelemetryService" behaviorConfiguration="ChakraTelemetryMetadataServiceBehavior">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" binding="basicHttpBinding" contract="ChakraTelemetryWebService.IUnitTestTelemetryService" bindingConfiguration="UnitTestTelemetryServiceBinding" />
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior name="ChakraTelemetryServiceBehavior">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="false" />
          <!--
            Setting this to true since this is an internal service for Chakra.
            If used more widely, set to false so exception details are not returned
            to the client.
          -->
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="ChakraTelemetryMetadataServiceBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <!--
            Setting this to true since this is an internal service for Chakra.
            If used more widely, set to false so exception details are not returned
            to the client.
          -->
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <bindings>
      <basicHttpBinding>
        <binding name="UnitTestTelemetryServiceBinding" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" />
      </basicHttpBinding>
    </bindings>
    <protocolMapping>
      <add binding="basicHttpBinding" scheme="http" />
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true" />
  </system.webServer>
  <connectionStrings>
    <add name="ChakraTelemetryDatabaseEntities" connectionString="metadata=res://*/ChakraTelemetryDatabaseModel.csdl|res://*/ChakraTelemetryDatabaseModel.ssdl|res://*/ChakraTelemetryDatabaseModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=chakrawebserver;initial catalog=ChakraTelemetryDatabase;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
  </entityFramework>
</configuration>