//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChakraUnitTestTelemetry.UnitTestTelemetryServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnitTestFailureInformation", Namespace="http://schemas.datacontract.org/2004/07/ChakraTelemetryWebService")]
    [System.SerializableAttribute()]
    public partial class UnitTestFailureInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildArchitectureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandLineParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullCommandLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogFilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatingSystemVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SnapCheckinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SnapJobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitTestFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WasRunInSnapField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchName {
            get {
                return this.BranchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchNameField, value) != true)) {
                    this.BranchNameField = value;
                    this.RaisePropertyChanged("BranchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildArchitecture {
            get {
                return this.BuildArchitectureField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildArchitectureField, value) != true)) {
                    this.BuildArchitectureField = value;
                    this.RaisePropertyChanged("BuildArchitecture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildType {
            get {
                return this.BuildTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildTypeField, value) != true)) {
                    this.BuildTypeField = value;
                    this.RaisePropertyChanged("BuildType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandLineParameters {
            get {
                return this.CommandLineParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandLineParametersField, value) != true)) {
                    this.CommandLineParametersField = value;
                    this.RaisePropertyChanged("CommandLineParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullCommandLine {
            get {
                return this.FullCommandLineField;
            }
            set {
                if ((object.ReferenceEquals(this.FullCommandLineField, value) != true)) {
                    this.FullCommandLineField = value;
                    this.RaisePropertyChanged("FullCommandLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostType {
            get {
                return this.HostTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.HostTypeField, value) != true)) {
                    this.HostTypeField = value;
                    this.RaisePropertyChanged("HostType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogFilePath {
            get {
                return this.LogFilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.LogFilePathField, value) != true)) {
                    this.LogFilePathField = value;
                    this.RaisePropertyChanged("LogFilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineName {
            get {
                return this.MachineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineNameField, value) != true)) {
                    this.MachineNameField = value;
                    this.RaisePropertyChanged("MachineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatingSystemVersion {
            get {
                return this.OperatingSystemVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatingSystemVersionField, value) != true)) {
                    this.OperatingSystemVersionField = value;
                    this.RaisePropertyChanged("OperatingSystemVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SnapCheckinId {
            get {
                return this.SnapCheckinIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SnapCheckinIdField, value) != true)) {
                    this.SnapCheckinIdField = value;
                    this.RaisePropertyChanged("SnapCheckinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SnapJobId {
            get {
                return this.SnapJobIdField;
            }
            set {
                if ((this.SnapJobIdField.Equals(value) != true)) {
                    this.SnapJobIdField = value;
                    this.RaisePropertyChanged("SnapJobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitTestFileName {
            get {
                return this.UnitTestFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitTestFileNameField, value) != true)) {
                    this.UnitTestFileNameField = value;
                    this.RaisePropertyChanged("UnitTestFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Variant {
            get {
                return this.VariantField;
            }
            set {
                if ((object.ReferenceEquals(this.VariantField, value) != true)) {
                    this.VariantField = value;
                    this.RaisePropertyChanged("Variant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WasRunInSnap {
            get {
                return this.WasRunInSnapField;
            }
            set {
                if ((this.WasRunInSnapField.Equals(value) != true)) {
                    this.WasRunInSnapField = value;
                    this.RaisePropertyChanged("WasRunInSnap");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UnitTestTelemetryServiceReference.IUnitTestTelemetryService")]
    public interface IUnitTestTelemetryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnitTestTelemetryService/RecordUnitTestFailure", ReplyAction="http://tempuri.org/IUnitTestTelemetryService/RecordUnitTestFailureResponse")]
        void RecordUnitTestFailure(ChakraUnitTestTelemetry.UnitTestTelemetryServiceReference.UnitTestFailureInformation failureInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnitTestTelemetryService/RecordUnitTestFailure", ReplyAction="http://tempuri.org/IUnitTestTelemetryService/RecordUnitTestFailureResponse")]
        System.Threading.Tasks.Task RecordUnitTestFailureAsync(ChakraUnitTestTelemetry.UnitTestTelemetryServiceReference.UnitTestFailureInformation failureInformation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUnitTestTelemetryServiceChannel : ChakraUnitTestTelemetry.UnitTestTelemetryServiceReference.IUnitTestTelemetryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnitTestTelemetryServiceClient : System.ServiceModel.ClientBase<ChakraUnitTestTelemetry.UnitTestTelemetryServiceReference.IUnitTestTelemetryService>, ChakraUnitTestTelemetry.UnitTestTelemetryServiceReference.IUnitTestTelemetryService {
        
        public UnitTestTelemetryServiceClient() {
        }
        
        public UnitTestTelemetryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UnitTestTelemetryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnitTestTelemetryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnitTestTelemetryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RecordUnitTestFailure(ChakraUnitTestTelemetry.UnitTestTelemetryServiceReference.UnitTestFailureInformation failureInformation) {
            base.Channel.RecordUnitTestFailure(failureInformation);
        }
        
        public System.Threading.Tasks.Task RecordUnitTestFailureAsync(ChakraUnitTestTelemetry.UnitTestTelemetryServiceReference.UnitTestFailureInformation failureInformation) {
            return base.Channel.RecordUnitTestFailureAsync(failureInformation);
        }
    }
}
