//Script GUID:1dcb43b3-d3a6-4c5f-8d0d-dd1f0055977a
//Used for tracking history

/*
 * This script handles some basic aggregation for the ESBuiltins telemetry. As it's
 * undesirable to take up a huge amount of data storage very long-term, and because
 * Kusto has significantly tighter constraints on data ingestion, storage, and then
 * processing volume, this is the data that we persist the longest and which we set
 * as what we'd like to have available in Kusto for quick analysis and easy access.
 */

// hook up to the asimov date inputs, so that back runs work properly
#DECLARE startDate DateTime = IF("@@startDate@@".StartsWith("@@"), DateTime.UtcNow, DateTime.Parse("@@startDate@@"));
#DECLARE streamDate DateTime = @startDate.AddDays(-1);

// The pivoted input file
#IF(LOCAL)
    #DECLARE inputFileName string = @"c:\temp\ESBuiltinsData_Pivoted.ss";
#ELSE
    #DECLARE inputFileName string = string.Format( @"/shares/asimov.prod.data/PublicPartner/Processed/ChakraJavaScript/{0}/{1:yyyy}/{1:MM}/{0}_{1:yyyy}_{1:MM}_{1:dd}.ss", "ESBuiltinsData_Pivoted" , @streamDate );
#ENDIF

// The post-aggregation output file
#IF(LOCAL)
    #DECLARE outputFileName string = @"c:\temp\ESBuiltinsData_Aggregated.ss";
#ELSE
    #DECLARE outputFileName string = string.Format( @"/shares/asimov.prod.data/PublicPartner/Processed/ChakraJavaScript/{0}/{1:yyyy}/{1:MM}/{0}_{1:yyyy}_{1:MM}_{1:dd}.ss", "ESBuiltinsData_Aggregated" , @streamDate );
#ENDIF


// Grab the already-pivoted data from the previous stage's output file.
inputData = 
    SELECT
        *
    FROM ( SSTREAM @inputFileName );


// Do one pass over the data, gathering sums
// regexes used:
//
// :%s/BLOCK.*\n//g
// :%s/ENTRY_TELPOINT(\([a-zA-Z0-9_]*\))/SUM(\1_present ? 1 : 0) AS \1_traces,\rSUM((UInt64)\1) AS \1_sum,/g
// :%s/ENTRY_LANGFEATURE([a-zA-Z0-9]*, \([a-zA-Z0-9]*\))/SUM(\1_present ? 1 : 0) AS \1_traces,\rSUM((UInt64)\1) AS \1_sum,/g
// :%s/ENTRY_BUILTIN([a-zA-Z0-9]*, \([a-zA-Z0-9]*\), \([a-zA-Z0-9]*\), \([a-zA-Z0-9]*\))/SUM(\1_\2_\3_present ? 1 : 0) AS  \1_\2_\3_traces,\rSUM((UInt64)\1_\2_\3_props) AS \1_\2_\3_props_sum,\r\SUM((UInt64)\1_\2_\3_callCount) AS \1_\2_\3_callCount_sum,\rSUM((UInt64)\1_\2_\3_dMCallCount) AS \1_\2_\3_dMCallCount_sum,/g
// :%s/\n\n/\r/g
//
// Or just use generatequeries.py

AggregateData =
    SELECT Domain,
           ApplicationName,
           COUNT(*) AS numpoints,
           SUM(Array_Constructor_isArray_present? 1 : 0) AS Array_Constructor_isArray_traces,
           SUM((UInt64) Array_Constructor_isArray_props) AS Array_Constructor_isArray_props_sum,
           SUM((UInt64) Array_Constructor_isArray_callCount) AS Array_Constructor_isArray_callCount_sum,
           SUM((UInt64) Array_Constructor_isArray_dMCallCount) AS Array_Constructor_isArray_dMCallCount_sum,
           SUM(Array_Prototype_indexOf_present? 1 : 0) AS Array_Prototype_indexOf_traces,
           SUM((UInt64) Array_Prototype_indexOf_props) AS Array_Prototype_indexOf_props_sum,
           SUM((UInt64) Array_Prototype_indexOf_callCount) AS Array_Prototype_indexOf_callCount_sum,
           SUM((UInt64) Array_Prototype_indexOf_dMCallCount) AS Array_Prototype_indexOf_dMCallCount_sum,
           SUM(Array_Prototype_includes_present? 1 : 0) AS Array_Prototype_includes_traces,
           SUM((UInt64) Array_Prototype_includes_props) AS Array_Prototype_includes_props_sum,
           SUM((UInt64) Array_Prototype_includes_callCount) AS Array_Prototype_includes_callCount_sum,
           SUM((UInt64) Array_Prototype_includes_dMCallCount) AS Array_Prototype_includes_dMCallCount_sum,
           SUM(Array_Prototype_every_present? 1 : 0) AS Array_Prototype_every_traces,
           SUM((UInt64) Array_Prototype_every_props) AS Array_Prototype_every_props_sum,
           SUM((UInt64) Array_Prototype_every_callCount) AS Array_Prototype_every_callCount_sum,
           SUM((UInt64) Array_Prototype_every_dMCallCount) AS Array_Prototype_every_dMCallCount_sum,
           SUM(Array_Prototype_filter_present? 1 : 0) AS Array_Prototype_filter_traces,
           SUM((UInt64) Array_Prototype_filter_props) AS Array_Prototype_filter_props_sum,
           SUM((UInt64) Array_Prototype_filter_callCount) AS Array_Prototype_filter_callCount_sum,
           SUM((UInt64) Array_Prototype_filter_dMCallCount) AS Array_Prototype_filter_dMCallCount_sum,
           SUM(Array_Prototype_forEach_present? 1 : 0) AS Array_Prototype_forEach_traces,
           SUM((UInt64) Array_Prototype_forEach_props) AS Array_Prototype_forEach_props_sum,
           SUM((UInt64) Array_Prototype_forEach_callCount) AS Array_Prototype_forEach_callCount_sum,
           SUM((UInt64) Array_Prototype_forEach_dMCallCount) AS Array_Prototype_forEach_dMCallCount_sum,
           SUM(Array_Prototype_lastIndexOf_present? 1 : 0) AS Array_Prototype_lastIndexOf_traces,
           SUM((UInt64) Array_Prototype_lastIndexOf_props) AS Array_Prototype_lastIndexOf_props_sum,
           SUM((UInt64) Array_Prototype_lastIndexOf_callCount) AS Array_Prototype_lastIndexOf_callCount_sum,
           SUM((UInt64) Array_Prototype_lastIndexOf_dMCallCount) AS Array_Prototype_lastIndexOf_dMCallCount_sum,
           SUM(Array_Prototype_map_present? 1 : 0) AS Array_Prototype_map_traces,
           SUM((UInt64) Array_Prototype_map_props) AS Array_Prototype_map_props_sum,
           SUM((UInt64) Array_Prototype_map_callCount) AS Array_Prototype_map_callCount_sum,
           SUM((UInt64) Array_Prototype_map_dMCallCount) AS Array_Prototype_map_dMCallCount_sum,
           SUM(Array_Prototype_reduce_present? 1 : 0) AS Array_Prototype_reduce_traces,
           SUM((UInt64) Array_Prototype_reduce_props) AS Array_Prototype_reduce_props_sum,
           SUM((UInt64) Array_Prototype_reduce_callCount) AS Array_Prototype_reduce_callCount_sum,
           SUM((UInt64) Array_Prototype_reduce_dMCallCount) AS Array_Prototype_reduce_dMCallCount_sum,
           SUM(Array_Prototype_reduceRight_present? 1 : 0) AS Array_Prototype_reduceRight_traces,
           SUM((UInt64) Array_Prototype_reduceRight_props) AS Array_Prototype_reduceRight_props_sum,
           SUM((UInt64) Array_Prototype_reduceRight_callCount) AS Array_Prototype_reduceRight_callCount_sum,
           SUM((UInt64) Array_Prototype_reduceRight_dMCallCount) AS Array_Prototype_reduceRight_dMCallCount_sum,
           SUM(Array_Prototype_some_present? 1 : 0) AS Array_Prototype_some_traces,
           SUM((UInt64) Array_Prototype_some_props) AS Array_Prototype_some_props_sum,
           SUM((UInt64) Array_Prototype_some_callCount) AS Array_Prototype_some_callCount_sum,
           SUM((UInt64) Array_Prototype_some_dMCallCount) AS Array_Prototype_some_dMCallCount_sum,
           SUM(Array_Prototype_contains_present? 1 : 0) AS Array_Prototype_contains_traces,
           SUM((UInt64) Array_Prototype_contains_props) AS Array_Prototype_contains_props_sum,
           SUM((UInt64) Array_Prototype_contains_callCount) AS Array_Prototype_contains_callCount_sum,
           SUM((UInt64) Array_Prototype_contains_dMCallCount) AS Array_Prototype_contains_dMCallCount_sum,
           SUM(Array_Constructor_observe_present? 1 : 0) AS Array_Constructor_observe_traces,
           SUM((UInt64) Array_Constructor_observe_props) AS Array_Constructor_observe_props_sum,
           SUM((UInt64) Array_Constructor_observe_callCount) AS Array_Constructor_observe_callCount_sum,
           SUM((UInt64) Array_Constructor_observe_dMCallCount) AS Array_Constructor_observe_dMCallCount_sum,
           SUM(Array_Constructor_unobserve_present? 1 : 0) AS Array_Constructor_unobserve_traces,
           SUM((UInt64) Array_Constructor_unobserve_props) AS Array_Constructor_unobserve_props_sum,
           SUM((UInt64) Array_Constructor_unobserve_callCount) AS Array_Constructor_unobserve_callCount_sum,
           SUM((UInt64) Array_Constructor_unobserve_dMCallCount) AS Array_Constructor_unobserve_dMCallCount_sum,
           SUM(Object_Constructor_defineProperty_present? 1 : 0) AS Object_Constructor_defineProperty_traces,
           SUM((UInt64) Object_Constructor_defineProperty_props) AS Object_Constructor_defineProperty_props_sum,
           SUM((UInt64) Object_Constructor_defineProperty_callCount) AS Object_Constructor_defineProperty_callCount_sum,
           SUM((UInt64) Object_Constructor_defineProperty_dMCallCount) AS Object_Constructor_defineProperty_dMCallCount_sum,
           SUM(Object_Constructor_defineProperties_present? 1 : 0) AS Object_Constructor_defineProperties_traces,
           SUM((UInt64) Object_Constructor_defineProperties_props) AS Object_Constructor_defineProperties_props_sum,
           SUM((UInt64) Object_Constructor_defineProperties_callCount) AS Object_Constructor_defineProperties_callCount_sum,
           SUM((UInt64) Object_Constructor_defineProperties_dMCallCount) AS Object_Constructor_defineProperties_dMCallCount_sum,
           SUM(Object_Constructor_create_present? 1 : 0) AS Object_Constructor_create_traces,
           SUM((UInt64) Object_Constructor_create_props) AS Object_Constructor_create_props_sum,
           SUM((UInt64) Object_Constructor_create_callCount) AS Object_Constructor_create_callCount_sum,
           SUM((UInt64) Object_Constructor_create_dMCallCount) AS Object_Constructor_create_dMCallCount_sum,
           SUM(Object_Constructor_seal_present? 1 : 0) AS Object_Constructor_seal_traces,
           SUM((UInt64) Object_Constructor_seal_props) AS Object_Constructor_seal_props_sum,
           SUM((UInt64) Object_Constructor_seal_callCount) AS Object_Constructor_seal_callCount_sum,
           SUM((UInt64) Object_Constructor_seal_dMCallCount) AS Object_Constructor_seal_dMCallCount_sum,
           SUM(Object_Constructor_freeze_present? 1 : 0) AS Object_Constructor_freeze_traces,
           SUM((UInt64) Object_Constructor_freeze_props) AS Object_Constructor_freeze_props_sum,
           SUM((UInt64) Object_Constructor_freeze_callCount) AS Object_Constructor_freeze_callCount_sum,
           SUM((UInt64) Object_Constructor_freeze_dMCallCount) AS Object_Constructor_freeze_dMCallCount_sum,
           SUM(Object_Constructor_preventExtensions_present? 1 : 0) AS Object_Constructor_preventExtensions_traces,
           SUM((UInt64) Object_Constructor_preventExtensions_props) AS Object_Constructor_preventExtensions_props_sum,
           SUM((UInt64) Object_Constructor_preventExtensions_callCount) AS Object_Constructor_preventExtensions_callCount_sum,
           SUM((UInt64) Object_Constructor_preventExtensions_dMCallCount) AS Object_Constructor_preventExtensions_dMCallCount_sum,
           SUM(Object_Constructor_isSealed_present? 1 : 0) AS Object_Constructor_isSealed_traces,
           SUM((UInt64) Object_Constructor_isSealed_props) AS Object_Constructor_isSealed_props_sum,
           SUM((UInt64) Object_Constructor_isSealed_callCount) AS Object_Constructor_isSealed_callCount_sum,
           SUM((UInt64) Object_Constructor_isSealed_dMCallCount) AS Object_Constructor_isSealed_dMCallCount_sum,
           SUM(Object_Constructor_isFrozen_present? 1 : 0) AS Object_Constructor_isFrozen_traces,
           SUM((UInt64) Object_Constructor_isFrozen_props) AS Object_Constructor_isFrozen_props_sum,
           SUM((UInt64) Object_Constructor_isFrozen_callCount) AS Object_Constructor_isFrozen_callCount_sum,
           SUM((UInt64) Object_Constructor_isFrozen_dMCallCount) AS Object_Constructor_isFrozen_dMCallCount_sum,
           SUM(Object_Constructor_isExtensible_present? 1 : 0) AS Object_Constructor_isExtensible_traces,
           SUM((UInt64) Object_Constructor_isExtensible_props) AS Object_Constructor_isExtensible_props_sum,
           SUM((UInt64) Object_Constructor_isExtensible_callCount) AS Object_Constructor_isExtensible_callCount_sum,
           SUM((UInt64) Object_Constructor_isExtensible_dMCallCount) AS Object_Constructor_isExtensible_dMCallCount_sum,
           SUM(Object_Constructor_getOwnPropertyNames_present? 1 : 0) AS Object_Constructor_getOwnPropertyNames_traces,
           SUM((UInt64) Object_Constructor_getOwnPropertyNames_props) AS Object_Constructor_getOwnPropertyNames_props_sum,
           SUM((UInt64) Object_Constructor_getOwnPropertyNames_callCount) AS Object_Constructor_getOwnPropertyNames_callCount_sum,
           SUM((UInt64) Object_Constructor_getOwnPropertyNames_dMCallCount) AS Object_Constructor_getOwnPropertyNames_dMCallCount_sum,
           SUM(Object_Constructor_getPrototypeOf_present? 1 : 0) AS Object_Constructor_getPrototypeOf_traces,
           SUM((UInt64) Object_Constructor_getPrototypeOf_props) AS Object_Constructor_getPrototypeOf_props_sum,
           SUM((UInt64) Object_Constructor_getPrototypeOf_callCount) AS Object_Constructor_getPrototypeOf_callCount_sum,
           SUM((UInt64) Object_Constructor_getPrototypeOf_dMCallCount) AS Object_Constructor_getPrototypeOf_dMCallCount_sum,
           SUM(Object_Constructor_keys_present? 1 : 0) AS Object_Constructor_keys_traces,
           SUM((UInt64) Object_Constructor_keys_props) AS Object_Constructor_keys_props_sum,
           SUM((UInt64) Object_Constructor_keys_callCount) AS Object_Constructor_keys_callCount_sum,
           SUM((UInt64) Object_Constructor_keys_dMCallCount) AS Object_Constructor_keys_dMCallCount_sum,
           SUM(Object_Constructor_getOwnPropertySymbols_present? 1 : 0) AS Object_Constructor_getOwnPropertySymbols_traces,
           SUM((UInt64) Object_Constructor_getOwnPropertySymbols_props) AS Object_Constructor_getOwnPropertySymbols_props_sum,
           SUM((UInt64) Object_Constructor_getOwnPropertySymbols_callCount) AS Object_Constructor_getOwnPropertySymbols_callCount_sum,
           SUM((UInt64) Object_Constructor_getOwnPropertySymbols_dMCallCount) AS Object_Constructor_getOwnPropertySymbols_dMCallCount_sum,
           SUM(Object_Constructor_values_present? 1 : 0) AS Object_Constructor_values_traces,
           SUM((UInt64) Object_Constructor_values_props) AS Object_Constructor_values_props_sum,
           SUM((UInt64) Object_Constructor_values_callCount) AS Object_Constructor_values_callCount_sum,
           SUM((UInt64) Object_Constructor_values_dMCallCount) AS Object_Constructor_values_dMCallCount_sum,
           SUM(Object_Constructor_entries_present? 1 : 0) AS Object_Constructor_entries_traces,
           SUM((UInt64) Object_Constructor_entries_props) AS Object_Constructor_entries_props_sum,
           SUM((UInt64) Object_Constructor_entries_callCount) AS Object_Constructor_entries_callCount_sum,
           SUM((UInt64) Object_Constructor_entries_dMCallCount) AS Object_Constructor_entries_dMCallCount_sum,
           SUM(Object_Constructor_getOwnPropertyDescriptors_present? 1 : 0) AS Object_Constructor_getOwnPropertyDescriptors_traces,
           SUM((UInt64) Object_Constructor_getOwnPropertyDescriptors_props) AS Object_Constructor_getOwnPropertyDescriptors_props_sum,
           SUM((UInt64) Object_Constructor_getOwnPropertyDescriptors_callCount) AS Object_Constructor_getOwnPropertyDescriptors_callCount_sum,
           SUM((UInt64) Object_Constructor_getOwnPropertyDescriptors_dMCallCount) AS Object_Constructor_getOwnPropertyDescriptors_dMCallCount_sum,
           SUM(Object_Constructor_observe_present? 1 : 0) AS Object_Constructor_observe_traces,
           SUM((UInt64) Object_Constructor_observe_props) AS Object_Constructor_observe_props_sum,
           SUM((UInt64) Object_Constructor_observe_callCount) AS Object_Constructor_observe_callCount_sum,
           SUM((UInt64) Object_Constructor_observe_dMCallCount) AS Object_Constructor_observe_dMCallCount_sum,
           SUM(Object_Constructor_unobserve_present? 1 : 0) AS Object_Constructor_unobserve_traces,
           SUM((UInt64) Object_Constructor_unobserve_props) AS Object_Constructor_unobserve_props_sum,
           SUM((UInt64) Object_Constructor_unobserve_callCount) AS Object_Constructor_unobserve_callCount_sum,
           SUM((UInt64) Object_Constructor_unobserve_dMCallCount) AS Object_Constructor_unobserve_dMCallCount_sum,
           SUM(Date_Prototype_toISOString_present? 1 : 0) AS Date_Prototype_toISOString_traces,
           SUM((UInt64) Date_Prototype_toISOString_props) AS Date_Prototype_toISOString_props_sum,
           SUM((UInt64) Date_Prototype_toISOString_callCount) AS Date_Prototype_toISOString_callCount_sum,
           SUM((UInt64) Date_Prototype_toISOString_dMCallCount) AS Date_Prototype_toISOString_dMCallCount_sum,
           SUM(Function_Prototype_bind_present? 1 : 0) AS Function_Prototype_bind_traces,
           SUM((UInt64) Function_Prototype_bind_props) AS Function_Prototype_bind_props_sum,
           SUM((UInt64) Function_Prototype_bind_callCount) AS Function_Prototype_bind_callCount_sum,
           SUM((UInt64) Function_Prototype_bind_dMCallCount) AS Function_Prototype_bind_dMCallCount_sum,
           SUM(String_Prototype_trim_present? 1 : 0) AS String_Prototype_trim_traces,
           SUM((UInt64) String_Prototype_trim_props) AS String_Prototype_trim_props_sum,
           SUM((UInt64) String_Prototype_trim_callCount) AS String_Prototype_trim_callCount_sum,
           SUM((UInt64) String_Prototype_trim_dMCallCount) AS String_Prototype_trim_dMCallCount_sum,
           SUM(String_Prototype_startsWith_present? 1 : 0) AS String_Prototype_startsWith_traces,
           SUM((UInt64) String_Prototype_startsWith_props) AS String_Prototype_startsWith_props_sum,
           SUM((UInt64) String_Prototype_startsWith_callCount) AS String_Prototype_startsWith_callCount_sum,
           SUM((UInt64) String_Prototype_startsWith_dMCallCount) AS String_Prototype_startsWith_dMCallCount_sum,
           SUM(String_Prototype_endsWith_present? 1 : 0) AS String_Prototype_endsWith_traces,
           SUM((UInt64) String_Prototype_endsWith_props) AS String_Prototype_endsWith_props_sum,
           SUM((UInt64) String_Prototype_endsWith_callCount) AS String_Prototype_endsWith_callCount_sum,
           SUM((UInt64) String_Prototype_endsWith_dMCallCount) AS String_Prototype_endsWith_dMCallCount_sum,
           SUM(String_Prototype_contains_present? 1 : 0) AS String_Prototype_contains_traces,
           SUM((UInt64) String_Prototype_contains_props) AS String_Prototype_contains_props_sum,
           SUM((UInt64) String_Prototype_contains_callCount) AS String_Prototype_contains_callCount_sum,
           SUM((UInt64) String_Prototype_contains_dMCallCount) AS String_Prototype_contains_dMCallCount_sum,
           SUM(String_Prototype_repeat_present? 1 : 0) AS String_Prototype_repeat_traces,
           SUM((UInt64) String_Prototype_repeat_props) AS String_Prototype_repeat_props_sum,
           SUM((UInt64) String_Prototype_repeat_callCount) AS String_Prototype_repeat_callCount_sum,
           SUM((UInt64) String_Prototype_repeat_dMCallCount) AS String_Prototype_repeat_dMCallCount_sum,
           SUM(String_Prototype_padStart_present? 1 : 0) AS String_Prototype_padStart_traces,
           SUM((UInt64) String_Prototype_padStart_props) AS String_Prototype_padStart_props_sum,
           SUM((UInt64) String_Prototype_padStart_callCount) AS String_Prototype_padStart_callCount_sum,
           SUM((UInt64) String_Prototype_padStart_dMCallCount) AS String_Prototype_padStart_dMCallCount_sum,
           SUM(String_Prototype_padEnd_present? 1 : 0) AS String_Prototype_padEnd_traces,
           SUM((UInt64) String_Prototype_padEnd_props) AS String_Prototype_padEnd_props_sum,
           SUM((UInt64) String_Prototype_padEnd_callCount) AS String_Prototype_padEnd_callCount_sum,
           SUM((UInt64) String_Prototype_padEnd_dMCallCount) AS String_Prototype_padEnd_dMCallCount_sum,
           SUM(String_Prototype_at_present? 1 : 0) AS String_Prototype_at_traces,
           SUM((UInt64) String_Prototype_at_props) AS String_Prototype_at_props_sum,
           SUM((UInt64) String_Prototype_at_callCount) AS String_Prototype_at_callCount_sum,
           SUM((UInt64) String_Prototype_at_dMCallCount) AS String_Prototype_at_dMCallCount_sum,
           SUM(String_Prototype_substr_present? 1 : 0) AS String_Prototype_substr_traces,
           SUM((UInt64) String_Prototype_substr_props) AS String_Prototype_substr_props_sum,
           SUM((UInt64) String_Prototype_substr_callCount) AS String_Prototype_substr_callCount_sum,
           SUM((UInt64) String_Prototype_substr_dMCallCount) AS String_Prototype_substr_dMCallCount_sum,
           SUM(String_Prototype_trimLeft_present? 1 : 0) AS String_Prototype_trimLeft_traces,
           SUM((UInt64) String_Prototype_trimLeft_props) AS String_Prototype_trimLeft_props_sum,
           SUM((UInt64) String_Prototype_trimLeft_callCount) AS String_Prototype_trimLeft_callCount_sum,
           SUM((UInt64) String_Prototype_trimLeft_dMCallCount) AS String_Prototype_trimLeft_dMCallCount_sum,
           SUM(String_Prototype_trimRight_present? 1 : 0) AS String_Prototype_trimRight_traces,
           SUM((UInt64) String_Prototype_trimRight_props) AS String_Prototype_trimRight_props_sum,
           SUM((UInt64) String_Prototype_trimRight_callCount) AS String_Prototype_trimRight_callCount_sum,
           SUM((UInt64) String_Prototype_trimRight_dMCallCount) AS String_Prototype_trimRight_dMCallCount_sum,
           SUM(Math_Constructor_log10_present? 1 : 0) AS Math_Constructor_log10_traces,
           SUM((UInt64) Math_Constructor_log10_props) AS Math_Constructor_log10_props_sum,
           SUM((UInt64) Math_Constructor_log10_callCount) AS Math_Constructor_log10_callCount_sum,
           SUM((UInt64) Math_Constructor_log10_dMCallCount) AS Math_Constructor_log10_dMCallCount_sum,
           SUM(Math_Constructor_log1p_present? 1 : 0) AS Math_Constructor_log1p_traces,
           SUM((UInt64) Math_Constructor_log1p_props) AS Math_Constructor_log1p_props_sum,
           SUM((UInt64) Math_Constructor_log1p_callCount) AS Math_Constructor_log1p_callCount_sum,
           SUM((UInt64) Math_Constructor_log1p_dMCallCount) AS Math_Constructor_log1p_dMCallCount_sum,
           SUM(Math_Constructor_log2_present? 1 : 0) AS Math_Constructor_log2_traces,
           SUM((UInt64) Math_Constructor_log2_props) AS Math_Constructor_log2_props_sum,
           SUM((UInt64) Math_Constructor_log2_callCount) AS Math_Constructor_log2_callCount_sum,
           SUM((UInt64) Math_Constructor_log2_dMCallCount) AS Math_Constructor_log2_dMCallCount_sum,
           SUM(Math_Constructor_expm1_present? 1 : 0) AS Math_Constructor_expm1_traces,
           SUM((UInt64) Math_Constructor_expm1_props) AS Math_Constructor_expm1_props_sum,
           SUM((UInt64) Math_Constructor_expm1_callCount) AS Math_Constructor_expm1_callCount_sum,
           SUM((UInt64) Math_Constructor_expm1_dMCallCount) AS Math_Constructor_expm1_dMCallCount_sum,
           SUM(Math_Constructor_sinh_present? 1 : 0) AS Math_Constructor_sinh_traces,
           SUM((UInt64) Math_Constructor_sinh_props) AS Math_Constructor_sinh_props_sum,
           SUM((UInt64) Math_Constructor_sinh_callCount) AS Math_Constructor_sinh_callCount_sum,
           SUM((UInt64) Math_Constructor_sinh_dMCallCount) AS Math_Constructor_sinh_dMCallCount_sum,
           SUM(Math_Constructor_cosh_present? 1 : 0) AS Math_Constructor_cosh_traces,
           SUM((UInt64) Math_Constructor_cosh_props) AS Math_Constructor_cosh_props_sum,
           SUM((UInt64) Math_Constructor_cosh_callCount) AS Math_Constructor_cosh_callCount_sum,
           SUM((UInt64) Math_Constructor_cosh_dMCallCount) AS Math_Constructor_cosh_dMCallCount_sum,
           SUM(Math_Constructor_tanh_present? 1 : 0) AS Math_Constructor_tanh_traces,
           SUM((UInt64) Math_Constructor_tanh_props) AS Math_Constructor_tanh_props_sum,
           SUM((UInt64) Math_Constructor_tanh_callCount) AS Math_Constructor_tanh_callCount_sum,
           SUM((UInt64) Math_Constructor_tanh_dMCallCount) AS Math_Constructor_tanh_dMCallCount_sum,
           SUM(Math_Constructor_asinh_present? 1 : 0) AS Math_Constructor_asinh_traces,
           SUM((UInt64) Math_Constructor_asinh_props) AS Math_Constructor_asinh_props_sum,
           SUM((UInt64) Math_Constructor_asinh_callCount) AS Math_Constructor_asinh_callCount_sum,
           SUM((UInt64) Math_Constructor_asinh_dMCallCount) AS Math_Constructor_asinh_dMCallCount_sum,
           SUM(Math_Constructor_acosh_present? 1 : 0) AS Math_Constructor_acosh_traces,
           SUM((UInt64) Math_Constructor_acosh_props) AS Math_Constructor_acosh_props_sum,
           SUM((UInt64) Math_Constructor_acosh_callCount) AS Math_Constructor_acosh_callCount_sum,
           SUM((UInt64) Math_Constructor_acosh_dMCallCount) AS Math_Constructor_acosh_dMCallCount_sum,
           SUM(Math_Constructor_atanh_present? 1 : 0) AS Math_Constructor_atanh_traces,
           SUM((UInt64) Math_Constructor_atanh_props) AS Math_Constructor_atanh_props_sum,
           SUM((UInt64) Math_Constructor_atanh_callCount) AS Math_Constructor_atanh_callCount_sum,
           SUM((UInt64) Math_Constructor_atanh_dMCallCount) AS Math_Constructor_atanh_dMCallCount_sum,
           SUM(Math_Constructor_hypot_present? 1 : 0) AS Math_Constructor_hypot_traces,
           SUM((UInt64) Math_Constructor_hypot_props) AS Math_Constructor_hypot_props_sum,
           SUM((UInt64) Math_Constructor_hypot_callCount) AS Math_Constructor_hypot_callCount_sum,
           SUM((UInt64) Math_Constructor_hypot_dMCallCount) AS Math_Constructor_hypot_dMCallCount_sum,
           SUM(Math_Constructor_cbrt_present? 1 : 0) AS Math_Constructor_cbrt_traces,
           SUM((UInt64) Math_Constructor_cbrt_props) AS Math_Constructor_cbrt_props_sum,
           SUM((UInt64) Math_Constructor_cbrt_callCount) AS Math_Constructor_cbrt_callCount_sum,
           SUM((UInt64) Math_Constructor_cbrt_dMCallCount) AS Math_Constructor_cbrt_dMCallCount_sum,
           SUM(Math_Constructor_trunc_present? 1 : 0) AS Math_Constructor_trunc_traces,
           SUM((UInt64) Math_Constructor_trunc_props) AS Math_Constructor_trunc_props_sum,
           SUM((UInt64) Math_Constructor_trunc_callCount) AS Math_Constructor_trunc_callCount_sum,
           SUM((UInt64) Math_Constructor_trunc_dMCallCount) AS Math_Constructor_trunc_dMCallCount_sum,
           SUM(Math_Constructor_sign_present? 1 : 0) AS Math_Constructor_sign_traces,
           SUM((UInt64) Math_Constructor_sign_props) AS Math_Constructor_sign_props_sum,
           SUM((UInt64) Math_Constructor_sign_callCount) AS Math_Constructor_sign_callCount_sum,
           SUM((UInt64) Math_Constructor_sign_dMCallCount) AS Math_Constructor_sign_dMCallCount_sum,
           SUM(Math_Constructor_imul_present? 1 : 0) AS Math_Constructor_imul_traces,
           SUM((UInt64) Math_Constructor_imul_props) AS Math_Constructor_imul_props_sum,
           SUM((UInt64) Math_Constructor_imul_callCount) AS Math_Constructor_imul_callCount_sum,
           SUM((UInt64) Math_Constructor_imul_dMCallCount) AS Math_Constructor_imul_dMCallCount_sum,
           SUM(Math_Constructor_clz32_present? 1 : 0) AS Math_Constructor_clz32_traces,
           SUM((UInt64) Math_Constructor_clz32_props) AS Math_Constructor_clz32_props_sum,
           SUM((UInt64) Math_Constructor_clz32_callCount) AS Math_Constructor_clz32_callCount_sum,
           SUM((UInt64) Math_Constructor_clz32_dMCallCount) AS Math_Constructor_clz32_dMCallCount_sum,
           SUM(Math_Constructor_fround_present? 1 : 0) AS Math_Constructor_fround_traces,
           SUM((UInt64) Math_Constructor_fround_props) AS Math_Constructor_fround_props_sum,
           SUM((UInt64) Math_Constructor_fround_callCount) AS Math_Constructor_fround_callCount_sum,
           SUM((UInt64) Math_Constructor_fround_dMCallCount) AS Math_Constructor_fround_dMCallCount_sum,
           SUM(Number_Constructor_isNaN_present? 1 : 0) AS Number_Constructor_isNaN_traces,
           SUM((UInt64) Number_Constructor_isNaN_props) AS Number_Constructor_isNaN_props_sum,
           SUM((UInt64) Number_Constructor_isNaN_callCount) AS Number_Constructor_isNaN_callCount_sum,
           SUM((UInt64) Number_Constructor_isNaN_dMCallCount) AS Number_Constructor_isNaN_dMCallCount_sum,
           SUM(Number_Constructor_isFinite_present? 1 : 0) AS Number_Constructor_isFinite_traces,
           SUM((UInt64) Number_Constructor_isFinite_props) AS Number_Constructor_isFinite_props_sum,
           SUM((UInt64) Number_Constructor_isFinite_callCount) AS Number_Constructor_isFinite_callCount_sum,
           SUM((UInt64) Number_Constructor_isFinite_dMCallCount) AS Number_Constructor_isFinite_dMCallCount_sum,
           SUM(Number_Constructor_isInteger_present? 1 : 0) AS Number_Constructor_isInteger_traces,
           SUM((UInt64) Number_Constructor_isInteger_props) AS Number_Constructor_isInteger_props_sum,
           SUM((UInt64) Number_Constructor_isInteger_callCount) AS Number_Constructor_isInteger_callCount_sum,
           SUM((UInt64) Number_Constructor_isInteger_dMCallCount) AS Number_Constructor_isInteger_dMCallCount_sum,
           SUM(Number_Constructor_isSafeInteger_present? 1 : 0) AS Number_Constructor_isSafeInteger_traces,
           SUM((UInt64) Number_Constructor_isSafeInteger_props) AS Number_Constructor_isSafeInteger_props_sum,
           SUM((UInt64) Number_Constructor_isSafeInteger_callCount) AS Number_Constructor_isSafeInteger_callCount_sum,
           SUM((UInt64) Number_Constructor_isSafeInteger_dMCallCount) AS Number_Constructor_isSafeInteger_dMCallCount_sum,
           SUM(TypedArray_Prototype_from_present? 1 : 0) AS TypedArray_Prototype_from_traces,
           SUM((UInt64) TypedArray_Prototype_from_props) AS TypedArray_Prototype_from_props_sum,
           SUM((UInt64) TypedArray_Prototype_from_callCount) AS TypedArray_Prototype_from_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_from_dMCallCount) AS TypedArray_Prototype_from_dMCallCount_sum,
           SUM(TypedArray_Prototype_of_present? 1 : 0) AS TypedArray_Prototype_of_traces,
           SUM((UInt64) TypedArray_Prototype_of_props) AS TypedArray_Prototype_of_props_sum,
           SUM((UInt64) TypedArray_Prototype_of_callCount) AS TypedArray_Prototype_of_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_of_dMCallCount) AS TypedArray_Prototype_of_dMCallCount_sum,
           SUM(TypedArray_Prototype_copyWithin_present? 1 : 0) AS TypedArray_Prototype_copyWithin_traces,
           SUM((UInt64) TypedArray_Prototype_copyWithin_props) AS TypedArray_Prototype_copyWithin_props_sum,
           SUM((UInt64) TypedArray_Prototype_copyWithin_callCount) AS TypedArray_Prototype_copyWithin_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_copyWithin_dMCallCount) AS TypedArray_Prototype_copyWithin_dMCallCount_sum,
           SUM(TypedArray_Prototype_entries_present? 1 : 0) AS TypedArray_Prototype_entries_traces,
           SUM((UInt64) TypedArray_Prototype_entries_props) AS TypedArray_Prototype_entries_props_sum,
           SUM((UInt64) TypedArray_Prototype_entries_callCount) AS TypedArray_Prototype_entries_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_entries_dMCallCount) AS TypedArray_Prototype_entries_dMCallCount_sum,
           SUM(TypedArray_Prototype_every_present? 1 : 0) AS TypedArray_Prototype_every_traces,
           SUM((UInt64) TypedArray_Prototype_every_props) AS TypedArray_Prototype_every_props_sum,
           SUM((UInt64) TypedArray_Prototype_every_callCount) AS TypedArray_Prototype_every_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_every_dMCallCount) AS TypedArray_Prototype_every_dMCallCount_sum,
           SUM(TypedArray_Prototype_fill_present? 1 : 0) AS TypedArray_Prototype_fill_traces,
           SUM((UInt64) TypedArray_Prototype_fill_props) AS TypedArray_Prototype_fill_props_sum,
           SUM((UInt64) TypedArray_Prototype_fill_callCount) AS TypedArray_Prototype_fill_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_fill_dMCallCount) AS TypedArray_Prototype_fill_dMCallCount_sum,
           SUM(TypedArray_Prototype_filter_present? 1 : 0) AS TypedArray_Prototype_filter_traces,
           SUM((UInt64) TypedArray_Prototype_filter_props) AS TypedArray_Prototype_filter_props_sum,
           SUM((UInt64) TypedArray_Prototype_filter_callCount) AS TypedArray_Prototype_filter_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_filter_dMCallCount) AS TypedArray_Prototype_filter_dMCallCount_sum,
           SUM(TypedArray_Prototype_find_present? 1 : 0) AS TypedArray_Prototype_find_traces,
           SUM((UInt64) TypedArray_Prototype_find_props) AS TypedArray_Prototype_find_props_sum,
           SUM((UInt64) TypedArray_Prototype_find_callCount) AS TypedArray_Prototype_find_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_find_dMCallCount) AS TypedArray_Prototype_find_dMCallCount_sum,
           SUM(TypedArray_Prototype_findIndex_present? 1 : 0) AS TypedArray_Prototype_findIndex_traces,
           SUM((UInt64) TypedArray_Prototype_findIndex_props) AS TypedArray_Prototype_findIndex_props_sum,
           SUM((UInt64) TypedArray_Prototype_findIndex_callCount) AS TypedArray_Prototype_findIndex_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_findIndex_dMCallCount) AS TypedArray_Prototype_findIndex_dMCallCount_sum,
           SUM(TypedArray_Prototype_forEach_present? 1 : 0) AS TypedArray_Prototype_forEach_traces,
           SUM((UInt64) TypedArray_Prototype_forEach_props) AS TypedArray_Prototype_forEach_props_sum,
           SUM((UInt64) TypedArray_Prototype_forEach_callCount) AS TypedArray_Prototype_forEach_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_forEach_dMCallCount) AS TypedArray_Prototype_forEach_dMCallCount_sum,
           SUM(TypedArray_Prototype_includes_present? 1 : 0) AS TypedArray_Prototype_includes_traces,
           SUM((UInt64) TypedArray_Prototype_includes_props) AS TypedArray_Prototype_includes_props_sum,
           SUM((UInt64) TypedArray_Prototype_includes_callCount) AS TypedArray_Prototype_includes_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_includes_dMCallCount) AS TypedArray_Prototype_includes_dMCallCount_sum,
           SUM(TypedArray_Prototype_indexOf_present? 1 : 0) AS TypedArray_Prototype_indexOf_traces,
           SUM((UInt64) TypedArray_Prototype_indexOf_props) AS TypedArray_Prototype_indexOf_props_sum,
           SUM((UInt64) TypedArray_Prototype_indexOf_callCount) AS TypedArray_Prototype_indexOf_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_indexOf_dMCallCount) AS TypedArray_Prototype_indexOf_dMCallCount_sum,
           SUM(TypedArray_Prototype_join_present? 1 : 0) AS TypedArray_Prototype_join_traces,
           SUM((UInt64) TypedArray_Prototype_join_props) AS TypedArray_Prototype_join_props_sum,
           SUM((UInt64) TypedArray_Prototype_join_callCount) AS TypedArray_Prototype_join_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_join_dMCallCount) AS TypedArray_Prototype_join_dMCallCount_sum,
           SUM(TypedArray_Prototype_keys_present? 1 : 0) AS TypedArray_Prototype_keys_traces,
           SUM((UInt64) TypedArray_Prototype_keys_props) AS TypedArray_Prototype_keys_props_sum,
           SUM((UInt64) TypedArray_Prototype_keys_callCount) AS TypedArray_Prototype_keys_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_keys_dMCallCount) AS TypedArray_Prototype_keys_dMCallCount_sum,
           SUM(TypedArray_Prototype_lastIndexOf_present? 1 : 0) AS TypedArray_Prototype_lastIndexOf_traces,
           SUM((UInt64) TypedArray_Prototype_lastIndexOf_props) AS TypedArray_Prototype_lastIndexOf_props_sum,
           SUM((UInt64) TypedArray_Prototype_lastIndexOf_callCount) AS TypedArray_Prototype_lastIndexOf_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_lastIndexOf_dMCallCount) AS TypedArray_Prototype_lastIndexOf_dMCallCount_sum,
           SUM(TypedArray_Prototype_map_present? 1 : 0) AS TypedArray_Prototype_map_traces,
           SUM((UInt64) TypedArray_Prototype_map_props) AS TypedArray_Prototype_map_props_sum,
           SUM((UInt64) TypedArray_Prototype_map_callCount) AS TypedArray_Prototype_map_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_map_dMCallCount) AS TypedArray_Prototype_map_dMCallCount_sum,
           SUM(TypedArray_Prototype_reduce_present? 1 : 0) AS TypedArray_Prototype_reduce_traces,
           SUM((UInt64) TypedArray_Prototype_reduce_props) AS TypedArray_Prototype_reduce_props_sum,
           SUM((UInt64) TypedArray_Prototype_reduce_callCount) AS TypedArray_Prototype_reduce_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_reduce_dMCallCount) AS TypedArray_Prototype_reduce_dMCallCount_sum,
           SUM(TypedArray_Prototype_reduceRight_present? 1 : 0) AS TypedArray_Prototype_reduceRight_traces,
           SUM((UInt64) TypedArray_Prototype_reduceRight_props) AS TypedArray_Prototype_reduceRight_props_sum,
           SUM((UInt64) TypedArray_Prototype_reduceRight_callCount) AS TypedArray_Prototype_reduceRight_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_reduceRight_dMCallCount) AS TypedArray_Prototype_reduceRight_dMCallCount_sum,
           SUM(TypedArray_Prototype_reverse_present? 1 : 0) AS TypedArray_Prototype_reverse_traces,
           SUM((UInt64) TypedArray_Prototype_reverse_props) AS TypedArray_Prototype_reverse_props_sum,
           SUM((UInt64) TypedArray_Prototype_reverse_callCount) AS TypedArray_Prototype_reverse_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_reverse_dMCallCount) AS TypedArray_Prototype_reverse_dMCallCount_sum,
           SUM(TypedArray_Prototype_some_present? 1 : 0) AS TypedArray_Prototype_some_traces,
           SUM((UInt64) TypedArray_Prototype_some_props) AS TypedArray_Prototype_some_props_sum,
           SUM((UInt64) TypedArray_Prototype_some_callCount) AS TypedArray_Prototype_some_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_some_dMCallCount) AS TypedArray_Prototype_some_dMCallCount_sum,
           SUM(TypedArray_Prototype_sort_present? 1 : 0) AS TypedArray_Prototype_sort_traces,
           SUM((UInt64) TypedArray_Prototype_sort_props) AS TypedArray_Prototype_sort_props_sum,
           SUM((UInt64) TypedArray_Prototype_sort_callCount) AS TypedArray_Prototype_sort_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_sort_dMCallCount) AS TypedArray_Prototype_sort_dMCallCount_sum,
           SUM(TypedArray_Prototype_subarray_present? 1 : 0) AS TypedArray_Prototype_subarray_traces,
           SUM((UInt64) TypedArray_Prototype_subarray_props) AS TypedArray_Prototype_subarray_props_sum,
           SUM((UInt64) TypedArray_Prototype_subarray_callCount) AS TypedArray_Prototype_subarray_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_subarray_dMCallCount) AS TypedArray_Prototype_subarray_dMCallCount_sum,
           SUM(TypedArray_Prototype_values_present? 1 : 0) AS TypedArray_Prototype_values_traces,
           SUM((UInt64) TypedArray_Prototype_values_props) AS TypedArray_Prototype_values_props_sum,
           SUM((UInt64) TypedArray_Prototype_values_callCount) AS TypedArray_Prototype_values_callCount_sum,
           SUM((UInt64) TypedArray_Prototype_values_dMCallCount) AS TypedArray_Prototype_values_dMCallCount_sum,
           SUM(Float32Array_Prototype_includes_present? 1 : 0) AS Float32Array_Prototype_includes_traces,
           SUM((UInt64) Float32Array_Prototype_includes_props) AS Float32Array_Prototype_includes_props_sum,
           SUM((UInt64) Float32Array_Prototype_includes_callCount) AS Float32Array_Prototype_includes_callCount_sum,
           SUM((UInt64) Float32Array_Prototype_includes_dMCallCount) AS Float32Array_Prototype_includes_dMCallCount_sum,
           SUM(Float64Array_Prototype_includes_present? 1 : 0) AS Float64Array_Prototype_includes_traces,
           SUM((UInt64) Float64Array_Prototype_includes_props) AS Float64Array_Prototype_includes_props_sum,
           SUM((UInt64) Float64Array_Prototype_includes_callCount) AS Float64Array_Prototype_includes_callCount_sum,
           SUM((UInt64) Float64Array_Prototype_includes_dMCallCount) AS Float64Array_Prototype_includes_dMCallCount_sum,
           SUM(Int16Array_Prototype_includes_present? 1 : 0) AS Int16Array_Prototype_includes_traces,
           SUM((UInt64) Int16Array_Prototype_includes_props) AS Int16Array_Prototype_includes_props_sum,
           SUM((UInt64) Int16Array_Prototype_includes_callCount) AS Int16Array_Prototype_includes_callCount_sum,
           SUM((UInt64) Int16Array_Prototype_includes_dMCallCount) AS Int16Array_Prototype_includes_dMCallCount_sum,
           SUM(Int32Array_Prototype_includes_present? 1 : 0) AS Int32Array_Prototype_includes_traces,
           SUM((UInt64) Int32Array_Prototype_includes_props) AS Int32Array_Prototype_includes_props_sum,
           SUM((UInt64) Int32Array_Prototype_includes_callCount) AS Int32Array_Prototype_includes_callCount_sum,
           SUM((UInt64) Int32Array_Prototype_includes_dMCallCount) AS Int32Array_Prototype_includes_dMCallCount_sum,
           SUM(Int8Array_Prototype_includes_present? 1 : 0) AS Int8Array_Prototype_includes_traces,
           SUM((UInt64) Int8Array_Prototype_includes_props) AS Int8Array_Prototype_includes_props_sum,
           SUM((UInt64) Int8Array_Prototype_includes_callCount) AS Int8Array_Prototype_includes_callCount_sum,
           SUM((UInt64) Int8Array_Prototype_includes_dMCallCount) AS Int8Array_Prototype_includes_dMCallCount_sum,
           SUM(Map_Prototype_toJSON_present? 1 : 0) AS Map_Prototype_toJSON_traces,
           SUM((UInt64) Map_Prototype_toJSON_props) AS Map_Prototype_toJSON_props_sum,
           SUM((UInt64) Map_Prototype_toJSON_callCount) AS Map_Prototype_toJSON_callCount_sum,
           SUM((UInt64) Map_Prototype_toJSON_dMCallCount) AS Map_Prototype_toJSON_dMCallCount_sum,
           SUM(RegExp_Constructor_escape_present? 1 : 0) AS RegExp_Constructor_escape_traces,
           SUM((UInt64) RegExp_Constructor_escape_props) AS RegExp_Constructor_escape_props_sum,
           SUM((UInt64) RegExp_Constructor_escape_callCount) AS RegExp_Constructor_escape_callCount_sum,
           SUM((UInt64) RegExp_Constructor_escape_dMCallCount) AS RegExp_Constructor_escape_dMCallCount_sum,
           SUM(Set_Prototype_toJSON_present? 1 : 0) AS Set_Prototype_toJSON_traces,
           SUM((UInt64) Set_Prototype_toJSON_props) AS Set_Prototype_toJSON_props_sum,
           SUM((UInt64) Set_Prototype_toJSON_callCount) AS Set_Prototype_toJSON_callCount_sum,
           SUM((UInt64) Set_Prototype_toJSON_dMCallCount) AS Set_Prototype_toJSON_dMCallCount_sum,
           SUM(Uint16Array_Prototype_includes_present? 1 : 0) AS Uint16Array_Prototype_includes_traces,
           SUM((UInt64) Uint16Array_Prototype_includes_props) AS Uint16Array_Prototype_includes_props_sum,
           SUM((UInt64) Uint16Array_Prototype_includes_callCount) AS Uint16Array_Prototype_includes_callCount_sum,
           SUM((UInt64) Uint16Array_Prototype_includes_dMCallCount) AS Uint16Array_Prototype_includes_dMCallCount_sum,
           SUM(Uint32Array_Prototype_includes_present? 1 : 0) AS Uint32Array_Prototype_includes_traces,
           SUM((UInt64) Uint32Array_Prototype_includes_props) AS Uint32Array_Prototype_includes_props_sum,
           SUM((UInt64) Uint32Array_Prototype_includes_callCount) AS Uint32Array_Prototype_includes_callCount_sum,
           SUM((UInt64) Uint32Array_Prototype_includes_dMCallCount) AS Uint32Array_Prototype_includes_dMCallCount_sum,
           SUM(Uint8Array_Prototype_includes_present? 1 : 0) AS Uint8Array_Prototype_includes_traces,
           SUM((UInt64) Uint8Array_Prototype_includes_props) AS Uint8Array_Prototype_includes_props_sum,
           SUM((UInt64) Uint8Array_Prototype_includes_callCount) AS Uint8Array_Prototype_includes_callCount_sum,
           SUM((UInt64) Uint8Array_Prototype_includes_dMCallCount) AS Uint8Array_Prototype_includes_dMCallCount_sum,
           SUM(Uint8ClampedArray_Prototype_includes_present? 1 : 0) AS Uint8ClampedArray_Prototype_includes_traces,
           SUM((UInt64) Uint8ClampedArray_Prototype_includes_props) AS Uint8ClampedArray_Prototype_includes_props_sum,
           SUM((UInt64) Uint8ClampedArray_Prototype_includes_callCount) AS Uint8ClampedArray_Prototype_includes_callCount_sum,
           SUM((UInt64) Uint8ClampedArray_Prototype_includes_dMCallCount) AS Uint8ClampedArray_Prototype_includes_dMCallCount_sum,
           SUM(Global_Prototype_WebAssembly_present? 1 : 0) AS Global_Prototype_WebAssembly_traces,
           SUM((UInt64) Global_Prototype_WebAssembly_props) AS Global_Prototype_WebAssembly_props_sum,
           SUM((UInt64) Global_Prototype_WebAssembly_callCount) AS Global_Prototype_WebAssembly_callCount_sum,
           SUM((UInt64) Global_Prototype_WebAssembly_dMCallCount) AS Global_Prototype_WebAssembly_dMCallCount_sum,
           SUM(ES6_RegexSymbolMatch_present? 1 : 0) AS ES6_RegexSymbolMatch_traces,
           SUM((UInt64) ES6_RegexSymbolMatch) AS ES6_RegexSymbolMatch_sum,
           SUM(ES6_RegexSymbolSearch_present? 1 : 0) AS ES6_RegexSymbolSearch_traces,
           SUM((UInt64) ES6_RegexSymbolSearch) AS ES6_RegexSymbolSearch_sum,
           SUM(ES6_RegexSymbolReplace_present? 1 : 0) AS ES6_RegexSymbolReplace_traces,
           SUM((UInt64) ES6_RegexSymbolReplace) AS ES6_RegexSymbolReplace_sum,
           SUM(ES6_RegexSymbolSplit_present? 1 : 0) AS ES6_RegexSymbolSplit_traces,
           SUM((UInt64) ES6_RegexSymbolSplit) AS ES6_RegexSymbolSplit_sum,
           SUM(ES6_Proxy_present? 1 : 0) AS ES6_Proxy_traces,
           SUM((UInt64) ES6_Proxy) AS ES6_Proxy_sum,
           SUM(ES6_Symbol_present? 1 : 0) AS ES6_Symbol_traces,
           SUM((UInt64) ES6_Symbol) AS ES6_Symbol_sum,
           SUM(ES6_Map_present? 1 : 0) AS ES6_Map_traces,
           SUM((UInt64) ES6_Map) AS ES6_Map_sum,
           SUM(ES6_WeakMap_present? 1 : 0) AS ES6_WeakMap_traces,
           SUM((UInt64) ES6_WeakMap) AS ES6_WeakMap_sum,
           SUM(ES6_WeakSet_present? 1 : 0) AS ES6_WeakSet_traces,
           SUM((UInt64) ES6_WeakSet) AS ES6_WeakSet_sum,
           SUM(ES6_Set_present? 1 : 0) AS ES6_Set_traces,
           SUM((UInt64) ES6_Set) AS ES6_Set_sum,
           SUM(ES6_Promise_present? 1 : 0) AS ES6_Promise_traces,
           SUM((UInt64) ES6_Promise) AS ES6_Promise_sum,
           SUM(Let_present? 1 : 0) AS Let_traces,
           SUM((UInt64) Let) AS Let_sum,
           SUM(Lambda_present? 1 : 0) AS Lambda_traces,
           SUM((UInt64) Lambda) AS Lambda_sum,
           SUM(StrictModeFunction_present? 1 : 0) AS StrictModeFunction_traces,
           SUM((UInt64) StrictModeFunction) AS StrictModeFunction_sum,
           SUM(Super_present? 1 : 0) AS Super_traces,
           SUM((UInt64) Super) AS Super_sum,
           SUM(Class_present? 1 : 0) AS Class_traces,
           SUM((UInt64) Class) AS Class_sum,
           SUM(AsmJSFunction_present? 1 : 0) AS AsmJSFunction_traces,
           SUM((UInt64) AsmJSFunction) AS AsmJSFunction_sum,
           SUM(StringTemplates_present? 1 : 0) AS StringTemplates_traces,
           SUM((UInt64) StringTemplates) AS StringTemplates_sum,
           SUM(Const_present? 1 : 0) AS Const_traces,
           SUM((UInt64) Const) AS Const_sum,
           SUM(Generator_present? 1 : 0) AS Generator_traces,
           SUM((UInt64) Generator) AS Generator_sum,
           SUM(Rest_present? 1 : 0) AS Rest_traces,
           SUM((UInt64) Rest) AS Rest_sum,
           SUM(SpreadFeature_present? 1 : 0) AS SpreadFeature_traces,
           SUM((UInt64) SpreadFeature) AS SpreadFeature_sum,
           SUM(UnicodeRegexFlag_present? 1 : 0) AS UnicodeRegexFlag_traces,
           SUM((UInt64) UnicodeRegexFlag) AS UnicodeRegexFlag_sum,
           SUM(StickyRegexFlag_present? 1 : 0) AS StickyRegexFlag_traces,
           SUM((UInt64) StickyRegexFlag) AS StickyRegexFlag_sum,
           SUM(DefaultArgFunction_present? 1 : 0) AS DefaultArgFunction_traces,
           SUM((UInt64) DefaultArgFunction) AS DefaultArgFunction_sum
    FROM inputData
    GROUP BY Domain,
             ApplicationName;

/*
 * We filter here a little bit more to both speed up analysis passes and avoid such
 * cases where we might leak data about a specific user through insufficient sample
 * counts for sites (such that we just have a single sample from a site unique to a
 * user). This happens to also improve our data quality, since it isn't offset by a
 * site that only has a single anomalous trace.
 */

FilteredData =
    SELECT *
    FROM AggregateData
    WHERE numpoints > 3;

// Write to the output file
OUTPUT FilteredData TO SSTREAM @outputFileName WITH STREAMEXPIRY "365";
