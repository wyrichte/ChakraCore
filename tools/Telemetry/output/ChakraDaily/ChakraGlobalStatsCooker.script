//Script GUID:aa30b8ee-da53-4836-a66d-273615d11e54
//Used for tracking history

//   DailyTracker
//   2015-03-01
//   /shares/asimov.prod.data/PublicPartner/Processed/ChakraJavaScript/Tracker
//   @@_endDate@@

REFERENCE @"/shares/asimov.prod.data/PublicPartner/Processed/ChakraJavaScript/bin/Chakra.Utils.dll";

#IF(LOCAL)

#DECLARE pathBase         String   = @"Z:\Chakra\ChakraEI\ScopeSampleData\PageLoadTimes\";

#DECLARE cookedChakraInputPath      String = @pathBase + "CookedChakraTelemetry_2015_03_01.ss";
#DECLARE domainsInputPath           String = @pathBase + "Domains_2015_02_03.ss";
#DECLARE deviceIdMachineInputPath   String = @pathBase + "DeviceIdToMachineId_2015_02_03.ss";
#DECLARE globalExecTimesOutputPath  String = @pathBase + "GlobalExecTimes-Output.ss";

#ELSE

#DECLARE startDate        DateTime = IF("@@startDate@@".StartsWith("@@"), DateTime.UtcNow, DateTime.Parse("@@startDate@@", System.Globalization.CultureInfo.InvariantCulture));
#DECLARE streamDate       DateTime = @startDate.AddDays(-1);
#DECLARE pathBase         String   = @"/shares/asimov.prod.data/PublicPartner/Processed/ChakraJavaScript/";
//#DECLARE pathBase String = @"/users/sanyamc/processed/data/";

#DECLARE cookedChakraInputPath      String = String.Format( @pathBase + @"{0}/{1:yyyy}/{1:MM}/{0}_{1:yyyy}_{1:MM}_{1:dd}.ss", "CookedChakraTelemetry", @streamDate);
#DECLARE domainsInputPath           String = String.Format( @pathBase + @"{0}/{1:yyyy}/{1:MM}/{0}_{1:yyyy}_{1:MM}_{1:dd}.ss", "Domains",               @streamDate);
#DECLARE deviceIdMachineInputPath   String = String.Format( @pathBase + @"{0}/{1:yyyy}/{1:MM}/{0}_{1:yyyy}_{1:MM}_{1:dd}.ss", "DeviceIdToMachineId",   @streamDate);
#DECLARE globalExecTimesOutputPath  String = String.Format( @pathBase + @"{0}/{1:yyyy}/{1:MM}/{0}_{1:yyyy}_{1:MM}_{1:dd}.ss", "GlobalExecTimes",       @streamDate);
//#DECLARE globalExecTimesOutputPath String = String.Format(@"/users/sanyamc/processed/data/reporting/{0}/{1:yyyy}/{1:MM}/{0}_{1:yyyy}_{1:MM}_{1:dd}.ss", "GlobalExecTimes",       @streamDate);

//#IF(TEST_RUN)
//#DECLARE globalExecTimesOutputPath  String = String.Format( @pathBase + @"{0}/{1:yyyy}/{1:MM}/{0}_{1:yyyy}_{1:MM}_{1:dd}.ss", "GlobalExecTimes_Test",       @streamDate);
//#DECLARE globalExecTimesOutputPath  String = String.Format( @"/users/drees/processed/data/{0}_{1:yyyy}_{1:MM}_{1:dd}.ss", "GlobalExecTimes", @streamDate);
//#ENDIF

#ENDIF

// Pull data from the streams into tables (required to join on them in the main query below)
deviceIdToMachineConfigIdMap =
	SELECT
		DeviceId,
		MachineConfigId
	FROM
		( SSTREAM @deviceIdMachineInputPath );

chakraData =
	SELECT
		*,
		data["activityId"] AS ActivityId,
		 device_id AS DeviceId
	FROM
		( SSTREAM @cookedChakraInputPath )
     WHERE ext IS NOT NULL; // Selecting * so that we get the `data` JSON blog in addition, just add 'data' as a separate select field does not seem to work
		
domainData =
	SELECT
		Chakra.Utils.Filters.ExtractDomain( Domain ) AS Domain,
		ActivityId
	FROM
		( SSTREAM @domainsInputPath );

/////////////////////////////////////

globalExecTimesData =
	SELECT
		// Group-by keys:
		Date,
		Chakra.Utils.Filters.ExtractAppName(appVer) AS ApplicationName,
		MachineConfigId,
		domainData.Domain,
		data["binaryVersion"] AS BinaryVersion,
		
		// Aggregate data values:
		MAX( Double.Parse( data["maxGlobalFunctionExecTime"], System.Globalization.CultureInfo.InvariantCulture ) ) AS MaxExecutionTime,
		AVG( Double.Parse( data["maxGlobalFunctionExecTime"], System.Globalization.CultureInfo.InvariantCulture) ) AS MeanExecutionTime,
		STDEV (Double.Parse( data["maxGlobalFunctionExecTime"], System.Globalization.CultureInfo.InvariantCulture) ) AS StdDevExecutionTime,
        COUNT(DISTINCT chakraData.DeviceId) AS NumberOfDevices,
		COUNT( *) AS SampleSize
		// NOTE: Should we add Absolute Deviatation numbers too?
	FROM
		chakraData
		INNER JOIN deviceIdToMachineConfigIdMap ON deviceIdToMachineConfigIdMap.DeviceId == chakraData.DeviceId
		INNER JOIN domainData                   ON chakraData.ActivityId                 == domainData.ActivityId
	WHERE
		chakraData.name == "Microsoft.Web.Platform.Chakra.GlobalStats.V2"
		&&
		data["binaryFlavor"] != "CHK"
        &&
        data["maxGlobalFunctionExecTime"] IS NOT NULL
	GROUP BY
		Date,
		ApplicationName,
		MachineConfigId,
		Domain,
		BinaryVersion;


OUTPUT globalExecTimesData
TO SSTREAM @globalExecTimesOutputPath WITH STREAMEXPIRY "365";