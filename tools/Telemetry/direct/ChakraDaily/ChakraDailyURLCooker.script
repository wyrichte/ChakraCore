//   DailyTracker
//   2015-01-25
//   /shares/asimov.prod.data/PublicPartner/Processed/ChakraJavaScript/Tracker/
//   @@_endDate@@

#DECLARE startDate DateTime = IF("@@startDate@@".StartsWith("@@"), DateTime.UtcNow, DateTime.Parse("@@startDate@@"));
#DECLARE streamDate DateTime = @startDate.AddDays(-1); // Which 24-hour day of cooked events to process
//#DECLARE sensitivePath string = string.Format(@"/shares/asimov.prod.data/UserSensitive.Usage/Collection/Asimov/Cll/Low/v2/?date={0}...{1}&hour=all&sparsestreamset=true", @streamDate.ToString("yyyy-MM-dd"), @streamDate.ToString("yyyy-MM-dd"));
//#DECLARE regularPath string = string.Format(@"/shares/asimov.prod.data/Public/Collection/Asimov/Cll/Low/v2/?date={0}...{1}&hour=all&sparsestreamset=true", @streamDate.ToString("yyyy-MM-dd"), @streamDate.ToString("yyyy-MM-dd"));
//#DECLARE urlOutputPath string = string.Format(@"/users/sanyamc/processed/data/reporting/{0}/{1:yyyy}/{1:MM}/{0}_{1:yyyy}_{1:MM}_{1:dd}.ss","CookedURLTelemetry", @streamDate);
//#DECLARE markupOutputPath string = string.Format(@"/users/sanyamc/processed/data/reporting/{0}/{1:yyyy}/{1:MM}/{0}_{1:yyyy}_{1:MM}_{1:dd}.ss", "CookedMarkupTelemetry", @streamDate);
#DECLARE urlOutputPath string = string.Format("/shares/asimov.prod.data/PublicPartner/Processed/ChakraJavaScript/{0}/{1:yyyy}/{1:MM}/{0}_{1:yyyy}_{1:MM}_{1:dd}.ss", "CookedURLTelemetry", @streamDate);
//#DECLARE markupOutputPath string = string.Format("/shares/asimov.prod.data/PublicPartner/Processed/ChakraJavaScript/{0}/{1:yyyy}/{1:MM}/{0}_{1:yyyy}_{1:MM}_{1:dd}.ss", "CookedMarkupTelemetry", @streamDate);

MODULE "/shares/asimov.prod.data/Public/Resources/Latest/Asimov/Api/v3/Asimov.Batch.module" AS Asimov;

baseurldata =
        // We are very careful here to just select the domain, since the result
        // will be stored in non-secured storage
        Asimov.CllEventsR1
    (
		isolation = "Osg.Usage",
        firstHour = @streamDate,
        lastHour = @startDate
    );

exturldata = 
	PROCESS baseurldata
	USING JsonObjectProcessor
	(
		"ext",
		"aId:ActivityId:string"
	);

dataurldata =
	PROCESS exturldata
	USING JsonObjectProcessor
	(
		"data",
		"domain:Domain:string"
	);

urldata =
	SELECT
		@streamDate AS Date,
		time,
		Domain,
		ActivityId
	FROM dataurldata
	WHERE name == "Microsoft.Web.Platform.SetUri";

OUTPUT urldata
TO SSTREAM @urlOutputPath WITH STREAMEXPIRY "30";
