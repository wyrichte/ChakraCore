String array as Iterable tests

=================================================
Starting [Test 1: MarshalInArrayAsIterable]
Comment: var myArray = ["Pink", "Yellow", "Blue", "Red", "Green", "Brown", "Tan", "Black", "White"];
Comment: var myIterable = (new Animals.Animal(1)).duplicateStringIterable(myArray);
Comment: verifyIterable("myIterable", myIterable, ["Pink", "Yellow", "Blue", "Red", "Green", "Brown", "Tan", "Black", "White"])
Comment: typeof myIterable: object
Comment: Dump of properties : 
    var myIterableMembers = [
        ['first', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterable
      Actual: object

Pass: myIterable's property
      Actual: first

Pass: typeof myIterable["first"]
      Actual: function

Pass: myIterable["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterable["first"].length
      Actual: 0

Pass: myIterable's property
      Actual: toString

Pass: typeof myIterable["toString"]
      Actual: function

Pass: myIterable["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterable["toString"].length
      Actual: 0

Pass: number of properties of myIterable
      Actual: 2

Comment: var myIterator = myIterable.first()
Comment: typeof myIterator: object
Comment: Dump of properties : 
    var myIteratorMembers = [
        ['current', 'string'],
        ['getMany', 'function', 1],
        ['hasCurrent', 'boolean'],
        ['moveNext', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterator
      Actual: object

Pass: myIterator's property
      Actual: current

Pass: typeof myIterator["current"]
      Actual: string

Pass: myIterator's property
      Actual: getMany

Pass: typeof myIterator["getMany"]
      Actual: function

Pass: myIterator["getMany"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myIterator["getMany"].length
      Actual: 1

Pass: myIterator's property
      Actual: hasCurrent

Pass: typeof myIterator["hasCurrent"]
      Actual: boolean

Pass: myIterator's property
      Actual: moveNext

Pass: typeof myIterator["moveNext"]
      Actual: function

Pass: myIterator["moveNext"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["moveNext"].length
      Actual: 0

Pass: myIterator's property
      Actual: toString

Pass: typeof myIterator["toString"]
      Actual: function

Pass: myIterator["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["toString"].length
      Actual: 0

Pass: number of properties of myIterator
      Actual: 5

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Pink

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Yellow

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Blue

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Red

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Green

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Brown

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Tan

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Black

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: White

Pass: myIterator.moveNext()
      Actual: false

Pass: myIterator.hasCurrent
      Actual: false

Pass: number of members iterated over
      Actual: 9

Comment: Iterator with getMany
Comment: gotManyItems: 3
Pass: gotManyItems
      Actual: 3

Pass: manyItems[0]
      Actual: Pink

Pass: manyItems[1]
      Actual: Yellow

Pass: manyItems[2]
      Actual: Blue

Comment: gotManyItems: 3
Pass: gotManyItems
      Actual: 3

Pass: manyItems[0]
      Actual: Red

Pass: manyItems[1]
      Actual: Green

Pass: manyItems[2]
      Actual: Brown

Comment: gotManyItems: 3
Pass: gotManyItems
      Actual: 3

Pass: manyItems[0]
      Actual: Tan

Pass: manyItems[1]
      Actual: Black

Pass: manyItems[2]
      Actual: White

Pass: myIterator.hasCurrent
      Actual: false

Pass: number of members iterated over
      Actual: 9

PASS [Test 1: MarshalInArrayAsIterable]
=================================================

=================================================
Starting [Test 2: CheckIIteratorLifeTime]
Comment: var myArray = ["Pink", "Yellow", "Blue", "Red", "Green", "Brown", "Tan", "Black", "White"];
Comment: var myIterable = (new Animals.Animal(1)).duplicateStringIterable(myArray);
Comment: myArray = undefined
Comment: verifyIterable("myIterable", myIterable, ["Pink", "Yellow", "Blue", "Red", "Green", "Brown", "Tan", "Black", "White"])
Comment: typeof myIterable: object
Comment: Dump of properties : 
    var myIterableMembers = [
        ['first', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterable
      Actual: object

Pass: myIterable's property
      Actual: first

Pass: typeof myIterable["first"]
      Actual: function

Pass: myIterable["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterable["first"].length
      Actual: 0

Pass: myIterable's property
      Actual: toString

Pass: typeof myIterable["toString"]
      Actual: function

Pass: myIterable["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterable["toString"].length
      Actual: 0

Pass: number of properties of myIterable
      Actual: 2

Comment: var myIterator = myIterable.first()
Comment: typeof myIterator: object
Comment: Dump of properties : 
    var myIteratorMembers = [
        ['current', 'string'],
        ['getMany', 'function', 1],
        ['hasCurrent', 'boolean'],
        ['moveNext', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterator
      Actual: object

Pass: myIterator's property
      Actual: current

Pass: typeof myIterator["current"]
      Actual: string

Pass: myIterator's property
      Actual: getMany

Pass: typeof myIterator["getMany"]
      Actual: function

Pass: myIterator["getMany"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myIterator["getMany"].length
      Actual: 1

Pass: myIterator's property
      Actual: hasCurrent

Pass: typeof myIterator["hasCurrent"]
      Actual: boolean

Pass: myIterator's property
      Actual: moveNext

Pass: typeof myIterator["moveNext"]
      Actual: function

Pass: myIterator["moveNext"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["moveNext"].length
      Actual: 0

Pass: myIterator's property
      Actual: toString

Pass: typeof myIterator["toString"]
      Actual: function

Pass: myIterator["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["toString"].length
      Actual: 0

Pass: number of properties of myIterator
      Actual: 5

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Pink

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Yellow

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Blue

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Red

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Green

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Brown

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Tan

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Black

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: White

Pass: myIterator.moveNext()
      Actual: false

Pass: myIterator.hasCurrent
      Actual: false

Pass: number of members iterated over
      Actual: 9

Comment: Iterator with getMany
Comment: gotManyItems: 3
Pass: gotManyItems
      Actual: 3

Pass: manyItems[0]
      Actual: Pink

Pass: manyItems[1]
      Actual: Yellow

Pass: manyItems[2]
      Actual: Blue

Comment: gotManyItems: 3
Pass: gotManyItems
      Actual: 3

Pass: manyItems[0]
      Actual: Red

Pass: manyItems[1]
      Actual: Green

Pass: manyItems[2]
      Actual: Brown

Comment: gotManyItems: 3
Pass: gotManyItems
      Actual: 3

Pass: manyItems[0]
      Actual: Tan

Pass: manyItems[1]
      Actual: Black

Pass: manyItems[2]
      Actual: White

Pass: myIterator.hasCurrent
      Actual: false

Pass: number of members iterated over
      Actual: 9

PASS [Test 2: CheckIIteratorLifeTime]
=================================================

=================================================
Starting [Test 3: AlterArrayBeforeIterating]
Comment: var myArray = ["Pink", "Yellow", "Blue", "Red", "Green", "Brown", "Tan", "Black", "White"];
Comment: var myIterable = (new Animals.Animal(1)).duplicateStringIterable(myArray);
Comment: var myIterator = myIterable.first()
Comment: myArray[11] = "Purple";
Comment: verifyIterator("myIterator", myIterator, ["Pink", "Yellow", "Blue", "Red", "Green", "Brown", "Tan", "Black", "White", "undefined", "undefined", "Purple"]);
Comment: typeof myIterator: object
Comment: Dump of properties : 
    var myIteratorMembers = [
        ['current', 'string'],
        ['getMany', 'function', 1],
        ['hasCurrent', 'boolean'],
        ['moveNext', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterator
      Actual: object

Pass: myIterator's property
      Actual: current

Pass: typeof myIterator["current"]
      Actual: string

Pass: myIterator's property
      Actual: getMany

Pass: typeof myIterator["getMany"]
      Actual: function

Pass: myIterator["getMany"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myIterator["getMany"].length
      Actual: 1

Pass: myIterator's property
      Actual: hasCurrent

Pass: typeof myIterator["hasCurrent"]
      Actual: boolean

Pass: myIterator's property
      Actual: moveNext

Pass: typeof myIterator["moveNext"]
      Actual: function

Pass: myIterator["moveNext"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["moveNext"].length
      Actual: 0

Pass: myIterator's property
      Actual: toString

Pass: typeof myIterator["toString"]
      Actual: function

Pass: myIterator["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["toString"].length
      Actual: 0

Pass: number of properties of myIterator
      Actual: 5

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Pink

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Yellow

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Blue

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Red

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Green

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Brown

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Tan

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Black

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: White

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: undefined

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: undefined

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Purple

Pass: myIterator.moveNext()
      Actual: false

Pass: myIterator.hasCurrent
      Actual: false

Pass: number of members iterated over
      Actual: 12

PASS [Test 3: AlterArrayBeforeIterating]
=================================================

=================================================
Starting [Test 4: AlterArrayWhileIterating]
Comment: var myArray = ["Pink", "Yellow", "Blue", "Red", "Green", "Brown", "Tan", "Black", "White"];
Comment: var myIterable = (new Animals.Animal(1)).duplicateStringIterable(myArray);
Comment: var myIterator = myIterable.first()
Comment: var myArrayToVerify = ["Pink", "Yellow", "Blue", "Red", "Green", "Brown", "Tan", "Black", "White"];
Comment: verifyIteratorRange("myIterator", myIterator, myArrayToVerify, 0, 2);
Comment: typeof myIterator: object
Comment: Dump of properties : 
    var myIteratorMembers = [
        ['current', 'string'],
        ['getMany', 'function', 1],
        ['hasCurrent', 'boolean'],
        ['moveNext', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterator
      Actual: object

Pass: myIterator's property
      Actual: current

Pass: typeof myIterator["current"]
      Actual: string

Pass: myIterator's property
      Actual: getMany

Pass: typeof myIterator["getMany"]
      Actual: function

Pass: myIterator["getMany"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myIterator["getMany"].length
      Actual: 1

Pass: myIterator's property
      Actual: hasCurrent

Pass: typeof myIterator["hasCurrent"]
      Actual: boolean

Pass: myIterator's property
      Actual: moveNext

Pass: typeof myIterator["moveNext"]
      Actual: function

Pass: myIterator["moveNext"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["moveNext"].length
      Actual: 0

Pass: myIterator's property
      Actual: toString

Pass: typeof myIterator["toString"]
      Actual: function

Pass: myIterator["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["toString"].length
      Actual: 0

Pass: number of properties of myIterator
      Actual: 5

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Pink

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Yellow

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: number of members iterated over
      Actual: 2

Comment: myArray[3] = "Purple";
Comment: myArrayToVerify[3] = "Purple";
Comment: verifyIteratorRange("myIterator", myIterator, myArrayToVerify, 2, 5);
Comment: typeof myIterator: object
Comment: Dump of properties : 
    var myIteratorMembers = [
        ['current', 'string'],
        ['getMany', 'function', 1],
        ['hasCurrent', 'boolean'],
        ['moveNext', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterator
      Actual: object

Pass: myIterator's property
      Actual: current

Pass: typeof myIterator["current"]
      Actual: string

Pass: myIterator's property
      Actual: getMany

Pass: typeof myIterator["getMany"]
      Actual: function

Pass: myIterator["getMany"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myIterator["getMany"].length
      Actual: 1

Pass: myIterator's property
      Actual: hasCurrent

Pass: typeof myIterator["hasCurrent"]
      Actual: boolean

Pass: myIterator's property
      Actual: moveNext

Pass: typeof myIterator["moveNext"]
      Actual: function

Pass: myIterator["moveNext"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["moveNext"].length
      Actual: 0

Pass: myIterator's property
      Actual: toString

Pass: typeof myIterator["toString"]
      Actual: function

Pass: myIterator["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["toString"].length
      Actual: 0

Pass: number of properties of myIterator
      Actual: 5

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Blue

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Purple

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Green

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: number of members iterated over
      Actual: 3

Comment: myArray[5] = "Lavendar";
Comment: myArrayToVerify[5] = "Lavendar";
Comment: verifyIteratorRange("myIterator", myIterator, myArrayToVerify, 5, 9);
Comment: typeof myIterator: object
Comment: Dump of properties : 
    var myIteratorMembers = [
        ['current', 'string'],
        ['getMany', 'function', 1],
        ['hasCurrent', 'boolean'],
        ['moveNext', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterator
      Actual: object

Pass: myIterator's property
      Actual: current

Pass: typeof myIterator["current"]
      Actual: string

Pass: myIterator's property
      Actual: getMany

Pass: typeof myIterator["getMany"]
      Actual: function

Pass: myIterator["getMany"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myIterator["getMany"].length
      Actual: 1

Pass: myIterator's property
      Actual: hasCurrent

Pass: typeof myIterator["hasCurrent"]
      Actual: boolean

Pass: myIterator's property
      Actual: moveNext

Pass: typeof myIterator["moveNext"]
      Actual: function

Pass: myIterator["moveNext"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["moveNext"].length
      Actual: 0

Pass: myIterator's property
      Actual: toString

Pass: typeof myIterator["toString"]
      Actual: function

Pass: myIterator["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["toString"].length
      Actual: 0

Pass: number of properties of myIterator
      Actual: 5

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Lavendar

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Tan

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Black

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: White

Pass: myIterator.moveNext()
      Actual: false

Pass: myIterator.hasCurrent
      Actual: false

Pass: number of members iterated over
      Actual: 4

PASS [Test 4: AlterArrayWhileIterating]
=================================================

=================================================
Starting [Test 5: AlterArrayLengthWhileIterating]
Comment: var myArray = ["Pink", "Yellow", "Blue", "Red", "Green", "Brown", "Tan", "Black", "White"];
Comment: var myIterable = (new Animals.Animal(1)).duplicateStringIterable(myArray);
Comment: var myIterator = myIterable.first()
Comment: var myArrayToVerify = ["Pink", "Yellow", "Blue", "Red", "Green", "Brown", "Tan", "Black", "White"];
Comment: verifyIteratorRange("myIterator", myIterator, myArrayToVerify, 0, 2);
Comment: typeof myIterator: object
Comment: Dump of properties : 
    var myIteratorMembers = [
        ['current', 'string'],
        ['getMany', 'function', 1],
        ['hasCurrent', 'boolean'],
        ['moveNext', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterator
      Actual: object

Pass: myIterator's property
      Actual: current

Pass: typeof myIterator["current"]
      Actual: string

Pass: myIterator's property
      Actual: getMany

Pass: typeof myIterator["getMany"]
      Actual: function

Pass: myIterator["getMany"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myIterator["getMany"].length
      Actual: 1

Pass: myIterator's property
      Actual: hasCurrent

Pass: typeof myIterator["hasCurrent"]
      Actual: boolean

Pass: myIterator's property
      Actual: moveNext

Pass: typeof myIterator["moveNext"]
      Actual: function

Pass: myIterator["moveNext"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["moveNext"].length
      Actual: 0

Pass: myIterator's property
      Actual: toString

Pass: typeof myIterator["toString"]
      Actual: function

Pass: myIterator["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["toString"].length
      Actual: 0

Pass: number of properties of myIterator
      Actual: 5

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Pink

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Yellow

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: number of members iterated over
      Actual: 2

Comment: myArray.length = 7
Comment: myArrayToVerify.length = 7
Comment: verifyIteratorRange("myIterator", myIterator, myArrayToVerify, 2, 7)
Comment: typeof myIterator: object
Comment: Dump of properties : 
    var myIteratorMembers = [
        ['current', 'string'],
        ['getMany', 'function', 1],
        ['hasCurrent', 'boolean'],
        ['moveNext', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterator
      Actual: object

Pass: myIterator's property
      Actual: current

Pass: typeof myIterator["current"]
      Actual: string

Pass: myIterator's property
      Actual: getMany

Pass: typeof myIterator["getMany"]
      Actual: function

Pass: myIterator["getMany"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myIterator["getMany"].length
      Actual: 1

Pass: myIterator's property
      Actual: hasCurrent

Pass: typeof myIterator["hasCurrent"]
      Actual: boolean

Pass: myIterator's property
      Actual: moveNext

Pass: typeof myIterator["moveNext"]
      Actual: function

Pass: myIterator["moveNext"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["moveNext"].length
      Actual: 0

Pass: myIterator's property
      Actual: toString

Pass: typeof myIterator["toString"]
      Actual: function

Pass: myIterator["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["toString"].length
      Actual: 0

Pass: number of properties of myIterator
      Actual: 5

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Blue

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Red

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Green

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Brown

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Tan

Pass: myIterator.moveNext()
      Actual: false

Pass: myIterator.hasCurrent
      Actual: false

Pass: number of members iterated over
      Actual: 5

Comment: myArray.length = 10;
Comment: myArrayToVerify.length = 10;
Comment: myArrayToVerify = ["Pink", "Yellow", "Blue", "Red", "Green", "Brown", "Tan", "undefined", "undefined", "undefined"];
Comment: verifyIteratorRange("myIterator", myIterator, myArrayToVerify, 7, 10);
Comment: typeof myIterator: object
Comment: Dump of properties : 
    var myIteratorMembers = [
        ['current', 'string'],
        ['getMany', 'function', 1],
        ['hasCurrent', 'boolean'],
        ['moveNext', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterator
      Actual: object

Pass: myIterator's property
      Actual: current

Pass: typeof myIterator["current"]
      Actual: string

Pass: myIterator's property
      Actual: getMany

Pass: typeof myIterator["getMany"]
      Actual: function

Pass: myIterator["getMany"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myIterator["getMany"].length
      Actual: 1

Pass: myIterator's property
      Actual: hasCurrent

Pass: typeof myIterator["hasCurrent"]
      Actual: boolean

Pass: myIterator's property
      Actual: moveNext

Pass: typeof myIterator["moveNext"]
      Actual: function

Pass: myIterator["moveNext"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["moveNext"].length
      Actual: 0

Pass: myIterator's property
      Actual: toString

Pass: typeof myIterator["toString"]
      Actual: function

Pass: myIterator["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["toString"].length
      Actual: 0

Pass: number of properties of myIterator
      Actual: 5

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: undefined

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: undefined

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: undefined

Pass: myIterator.moveNext()
      Actual: false

Pass: myIterator.hasCurrent
      Actual: false

Pass: number of members iterated over
      Actual: 3

Comment: myArray.length = 13
Comment: verify(myIterator.hasCurrent, true, "myIterator.hasCurrent");
Pass: myIterator.hasCurrent
      Actual: true

Comment: myArray.length = 5
Comment: verify(myIterator.hasCurrent, false, "myIterator.hasCurrent")
Pass: myIterator.hasCurrent
      Actual: false

PASS [Test 5: AlterArrayLengthWhileIterating]
=================================================

=================================================
Starting [Test 6: ProjectAlreadyMarshaledJsArrayAsIterable]
Comment: var myArray = ["Pink", "Yellow", "Blue", "Red", "Green", "Brown", "Tan", "Black", "White"];
Comment: var myIterable = (new Animals.Animal(1)).sendBackSameStringIterable(myArray);
Comment: verifyIterable("myIterable", myIterable, myArray)
Comment: typeof myIterable: object
Comment: Dump of properties : 
    var myIterableMembers = [
        ['first', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterable
      Actual: object

Pass: myIterable's property
      Actual: first

Pass: typeof myIterable["first"]
      Actual: function

Pass: myIterable["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterable["first"].length
      Actual: 0

Pass: myIterable's property
      Actual: toString

Pass: typeof myIterable["toString"]
      Actual: function

Pass: myIterable["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterable["toString"].length
      Actual: 0

Pass: number of properties of myIterable
      Actual: 2

Comment: var myIterator = myIterable.first()
Comment: typeof myIterator: object
Comment: Dump of properties : 
    var myIteratorMembers = [
        ['current', 'string'],
        ['getMany', 'function', 1],
        ['hasCurrent', 'boolean'],
        ['moveNext', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterator
      Actual: object

Pass: myIterator's property
      Actual: current

Pass: typeof myIterator["current"]
      Actual: string

Pass: myIterator's property
      Actual: getMany

Pass: typeof myIterator["getMany"]
      Actual: function

Pass: myIterator["getMany"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myIterator["getMany"].length
      Actual: 1

Pass: myIterator's property
      Actual: hasCurrent

Pass: typeof myIterator["hasCurrent"]
      Actual: boolean

Pass: myIterator's property
      Actual: moveNext

Pass: typeof myIterator["moveNext"]
      Actual: function

Pass: myIterator["moveNext"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["moveNext"].length
      Actual: 0

Pass: myIterator's property
      Actual: toString

Pass: typeof myIterator["toString"]
      Actual: function

Pass: myIterator["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["toString"].length
      Actual: 0

Pass: number of properties of myIterator
      Actual: 5

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Pink

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Yellow

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Blue

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Red

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Green

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Brown

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Tan

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Black

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: White

Pass: myIterator.moveNext()
      Actual: false

Pass: myIterator.hasCurrent
      Actual: false

Pass: number of members iterated over
      Actual: 9

Comment: Iterator with getMany
Comment: gotManyItems: 3
Pass: gotManyItems
      Actual: 3

Pass: manyItems[0]
      Actual: Pink

Pass: manyItems[1]
      Actual: Yellow

Pass: manyItems[2]
      Actual: Blue

Comment: gotManyItems: 3
Pass: gotManyItems
      Actual: 3

Pass: manyItems[0]
      Actual: Red

Pass: manyItems[1]
      Actual: Green

Pass: manyItems[2]
      Actual: Brown

Comment: gotManyItems: 3
Pass: gotManyItems
      Actual: 3

Pass: manyItems[0]
      Actual: Tan

Pass: manyItems[1]
      Actual: Black

Pass: manyItems[2]
      Actual: White

Pass: myIterator.hasCurrent
      Actual: false

Pass: number of members iterated over
      Actual: 9

Pass: !Array.isArray(myIterable)
      Actual: true

Pass: myArray !== myIterable
      Actual: true

Comment: myArray[5] = "Purple";
Comment: verifyIterable("myIterable", myIterable, myArray)
Comment: typeof myIterable: object
Comment: Dump of properties : 
    var myIterableMembers = [
        ['first', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterable
      Actual: object

Pass: myIterable's property
      Actual: first

Pass: typeof myIterable["first"]
      Actual: function

Pass: myIterable["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterable["first"].length
      Actual: 0

Pass: myIterable's property
      Actual: toString

Pass: typeof myIterable["toString"]
      Actual: function

Pass: myIterable["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterable["toString"].length
      Actual: 0

Pass: number of properties of myIterable
      Actual: 2

Comment: var myIterator = myIterable.first()
Comment: typeof myIterator: object
Comment: Dump of properties : 
    var myIteratorMembers = [
        ['current', 'string'],
        ['getMany', 'function', 1],
        ['hasCurrent', 'boolean'],
        ['moveNext', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterator
      Actual: object

Pass: myIterator's property
      Actual: current

Pass: typeof myIterator["current"]
      Actual: string

Pass: myIterator's property
      Actual: getMany

Pass: typeof myIterator["getMany"]
      Actual: function

Pass: myIterator["getMany"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myIterator["getMany"].length
      Actual: 1

Pass: myIterator's property
      Actual: hasCurrent

Pass: typeof myIterator["hasCurrent"]
      Actual: boolean

Pass: myIterator's property
      Actual: moveNext

Pass: typeof myIterator["moveNext"]
      Actual: function

Pass: myIterator["moveNext"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["moveNext"].length
      Actual: 0

Pass: myIterator's property
      Actual: toString

Pass: typeof myIterator["toString"]
      Actual: function

Pass: myIterator["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["toString"].length
      Actual: 0

Pass: number of properties of myIterator
      Actual: 5

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Pink

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Yellow

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Blue

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Red

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Green

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Purple

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Tan

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: Black

Pass: myIterator.moveNext()
      Actual: true

Pass: myIterator.hasCurrent
      Actual: true

Pass: myIterator.current
      Actual: White

Pass: myIterator.moveNext()
      Actual: false

Pass: myIterator.hasCurrent
      Actual: false

Pass: number of members iterated over
      Actual: 9

Comment: Iterator with getMany
Comment: gotManyItems: 3
Pass: gotManyItems
      Actual: 3

Pass: manyItems[0]
      Actual: Pink

Pass: manyItems[1]
      Actual: Yellow

Pass: manyItems[2]
      Actual: Blue

Comment: gotManyItems: 3
Pass: gotManyItems
      Actual: 3

Pass: manyItems[0]
      Actual: Red

Pass: manyItems[1]
      Actual: Green

Pass: manyItems[2]
      Actual: Purple

Comment: gotManyItems: 3
Pass: gotManyItems
      Actual: 3

Pass: manyItems[0]
      Actual: Tan

Pass: manyItems[1]
      Actual: Black

Pass: manyItems[2]
      Actual: White

Pass: myIterator.hasCurrent
      Actual: false

Pass: number of members iterated over
      Actual: 9

Pass: !Array.isArray(myIterable)
      Actual: true

Pass: myArray !== myIterable
      Actual: true

PASS [Test 6: ProjectAlreadyMarshaledJsArrayAsIterable]
=================================================

Passed: 6
Failed: 0
