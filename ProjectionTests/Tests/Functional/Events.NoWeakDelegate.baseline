Events tests

=================================================
Starting [Test 1: InvalidAddAndRemoveListener]
Pass: AddEventListener with already registered function
      Actual: undefined

Pass: RemoveEventListener with non existant function
      Actual: undefined

Comment: Calling toaster.makeToast to ensure the legitimate listener is still there
Pass: Number of events handled
      Actual: 1

Pass: RemoveEventListener with already removed handler
      Actual: undefined

Comment: Calling toaster.makeToast to ensure that the ebent listener was removed
Pass: Number of events handled
      Actual: 1

PASS [Test 1: InvalidAddAndRemoveListener]
=================================================

=================================================
Starting [Test 2: Basic]
Pass: ev.message
      Actual: 123

Pass: ev.message
      Actual: 123

Pass: ev.message
      Actual: 123

Pass: toastCompleteCount
      Actual: 3

PASS [Test 2: Basic]
=================================================

=================================================
Starting [Test 3: MultipleListeners]
Comment: Calling toaster.MakeToast, expecting 3 callbacks
Pass: Number of events handled
      Actual: 3

PASS [Test 3: MultipleListeners]
=================================================

=================================================
Starting [Test 4: MultipleEvents]
Comment: Registerting toaststartevent callback
Comment: Registerting toastcompleteevent callback1
Comment: Calling toaster.makeToast
Comment: In Start toasting event callback1
Comment: In Complete toasting event callback: toast.message is 123
Pass: Number of times toaststartevent called
      Actual: 1

Pass: Number of times toastcompleteevents called
      Actual: 1

Comment: Registerting toaststartevent callback
Comment: Calling toaster.makeToast 4 times
Comment: In Start toasting event callback1
Comment: In Start toasting event callback2
Comment: In Complete toasting event callback: toast.message is 123
Comment: In Start toasting event callback1
Comment: In Start toasting event callback2
Comment: In Complete toasting event callback: toast.message is 123
Comment: In Start toasting event callback1
Comment: In Start toasting event callback2
Comment: In Complete toasting event callback: toast.message is 123
Comment: In Start toasting event callback1
Comment: In Start toasting event callback2
Comment: In Complete toasting event callback: toast.message is 123
Pass: Number of times toaststartevent called
      Actual: 8

Pass: Number of times toastcompleteevents called
      Actual: 4

Comment: Removing toaststartevent callback1
Comment: Calling toaster.makeToast
Comment: In Start toasting event callback2
Comment: In Complete toasting event callback: toast.message is 123
Pass: Number of times toaststartevent called
      Actual: 1

Pass: Number of times toastcompleteevents called
      Actual: 1

Comment: Removing toaststartevent callback2
Comment: Calling toaster.makeToast
Comment: In Complete toasting event callback: toast.message is 123
Pass: Number of times toaststartevent called
      Actual: 0

Pass: Number of times toastcompleteevents called
      Actual: 1

Comment: Removing toastcompleteevent callback
Comment: Calling toaster.makeToast
Pass: Number of times toaststartevent called
      Actual: 0

Pass: Number of times toastcompleteevents called
      Actual: 0

PASS [Test 4: MultipleEvents]
=================================================

=================================================
Starting [Test 5: EventsOnInterfaceOnlyWinRTObjects]
Comment: var electricityReporter = toaster.electricityReporter
Pass: electricityReporter.applianceName
      Actual: Toaster

Comment: Registering onSwitchOn event handler
Comment: Registering onSwitchOff event handler
Comment: Calling toaster.makeToast
Comment: *** OnSwitchOn
Pass: ev.target.applianceName
      Actual: Toaster

Pass: ev : eventDetails
      Actual: 123

Comment: *** OnSwitchOff
Pass: ev.target.applianceName
      Actual: Toaster

Pass: ev : eventDetails
      Actual: 123

Pass: ev.detail[1] : unitCount
      Actual: 5

PASS [Test 5: EventsOnInterfaceOnlyWinRTObjects]
=================================================

=================================================
Starting [Test 6: Event Name collision on required interfaces]
Comment: var myRC1WithEvent = new Animals.RC1WithEvent();
Comment: typeof myRC1WithEvent: object
Comment: Dump of properties : 
    var myRC1WithEventMembers = [
        ['Animals.IInterface2WithEvent.onevent2', 'function', 1],
        ['addEventListener', 'function', 2],
        ['handler1', 'function', 2],
        ['invokeDelegate', 'function', 2],
        ['invokeEvent_I1E1', 'function', 1],
        ['invokeEvent_I1E2', 'function', 1],
        ['invokeEvent_I2E1', 'function', 1],
        ['invokeEvent_I2E3', 'function', 1],
        ['onevent1', 'object'],
        ['onevent2', 'object'],
        ['onevent21', 'object'],
        ['onevent3', 'object'],
        ['removeEventListener', 'function', 2],
        ['wasHandler1Invoked', 'boolean'],
        ['toString', 'function', 0],
    ];
Pass: typeof myRC1WithEvent
      Actual: object

Pass: myRC1WithEvent["Animals.IInterface2WithEvent.onevent2"]
      Actual: Animals.IInterface2WithEvent.onevent2

Pass: typeof myRC1WithEvent["Animals.IInterface2WithEvent.onevent2"]
      Actual: function

Pass: myRC1WithEvent["Animals.IInterface2WithEvent.onevent2"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC1WithEvent["Animals.IInterface2WithEvent.onevent2"].length
      Actual: 1

Pass: myRC1WithEvent["addEventListener"]
      Actual: addEventListener

Pass: typeof myRC1WithEvent["addEventListener"]
      Actual: function

Pass: myRC1WithEvent["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC1WithEvent["addEventListener"].length
      Actual: 2

Pass: myRC1WithEvent["handler1"]
      Actual: handler1

Pass: typeof myRC1WithEvent["handler1"]
      Actual: function

Pass: myRC1WithEvent["handler1"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC1WithEvent["handler1"].length
      Actual: 2

Pass: myRC1WithEvent["invokeDelegate"]
      Actual: invokeDelegate

Pass: typeof myRC1WithEvent["invokeDelegate"]
      Actual: function

Pass: myRC1WithEvent["invokeDelegate"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC1WithEvent["invokeDelegate"].length
      Actual: 2

Pass: myRC1WithEvent["invokeEvent_I1E1"]
      Actual: invokeEvent_I1E1

Pass: typeof myRC1WithEvent["invokeEvent_I1E1"]
      Actual: function

Pass: myRC1WithEvent["invokeEvent_I1E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC1WithEvent["invokeEvent_I1E1"].length
      Actual: 1

Pass: myRC1WithEvent["invokeEvent_I1E2"]
      Actual: invokeEvent_I1E2

Pass: typeof myRC1WithEvent["invokeEvent_I1E2"]
      Actual: function

Pass: myRC1WithEvent["invokeEvent_I1E2"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC1WithEvent["invokeEvent_I1E2"].length
      Actual: 1

Pass: myRC1WithEvent["invokeEvent_I2E1"]
      Actual: invokeEvent_I2E1

Pass: typeof myRC1WithEvent["invokeEvent_I2E1"]
      Actual: function

Pass: myRC1WithEvent["invokeEvent_I2E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC1WithEvent["invokeEvent_I2E1"].length
      Actual: 1

Pass: myRC1WithEvent["invokeEvent_I2E3"]
      Actual: invokeEvent_I2E3

Pass: typeof myRC1WithEvent["invokeEvent_I2E3"]
      Actual: function

Pass: myRC1WithEvent["invokeEvent_I2E3"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC1WithEvent["invokeEvent_I2E3"].length
      Actual: 1

Pass: myRC1WithEvent["onevent1"]
      Actual: onevent1

Pass: typeof myRC1WithEvent["onevent1"]
      Actual: object

Pass: myRC1WithEvent["onevent2"]
      Actual: onevent2

Pass: typeof myRC1WithEvent["onevent2"]
      Actual: object

Pass: myRC1WithEvent["onevent21"]
      Actual: onevent21

Pass: typeof myRC1WithEvent["onevent21"]
      Actual: object

Pass: myRC1WithEvent["onevent3"]
      Actual: onevent3

Pass: typeof myRC1WithEvent["onevent3"]
      Actual: object

Pass: myRC1WithEvent["removeEventListener"]
      Actual: removeEventListener

Pass: typeof myRC1WithEvent["removeEventListener"]
      Actual: function

Pass: myRC1WithEvent["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC1WithEvent["removeEventListener"].length
      Actual: 2

Pass: myRC1WithEvent["wasHandler1Invoked"]
      Actual: wasHandler1Invoked

Pass: typeof myRC1WithEvent["wasHandler1Invoked"]
      Actual: boolean

Pass: myRC1WithEvent["toString"]
      Actual: toString

Pass: typeof myRC1WithEvent["toString"]
      Actual: function

Pass: myRC1WithEvent["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myRC1WithEvent["toString"].length
      Actual: 0

Pass: number of members of myRC1WithEvent
      Actual: 15

Comment: myRC1WithEvent.invokeEvent_I1E1(myString);
Comment: *** Event Start : Interface1::Event1
Pass: ev.target
      Actual: [object Animals.RC1WithEvent]

Pass: ev
      Actual: This is IInterface1WithEvent::Event1

Comment: *** Event Complete : Interface1::Event1
Comment: myRC1WithEvent.invokeEvent_I2E1(myString);
Comment: *** Event Start : Interface2::Event1
Pass: ev.target
      Actual: [object Animals.RC1WithEvent]

Pass: ev
      Actual: This is IInterface2WithEvent::Event1

Comment: *** Event Complete : Interface2::Event1
Comment: myRC1WithEvent.invokeEvent_I1E1(myString);
Comment: *** Event Start : Interface1::Event1
Pass: ev.target
      Actual: [object Animals.RC1WithEvent]

Pass: ev
      Actual: This is IInterface1WithEvent::Event1

Comment: *** Event Complete : Interface1::Event1
Comment: *** Event Start : Generic callback
Pass: ev.target
      Actual: [object Animals.RC1WithEvent]

Pass: ev
      Actual: This is IInterface1WithEvent::Event1

Comment: *** Event Complete : Generic callback
Comment: myRC1WithEvent.invokeEvent_I1E2(myString);
Comment: *** Event Start : Generic callback
Pass: ev.target
      Actual: [object Animals.RC1WithEvent]

Pass: ev
      Actual: This is IInterface1WithEvent::Event2

Comment: *** Event Complete : Generic callback
Comment: myRC1WithEvent.invokeEvent_I2E1(myString);
Comment: myRC1WithEvent.invokeEvent_I1E1(myString);
Comment: *** Event Start : Interface1::Event1
Pass: ev.target
      Actual: [object Animals.RC1WithEvent]

Pass: ev
      Actual: This is IInterface1WithEvent::Event1

Comment: *** Event Complete : Interface1::Event1
Comment: myRC1WithEvent.invokeEvent_I1E2(myString);
Comment: myRC1WithEvent.invokeEvent_I1E1(myString);
PASS [Test 6: Event Name collision on required interfaces]
=================================================

=================================================
Starting [Test 7: Event Name collision on a static and required interface]
Comment: var staticRC2WithEvent = Animals.RC2WithEvent;
Comment: typeof staticRC2WithEvent: function
Comment: Dump of properties : 
    var staticRC2WithEventMembers = [
        ['addEventListener', 'function', 2],
        ['invokeEvent_I1E1', 'function', 1],
        ['invokeEvent_I1E2', 'function', 1],
        ['onevent1', 'object'],
        ['onevent2', 'object'],
        ['removeEventListener', 'function', 2],
    ];
Pass: typeof staticRC2WithEvent
      Actual: function

Pass: staticRC2WithEvent["addEventListener"]
      Actual: addEventListener

Pass: typeof staticRC2WithEvent["addEventListener"]
      Actual: function

Pass: staticRC2WithEvent["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: staticRC2WithEvent["addEventListener"].length
      Actual: 2

Pass: staticRC2WithEvent["invokeEvent_I1E1"]
      Actual: invokeEvent_I1E1

Pass: typeof staticRC2WithEvent["invokeEvent_I1E1"]
      Actual: function

Pass: staticRC2WithEvent["invokeEvent_I1E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: staticRC2WithEvent["invokeEvent_I1E1"].length
      Actual: 1

Pass: staticRC2WithEvent["invokeEvent_I1E2"]
      Actual: invokeEvent_I1E2

Pass: typeof staticRC2WithEvent["invokeEvent_I1E2"]
      Actual: function

Pass: staticRC2WithEvent["invokeEvent_I1E2"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: staticRC2WithEvent["invokeEvent_I1E2"].length
      Actual: 1

Pass: staticRC2WithEvent["onevent1"]
      Actual: onevent1

Pass: typeof staticRC2WithEvent["onevent1"]
      Actual: object

Pass: staticRC2WithEvent["onevent2"]
      Actual: onevent2

Pass: typeof staticRC2WithEvent["onevent2"]
      Actual: object

Pass: staticRC2WithEvent["removeEventListener"]
      Actual: removeEventListener

Pass: typeof staticRC2WithEvent["removeEventListener"]
      Actual: function

Pass: staticRC2WithEvent["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: staticRC2WithEvent["removeEventListener"].length
      Actual: 2

Pass: number of members of staticRC2WithEvent
      Actual: 6

Comment: var myRC2WithEvent = new Animals.RC2WithEvent();
Comment: typeof myRC2WithEvent: object
Comment: Dump of properties : 
    var myRC2WithEventMembers = [
        ['addEventListener', 'function', 2],
        ['handler1', 'function', 2],
        ['invokeDelegate', 'function', 2],
        ['invokeEvent_I2E1', 'function', 1],
        ['invokeEvent_I2E3', 'function', 1],
        ['onevent2', 'function', 1],
        ['onevent21', 'object'],
        ['onevent3', 'object'],
        ['removeEventListener', 'function', 2],
        ['wasHandler1Invoked', 'boolean'],
        ['toString', 'function', 0],
    ];
Pass: typeof myRC2WithEvent
      Actual: object

Pass: myRC2WithEvent["addEventListener"]
      Actual: addEventListener

Pass: typeof myRC2WithEvent["addEventListener"]
      Actual: function

Pass: myRC2WithEvent["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC2WithEvent["addEventListener"].length
      Actual: 2

Pass: myRC2WithEvent["handler1"]
      Actual: handler1

Pass: typeof myRC2WithEvent["handler1"]
      Actual: function

Pass: myRC2WithEvent["handler1"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC2WithEvent["handler1"].length
      Actual: 2

Pass: myRC2WithEvent["invokeDelegate"]
      Actual: invokeDelegate

Pass: typeof myRC2WithEvent["invokeDelegate"]
      Actual: function

Pass: myRC2WithEvent["invokeDelegate"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC2WithEvent["invokeDelegate"].length
      Actual: 2

Pass: myRC2WithEvent["invokeEvent_I2E1"]
      Actual: invokeEvent_I2E1

Pass: typeof myRC2WithEvent["invokeEvent_I2E1"]
      Actual: function

Pass: myRC2WithEvent["invokeEvent_I2E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC2WithEvent["invokeEvent_I2E1"].length
      Actual: 1

Pass: myRC2WithEvent["invokeEvent_I2E3"]
      Actual: invokeEvent_I2E3

Pass: typeof myRC2WithEvent["invokeEvent_I2E3"]
      Actual: function

Pass: myRC2WithEvent["invokeEvent_I2E3"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC2WithEvent["invokeEvent_I2E3"].length
      Actual: 1

Pass: myRC2WithEvent["onevent2"]
      Actual: onevent2

Pass: typeof myRC2WithEvent["onevent2"]
      Actual: function

Pass: myRC2WithEvent["onevent2"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC2WithEvent["onevent2"].length
      Actual: 1

Pass: myRC2WithEvent["onevent21"]
      Actual: onevent21

Pass: typeof myRC2WithEvent["onevent21"]
      Actual: object

Pass: myRC2WithEvent["onevent3"]
      Actual: onevent3

Pass: typeof myRC2WithEvent["onevent3"]
      Actual: object

Pass: myRC2WithEvent["removeEventListener"]
      Actual: removeEventListener

Pass: typeof myRC2WithEvent["removeEventListener"]
      Actual: function

Pass: myRC2WithEvent["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC2WithEvent["removeEventListener"].length
      Actual: 2

Pass: myRC2WithEvent["wasHandler1Invoked"]
      Actual: wasHandler1Invoked

Pass: typeof myRC2WithEvent["wasHandler1Invoked"]
      Actual: boolean

Pass: myRC2WithEvent["toString"]
      Actual: toString

Pass: typeof myRC2WithEvent["toString"]
      Actual: function

Pass: myRC2WithEvent["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myRC2WithEvent["toString"].length
      Actual: 0

Pass: number of members of myRC2WithEvent
      Actual: 11

Comment: myRC2WithEvent.invokeEvent_I2E1(myString);
Comment: *** Event Start : Interface2::Event1
Pass: ev.target
      Actual: [object Animals.RC2WithEvent]

Pass: ev
      Actual: This is IInterface2WithEvent::Event1

Comment: *** Event Complete : Interface2::Event1
Comment: staticRC2WithEvent.invokeEvent_I1E1(myString);
Comment: *** Event Start : Interface1::Event1
Pass: ev
      Actual: This is IInterface1WithEvent::Event1

Comment: *** Event Complete : Interface1::Event1
Comment: myRC2WithEvent.invokeEvent_I2E1(myString);
Comment: *** Event Start : Interface2::Event1
Pass: ev.target
      Actual: [object Animals.RC2WithEvent]

Pass: ev
      Actual: This is IInterface2WithEvent::Event1

Comment: *** Event Complete : Interface2::Event1
Comment: *** Event Start : Generic callback
Pass: ev.target
      Actual: [object Animals.RC2WithEvent]

Pass: ev
      Actual: This is IInterface2WithEvent::Event1

Comment: *** Event Complete : Generic callback
Comment: myRC2WithEvent.invokeEvent_I2E3(myString);
Comment: *** Event Start : Generic callback
Pass: ev.target
      Actual: [object Animals.RC2WithEvent]

Pass: ev
      Actual: This is IInterface2WithEvent::Event3

Comment: *** Event Complete : Generic callback
Comment: staticRC2WithEvent.invokeEvent_I1E1(myString);
Comment: myRC2WithEvent.invokeEvent_I2E1(myString);
Comment: *** Event Start : Interface2::Event1
Pass: ev.target
      Actual: [object Animals.RC2WithEvent]

Pass: ev
      Actual: This is IInterface2WithEvent::Event1

Comment: *** Event Complete : Interface2::Event1
Comment: myRC2WithEvent.invokeEvent_I2E3(myString);
Comment: myRC2WithEvent.invokeEvent_I2E1(myString);
PASS [Test 7: Event Name collision on a static and required interface]
=================================================

=================================================
Starting [Test 8: Interface with event and addEventListener method]
Comment: var myRC3WithEvent = new Animals.RC3WithEvent();
Comment: typeof myRC3WithEvent: object
Comment: Dump of properties : 
    var myRC3WithEventMembers = [
        ['Animals.IInterface3WithEvent.addEventListener', 'function', 1],
        ['addEventListener', 'function', 2],
        ['invokeEvent_I3E1', 'function', 1],
        ['invokeEvent_I3E5', 'function', 1],
        ['onevent31', 'object'],
        ['onevent5', 'object'],
        ['removeEventListener', 'function', 2],
        ['toString', 'function', 0],
    ];
Pass: typeof myRC3WithEvent
      Actual: object

Pass: myRC3WithEvent["Animals.IInterface3WithEvent.addEventListener"]
      Actual: Animals.IInterface3WithEvent.addEventListener

Pass: typeof myRC3WithEvent["Animals.IInterface3WithEvent.addEventListener"]
      Actual: function

Pass: myRC3WithEvent["Animals.IInterface3WithEvent.addEventListener"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC3WithEvent["Animals.IInterface3WithEvent.addEventListener"].length
      Actual: 1

Pass: myRC3WithEvent["addEventListener"]
      Actual: addEventListener

Pass: typeof myRC3WithEvent["addEventListener"]
      Actual: function

Pass: myRC3WithEvent["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC3WithEvent["addEventListener"].length
      Actual: 2

Pass: myRC3WithEvent["invokeEvent_I3E1"]
      Actual: invokeEvent_I3E1

Pass: typeof myRC3WithEvent["invokeEvent_I3E1"]
      Actual: function

Pass: myRC3WithEvent["invokeEvent_I3E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC3WithEvent["invokeEvent_I3E1"].length
      Actual: 1

Pass: myRC3WithEvent["invokeEvent_I3E5"]
      Actual: invokeEvent_I3E5

Pass: typeof myRC3WithEvent["invokeEvent_I3E5"]
      Actual: function

Pass: myRC3WithEvent["invokeEvent_I3E5"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC3WithEvent["invokeEvent_I3E5"].length
      Actual: 1

Pass: myRC3WithEvent["onevent31"]
      Actual: onevent31

Pass: typeof myRC3WithEvent["onevent31"]
      Actual: object

Pass: myRC3WithEvent["onevent5"]
      Actual: onevent5

Pass: typeof myRC3WithEvent["onevent5"]
      Actual: object

Pass: myRC3WithEvent["removeEventListener"]
      Actual: removeEventListener

Pass: typeof myRC3WithEvent["removeEventListener"]
      Actual: function

Pass: myRC3WithEvent["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC3WithEvent["removeEventListener"].length
      Actual: 2

Pass: myRC3WithEvent["toString"]
      Actual: toString

Pass: typeof myRC3WithEvent["toString"]
      Actual: function

Pass: myRC3WithEvent["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myRC3WithEvent["toString"].length
      Actual: 0

Pass: number of members of myRC3WithEvent
      Actual: 8

Comment: myRC3WithEvent.invokeEvent_I3E1(myString);
Comment: *** Event Start : Interface3::Event1
Pass: ev.target
      Actual: [object Animals.RC3WithEvent]

Pass: ev
      Actual: This is IInterface3WithEvent::Event1

Comment: *** Event Complete : Interface3::Event1
Pass: myRC3WithEvent["Animals.IInterface3WithEvent.addEventListener"](myString)
      Actual: This is IInterface3WithEvent::addListener method

Comment: myRC3WithEvent.invokeEvent_I3E1(myString);
PASS [Test 8: Interface with event and addEventListener method]
=================================================

=================================================
Starting [Test 9: Rc with interfaces with event and addEventListener method]
Comment: var myRC4WithEvent = new Animals.RC4WithEvent();
Comment: typeof myRC4WithEvent: object
Comment: Dump of properties : 
    var myRC4WithEventMembers = [
        ['Animals.IInterface2WithEvent.onevent2', 'function', 1],
        ['Animals.IInterface3WithEvent.addEventListener', 'function', 1],
        ['addEventListener', 'function', 2],
        ['handler1', 'function', 2],
        ['invokeDelegate', 'function', 2],
        ['invokeEvent_I1E1', 'function', 1],
        ['invokeEvent_I1E2', 'function', 1],
        ['invokeEvent_I2E1', 'function', 1],
        ['invokeEvent_I2E3', 'function', 1],
        ['invokeEvent_I3E1', 'function', 1],
        ['invokeEvent_I3E5', 'function', 1],
        ['onevent1', 'object'],
        ['onevent2', 'object'],
        ['onevent21', 'object'],
        ['onevent3', 'object'],
        ['onevent31', 'object'],
        ['onevent5', 'object'],
        ['removeEventListener', 'function', 2],
        ['wasHandler1Invoked', 'boolean'],
        ['toString', 'function', 0],
    ];
Pass: typeof myRC4WithEvent
      Actual: object

Pass: myRC4WithEvent["Animals.IInterface2WithEvent.onevent2"]
      Actual: Animals.IInterface2WithEvent.onevent2

Pass: typeof myRC4WithEvent["Animals.IInterface2WithEvent.onevent2"]
      Actual: function

Pass: myRC4WithEvent["Animals.IInterface2WithEvent.onevent2"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC4WithEvent["Animals.IInterface2WithEvent.onevent2"].length
      Actual: 1

Pass: myRC4WithEvent["Animals.IInterface3WithEvent.addEventListener"]
      Actual: Animals.IInterface3WithEvent.addEventListener

Pass: typeof myRC4WithEvent["Animals.IInterface3WithEvent.addEventListener"]
      Actual: function

Pass: myRC4WithEvent["Animals.IInterface3WithEvent.addEventListener"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC4WithEvent["Animals.IInterface3WithEvent.addEventListener"].length
      Actual: 1

Pass: myRC4WithEvent["addEventListener"]
      Actual: addEventListener

Pass: typeof myRC4WithEvent["addEventListener"]
      Actual: function

Pass: myRC4WithEvent["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC4WithEvent["addEventListener"].length
      Actual: 2

Pass: myRC4WithEvent["handler1"]
      Actual: handler1

Pass: typeof myRC4WithEvent["handler1"]
      Actual: function

Pass: myRC4WithEvent["handler1"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC4WithEvent["handler1"].length
      Actual: 2

Pass: myRC4WithEvent["invokeDelegate"]
      Actual: invokeDelegate

Pass: typeof myRC4WithEvent["invokeDelegate"]
      Actual: function

Pass: myRC4WithEvent["invokeDelegate"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC4WithEvent["invokeDelegate"].length
      Actual: 2

Pass: myRC4WithEvent["invokeEvent_I1E1"]
      Actual: invokeEvent_I1E1

Pass: typeof myRC4WithEvent["invokeEvent_I1E1"]
      Actual: function

Pass: myRC4WithEvent["invokeEvent_I1E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC4WithEvent["invokeEvent_I1E1"].length
      Actual: 1

Pass: myRC4WithEvent["invokeEvent_I1E2"]
      Actual: invokeEvent_I1E2

Pass: typeof myRC4WithEvent["invokeEvent_I1E2"]
      Actual: function

Pass: myRC4WithEvent["invokeEvent_I1E2"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC4WithEvent["invokeEvent_I1E2"].length
      Actual: 1

Pass: myRC4WithEvent["invokeEvent_I2E1"]
      Actual: invokeEvent_I2E1

Pass: typeof myRC4WithEvent["invokeEvent_I2E1"]
      Actual: function

Pass: myRC4WithEvent["invokeEvent_I2E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC4WithEvent["invokeEvent_I2E1"].length
      Actual: 1

Pass: myRC4WithEvent["invokeEvent_I2E3"]
      Actual: invokeEvent_I2E3

Pass: typeof myRC4WithEvent["invokeEvent_I2E3"]
      Actual: function

Pass: myRC4WithEvent["invokeEvent_I2E3"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC4WithEvent["invokeEvent_I2E3"].length
      Actual: 1

Pass: myRC4WithEvent["invokeEvent_I3E1"]
      Actual: invokeEvent_I3E1

Pass: typeof myRC4WithEvent["invokeEvent_I3E1"]
      Actual: function

Pass: myRC4WithEvent["invokeEvent_I3E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC4WithEvent["invokeEvent_I3E1"].length
      Actual: 1

Pass: myRC4WithEvent["invokeEvent_I3E5"]
      Actual: invokeEvent_I3E5

Pass: typeof myRC4WithEvent["invokeEvent_I3E5"]
      Actual: function

Pass: myRC4WithEvent["invokeEvent_I3E5"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC4WithEvent["invokeEvent_I3E5"].length
      Actual: 1

Pass: myRC4WithEvent["onevent1"]
      Actual: onevent1

Pass: typeof myRC4WithEvent["onevent1"]
      Actual: object

Pass: myRC4WithEvent["onevent2"]
      Actual: onevent2

Pass: typeof myRC4WithEvent["onevent2"]
      Actual: object

Pass: myRC4WithEvent["onevent21"]
      Actual: onevent21

Pass: typeof myRC4WithEvent["onevent21"]
      Actual: object

Pass: myRC4WithEvent["onevent3"]
      Actual: onevent3

Pass: typeof myRC4WithEvent["onevent3"]
      Actual: object

Pass: myRC4WithEvent["onevent31"]
      Actual: onevent31

Pass: typeof myRC4WithEvent["onevent31"]
      Actual: object

Pass: myRC4WithEvent["onevent5"]
      Actual: onevent5

Pass: typeof myRC4WithEvent["onevent5"]
      Actual: object

Pass: myRC4WithEvent["removeEventListener"]
      Actual: removeEventListener

Pass: typeof myRC4WithEvent["removeEventListener"]
      Actual: function

Pass: myRC4WithEvent["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC4WithEvent["removeEventListener"].length
      Actual: 2

Pass: myRC4WithEvent["wasHandler1Invoked"]
      Actual: wasHandler1Invoked

Pass: typeof myRC4WithEvent["wasHandler1Invoked"]
      Actual: boolean

Pass: myRC4WithEvent["toString"]
      Actual: toString

Pass: typeof myRC4WithEvent["toString"]
      Actual: function

Pass: myRC4WithEvent["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myRC4WithEvent["toString"].length
      Actual: 0

Pass: number of members of myRC4WithEvent
      Actual: 20

Comment: myRC4WithEvent.invokeEvent_I1E1(myString);
Comment: *** Event Start
Pass: ev.target
      Actual: [object Animals.RC4WithEvent]

Pass: ev
      Actual: This is IInterface1WithEvent::Event1

Comment: *** Event Complete
Comment: myRC4WithEvent.invokeEvent_I2E1(myString);
Comment: *** Event Start
Pass: ev.target
      Actual: [object Animals.RC4WithEvent]

Pass: ev
      Actual: This is IInterface2WithEvent::Event1

Comment: *** Event Complete
Comment: myRC4WithEvent.invokeEvent_I3E1(myString);
Comment: *** Event Start
Pass: ev.target
      Actual: [object Animals.RC4WithEvent]

Pass: ev
      Actual: This is IInterface3WithEvent::Event1

Comment: *** Event Complete
Comment: myRC4WithEvent.invokeEvent_I1E2(myString);
Comment: *** Event Start
Pass: ev.target
      Actual: [object Animals.RC4WithEvent]

Pass: ev
      Actual: This is IInterface1WithEvent::Event2

Comment: *** Event Complete
Comment: myRC4WithEvent.invokeEvent_I2E3(myString);
Comment: *** Event Start
Pass: ev.target
      Actual: [object Animals.RC4WithEvent]

Pass: ev
      Actual: This is IInterface2WithEvent::Event3

Comment: *** Event Complete
Comment: myRC4WithEvent.invokeEvent_I3E5(myString);
Comment: *** Event Start
Pass: ev.target
      Actual: [object Animals.RC4WithEvent]

Pass: ev
      Actual: This is IInterface3WithEvent::Event5

Comment: *** Event Complete
Pass: myRC4WithEvent["Animals.IInterface3WithEvent.addEventListener"](myString)
      Actual: This is IInterface3WithEvent::addListener method

Comment: myRC4WithEvent.invokeEvent_I1E1(myString);
Comment: myRC4WithEvent.invokeEvent_I2E1(myString);
Comment: myRC4WithEvent.invokeEvent_I3E1(myString);
Comment: myRC4WithEvent.invokeEvent_I1E2(myString);
Comment: myRC4WithEvent.invokeEvent_I2E3(myString);
Comment: myRC4WithEvent.invokeEvent_I3E5(myString);
Pass: myRC4WithEvent["Animals.IInterface3WithEvent.addEventListener"](myString)
      Actual: This is IInterface3WithEvent::addListener method

PASS [Test 9: Rc with interfaces with event and addEventListener method]
=================================================

=================================================
Starting [Test 10: Event Name collision on a static interface with method addEventListner]
Comment: var staticRC5WithEvent = Animals.RC5WithEvent;
Comment: typeof staticRC5WithEvent: function
Comment: Dump of properties : 
    var staticRC5WithEventMembers = [
        ['Animals.IInterface3WithEvent.addEventListener', 'function', 1],
        ['addEventListener', 'function', 2],
        ['invokeEvent_I3E1', 'function', 1],
        ['invokeEvent_I3E5', 'function', 1],
        ['onevent31', 'object'],
        ['onevent5', 'object'],
        ['removeEventListener', 'function', 2],
    ];
Pass: typeof staticRC5WithEvent
      Actual: function

Pass: staticRC5WithEvent["Animals.IInterface3WithEvent.addEventListener"]
      Actual: Animals.IInterface3WithEvent.addEventListener

Pass: typeof staticRC5WithEvent["Animals.IInterface3WithEvent.addEventListener"]
      Actual: function

Pass: staticRC5WithEvent["Animals.IInterface3WithEvent.addEventListener"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: staticRC5WithEvent["Animals.IInterface3WithEvent.addEventListener"].length
      Actual: 1

Pass: staticRC5WithEvent["addEventListener"]
      Actual: addEventListener

Pass: typeof staticRC5WithEvent["addEventListener"]
      Actual: function

Pass: staticRC5WithEvent["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: staticRC5WithEvent["addEventListener"].length
      Actual: 2

Pass: staticRC5WithEvent["invokeEvent_I3E1"]
      Actual: invokeEvent_I3E1

Pass: typeof staticRC5WithEvent["invokeEvent_I3E1"]
      Actual: function

Pass: staticRC5WithEvent["invokeEvent_I3E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: staticRC5WithEvent["invokeEvent_I3E1"].length
      Actual: 1

Pass: staticRC5WithEvent["invokeEvent_I3E5"]
      Actual: invokeEvent_I3E5

Pass: typeof staticRC5WithEvent["invokeEvent_I3E5"]
      Actual: function

Pass: staticRC5WithEvent["invokeEvent_I3E5"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: staticRC5WithEvent["invokeEvent_I3E5"].length
      Actual: 1

Pass: staticRC5WithEvent["onevent31"]
      Actual: onevent31

Pass: typeof staticRC5WithEvent["onevent31"]
      Actual: object

Pass: staticRC5WithEvent["onevent5"]
      Actual: onevent5

Pass: typeof staticRC5WithEvent["onevent5"]
      Actual: object

Pass: staticRC5WithEvent["removeEventListener"]
      Actual: removeEventListener

Pass: typeof staticRC5WithEvent["removeEventListener"]
      Actual: function

Pass: staticRC5WithEvent["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: staticRC5WithEvent["removeEventListener"].length
      Actual: 2

Pass: number of members of staticRC5WithEvent
      Actual: 7

Comment: var myRC5WithEvent = new Animals.RC5WithEvent();
Comment: typeof myRC5WithEvent: object
Comment: Dump of properties : 
    var myRC5WithEventMembers = [
        ['Animals.IInterface2WithEvent.onevent2', 'function', 1],
        ['addEventListener', 'function', 2],
        ['handler1', 'function', 2],
        ['invokeDelegate', 'function', 2],
        ['invokeEvent_I1E1', 'function', 1],
        ['invokeEvent_I1E2', 'function', 1],
        ['invokeEvent_I2E1', 'function', 1],
        ['invokeEvent_I2E3', 'function', 1],
        ['onevent1', 'object'],
        ['onevent2', 'object'],
        ['onevent21', 'object'],
        ['onevent3', 'object'],
        ['removeEventListener', 'function', 2],
        ['wasHandler1Invoked', 'boolean'],
        ['toString', 'function', 0],
    ];
Pass: typeof myRC5WithEvent
      Actual: object

Pass: myRC5WithEvent["Animals.IInterface2WithEvent.onevent2"]
      Actual: Animals.IInterface2WithEvent.onevent2

Pass: typeof myRC5WithEvent["Animals.IInterface2WithEvent.onevent2"]
      Actual: function

Pass: myRC5WithEvent["Animals.IInterface2WithEvent.onevent2"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC5WithEvent["Animals.IInterface2WithEvent.onevent2"].length
      Actual: 1

Pass: myRC5WithEvent["addEventListener"]
      Actual: addEventListener

Pass: typeof myRC5WithEvent["addEventListener"]
      Actual: function

Pass: myRC5WithEvent["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC5WithEvent["addEventListener"].length
      Actual: 2

Pass: myRC5WithEvent["handler1"]
      Actual: handler1

Pass: typeof myRC5WithEvent["handler1"]
      Actual: function

Pass: myRC5WithEvent["handler1"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC5WithEvent["handler1"].length
      Actual: 2

Pass: myRC5WithEvent["invokeDelegate"]
      Actual: invokeDelegate

Pass: typeof myRC5WithEvent["invokeDelegate"]
      Actual: function

Pass: myRC5WithEvent["invokeDelegate"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC5WithEvent["invokeDelegate"].length
      Actual: 2

Pass: myRC5WithEvent["invokeEvent_I1E1"]
      Actual: invokeEvent_I1E1

Pass: typeof myRC5WithEvent["invokeEvent_I1E1"]
      Actual: function

Pass: myRC5WithEvent["invokeEvent_I1E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC5WithEvent["invokeEvent_I1E1"].length
      Actual: 1

Pass: myRC5WithEvent["invokeEvent_I1E2"]
      Actual: invokeEvent_I1E2

Pass: typeof myRC5WithEvent["invokeEvent_I1E2"]
      Actual: function

Pass: myRC5WithEvent["invokeEvent_I1E2"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC5WithEvent["invokeEvent_I1E2"].length
      Actual: 1

Pass: myRC5WithEvent["invokeEvent_I2E1"]
      Actual: invokeEvent_I2E1

Pass: typeof myRC5WithEvent["invokeEvent_I2E1"]
      Actual: function

Pass: myRC5WithEvent["invokeEvent_I2E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC5WithEvent["invokeEvent_I2E1"].length
      Actual: 1

Pass: myRC5WithEvent["invokeEvent_I2E3"]
      Actual: invokeEvent_I2E3

Pass: typeof myRC5WithEvent["invokeEvent_I2E3"]
      Actual: function

Pass: myRC5WithEvent["invokeEvent_I2E3"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC5WithEvent["invokeEvent_I2E3"].length
      Actual: 1

Pass: myRC5WithEvent["onevent1"]
      Actual: onevent1

Pass: typeof myRC5WithEvent["onevent1"]
      Actual: object

Pass: myRC5WithEvent["onevent2"]
      Actual: onevent2

Pass: typeof myRC5WithEvent["onevent2"]
      Actual: object

Pass: myRC5WithEvent["onevent21"]
      Actual: onevent21

Pass: typeof myRC5WithEvent["onevent21"]
      Actual: object

Pass: myRC5WithEvent["onevent3"]
      Actual: onevent3

Pass: typeof myRC5WithEvent["onevent3"]
      Actual: object

Pass: myRC5WithEvent["removeEventListener"]
      Actual: removeEventListener

Pass: typeof myRC5WithEvent["removeEventListener"]
      Actual: function

Pass: myRC5WithEvent["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC5WithEvent["removeEventListener"].length
      Actual: 2

Pass: myRC5WithEvent["wasHandler1Invoked"]
      Actual: wasHandler1Invoked

Pass: typeof myRC5WithEvent["wasHandler1Invoked"]
      Actual: boolean

Pass: myRC5WithEvent["toString"]
      Actual: toString

Pass: typeof myRC5WithEvent["toString"]
      Actual: function

Pass: myRC5WithEvent["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myRC5WithEvent["toString"].length
      Actual: 0

Pass: number of members of myRC5WithEvent
      Actual: 15

Comment: myRC5WithEvent.invokeEvent_I1E1(myString);
Comment: *** Event Start
Pass: ev
      Actual: This is IInterface1WithEvent::Event1

Comment: *** Event Complete
Comment: myRC5WithEvent.invokeEvent_I2E1(myString);
Comment: *** Event Start
Pass: ev
      Actual: This is IInterface2WithEvent::Event1

Comment: *** Event Complete
Comment: myRC5WithEvent.invokeEvent_I1E2(myString);
Comment: *** Event Start
Pass: ev
      Actual: This is IInterface1WithEvent::Event2

Comment: *** Event Complete
Comment: myRC5WithEvent.invokeEvent_I2E3(myString);
Comment: *** Event Start
Pass: ev
      Actual: This is IInterface2WithEvent::Event3

Comment: *** Event Complete
Comment: staticRC5WithEvent.invokeEvent_I3E1(myString);
Comment: *** Event Start
Pass: ev
      Actual: This is IInterface3WithEvent::Event1

Comment: *** Event Complete
Comment: staticRC5WithEvent.invokeEvent_I3E5(myString);
Comment: *** Event Start
Pass: ev
      Actual: This is IInterface3WithEvent::Event5

Comment: *** Event Complete
Pass: staticRC5WithEvent["Animals.IInterface3WithEvent.addEventListener"](myString)
      Actual: This is IInterface3WithEvent::addListener method

Comment: myRC5WithEvent.invokeEvent_I1E1(myString);
Comment: myRC5WithEvent.invokeEvent_I2E1(myString);
Comment: myRC5WithEvent.invokeEvent_I1E2(myString);
Comment: myRC5WithEvent.invokeEvent_I2E3(myString);
Comment: staticRC5WithEvent.invokeEvent_I3E1(myString);
Comment: staticRC5WithEvent.invokeEvent_I3E5(myString);
Pass: staticRC5WithEvent["Animals.IInterface3WithEvent.addEventListener"](myString)
      Actual: This is IInterface3WithEvent::addListener method

Comment: Add event handler that we wont remove and see if script context can close property
Comment: Invoke method and check the event handler is set
Comment: *** Event1 Start
Pass: ev
      Actual: This is IInterface3WithEvent::Event1

Comment: *** Event1 Complete
PASS [Test 10: Event Name collision on a static interface with method addEventListner]
=================================================

=================================================
Starting [Test 11: Event Name collision over multiple level requires]
Comment: var myRC6WithEvent = new Animals.RC6WithEvent();
Comment: typeof myRC6WithEvent: object
Comment: Dump of properties : 
    var myRC6WithEventMembers = [
        ['Animals.IInterface1WithEvent.onevent1', 'object'],
        ['Animals.IInterface2WithEvent.onevent2', 'function', 1],
        ['Animals.IInterface3WithEvent.addEventListener', 'function', 1],
        ['Animals.IInterface4WithEvent.onevent1', 'object'],
        ['addEventListener', 'function', 2],
        ['handler1', 'function', 2],
        ['invokeDelegate', 'function', 2],
        ['invokeEvent_I1E1', 'function', 1],
        ['invokeEvent_I1E2', 'function', 1],
        ['invokeEvent_I2E1', 'function', 1],
        ['invokeEvent_I2E3', 'function', 1],
        ['invokeEvent_I3E1', 'function', 1],
        ['invokeEvent_I3E5', 'function', 1],
        ['invokeEvent_I4E1', 'function', 1],
        ['onevent1', 'function', 1],
        ['onevent2', 'object'],
        ['onevent21', 'object'],
        ['onevent3', 'object'],
        ['onevent31', 'object'],
        ['onevent5', 'object'],
        ['removeEventListener', 'function', 2],
        ['wasHandler1Invoked', 'boolean'],
        ['toString', 'function', 0],
    ];
Pass: typeof myRC6WithEvent
      Actual: object

Pass: myRC6WithEvent["Animals.IInterface1WithEvent.onevent1"]
      Actual: Animals.IInterface1WithEvent.onevent1

Pass: typeof myRC6WithEvent["Animals.IInterface1WithEvent.onevent1"]
      Actual: object

Pass: myRC6WithEvent["Animals.IInterface2WithEvent.onevent2"]
      Actual: Animals.IInterface2WithEvent.onevent2

Pass: typeof myRC6WithEvent["Animals.IInterface2WithEvent.onevent2"]
      Actual: function

Pass: myRC6WithEvent["Animals.IInterface2WithEvent.onevent2"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC6WithEvent["Animals.IInterface2WithEvent.onevent2"].length
      Actual: 1

Pass: myRC6WithEvent["Animals.IInterface3WithEvent.addEventListener"]
      Actual: Animals.IInterface3WithEvent.addEventListener

Pass: typeof myRC6WithEvent["Animals.IInterface3WithEvent.addEventListener"]
      Actual: function

Pass: myRC6WithEvent["Animals.IInterface3WithEvent.addEventListener"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC6WithEvent["Animals.IInterface3WithEvent.addEventListener"].length
      Actual: 1

Pass: myRC6WithEvent["Animals.IInterface4WithEvent.onevent1"]
      Actual: Animals.IInterface4WithEvent.onevent1

Pass: typeof myRC6WithEvent["Animals.IInterface4WithEvent.onevent1"]
      Actual: object

Pass: myRC6WithEvent["addEventListener"]
      Actual: addEventListener

Pass: typeof myRC6WithEvent["addEventListener"]
      Actual: function

Pass: myRC6WithEvent["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC6WithEvent["addEventListener"].length
      Actual: 2

Pass: myRC6WithEvent["handler1"]
      Actual: handler1

Pass: typeof myRC6WithEvent["handler1"]
      Actual: function

Pass: myRC6WithEvent["handler1"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC6WithEvent["handler1"].length
      Actual: 2

Pass: myRC6WithEvent["invokeDelegate"]
      Actual: invokeDelegate

Pass: typeof myRC6WithEvent["invokeDelegate"]
      Actual: function

Pass: myRC6WithEvent["invokeDelegate"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC6WithEvent["invokeDelegate"].length
      Actual: 2

Pass: myRC6WithEvent["invokeEvent_I1E1"]
      Actual: invokeEvent_I1E1

Pass: typeof myRC6WithEvent["invokeEvent_I1E1"]
      Actual: function

Pass: myRC6WithEvent["invokeEvent_I1E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC6WithEvent["invokeEvent_I1E1"].length
      Actual: 1

Pass: myRC6WithEvent["invokeEvent_I1E2"]
      Actual: invokeEvent_I1E2

Pass: typeof myRC6WithEvent["invokeEvent_I1E2"]
      Actual: function

Pass: myRC6WithEvent["invokeEvent_I1E2"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC6WithEvent["invokeEvent_I1E2"].length
      Actual: 1

Pass: myRC6WithEvent["invokeEvent_I2E1"]
      Actual: invokeEvent_I2E1

Pass: typeof myRC6WithEvent["invokeEvent_I2E1"]
      Actual: function

Pass: myRC6WithEvent["invokeEvent_I2E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC6WithEvent["invokeEvent_I2E1"].length
      Actual: 1

Pass: myRC6WithEvent["invokeEvent_I2E3"]
      Actual: invokeEvent_I2E3

Pass: typeof myRC6WithEvent["invokeEvent_I2E3"]
      Actual: function

Pass: myRC6WithEvent["invokeEvent_I2E3"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC6WithEvent["invokeEvent_I2E3"].length
      Actual: 1

Pass: myRC6WithEvent["invokeEvent_I3E1"]
      Actual: invokeEvent_I3E1

Pass: typeof myRC6WithEvent["invokeEvent_I3E1"]
      Actual: function

Pass: myRC6WithEvent["invokeEvent_I3E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC6WithEvent["invokeEvent_I3E1"].length
      Actual: 1

Pass: myRC6WithEvent["invokeEvent_I3E5"]
      Actual: invokeEvent_I3E5

Pass: typeof myRC6WithEvent["invokeEvent_I3E5"]
      Actual: function

Pass: myRC6WithEvent["invokeEvent_I3E5"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC6WithEvent["invokeEvent_I3E5"].length
      Actual: 1

Pass: myRC6WithEvent["invokeEvent_I4E1"]
      Actual: invokeEvent_I4E1

Pass: typeof myRC6WithEvent["invokeEvent_I4E1"]
      Actual: function

Pass: myRC6WithEvent["invokeEvent_I4E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC6WithEvent["invokeEvent_I4E1"].length
      Actual: 1

Pass: myRC6WithEvent["onevent1"]
      Actual: onevent1

Pass: typeof myRC6WithEvent["onevent1"]
      Actual: function

Pass: myRC6WithEvent["onevent1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC6WithEvent["onevent1"].length
      Actual: 1

Pass: myRC6WithEvent["onevent2"]
      Actual: onevent2

Pass: typeof myRC6WithEvent["onevent2"]
      Actual: object

Pass: myRC6WithEvent["onevent21"]
      Actual: onevent21

Pass: typeof myRC6WithEvent["onevent21"]
      Actual: object

Pass: myRC6WithEvent["onevent3"]
      Actual: onevent3

Pass: typeof myRC6WithEvent["onevent3"]
      Actual: object

Pass: myRC6WithEvent["onevent31"]
      Actual: onevent31

Pass: typeof myRC6WithEvent["onevent31"]
      Actual: object

Pass: myRC6WithEvent["onevent5"]
      Actual: onevent5

Pass: typeof myRC6WithEvent["onevent5"]
      Actual: object

Pass: myRC6WithEvent["removeEventListener"]
      Actual: removeEventListener

Pass: typeof myRC6WithEvent["removeEventListener"]
      Actual: function

Pass: myRC6WithEvent["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC6WithEvent["removeEventListener"].length
      Actual: 2

Pass: myRC6WithEvent["wasHandler1Invoked"]
      Actual: wasHandler1Invoked

Pass: typeof myRC6WithEvent["wasHandler1Invoked"]
      Actual: boolean

Pass: myRC6WithEvent["toString"]
      Actual: toString

Pass: typeof myRC6WithEvent["toString"]
      Actual: function

Pass: myRC6WithEvent["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myRC6WithEvent["toString"].length
      Actual: 0

Pass: number of members of myRC6WithEvent
      Actual: 23

Comment: myRC6WithEvent.invokeEvent_I1E1(myString);
Comment: *** Event Start
Pass: ev.target
      Actual: [object Animals.RC6WithEvent]

Pass: ev
      Actual: This is IInterface1WithEvent::Event1

Comment: *** Event Complete
Comment: myRC6WithEvent.invokeEvent_I2E1(myString);
Comment: *** Event Start
Pass: ev.target
      Actual: [object Animals.RC6WithEvent]

Pass: ev
      Actual: This is IInterface2WithEvent::Event1

Comment: *** Event Complete
Comment: myRC6WithEvent.invokeEvent_I3E1(myString);
Comment: *** Event Start
Pass: ev.target
      Actual: [object Animals.RC6WithEvent]

Pass: ev
      Actual: This is IInterface3WithEvent::Event1

Comment: *** Event Complete
Comment: myRC6WithEvent.invokeEvent_I1E2(myString);
Comment: *** Event Start
Pass: ev.target
      Actual: [object Animals.RC6WithEvent]

Pass: ev
      Actual: This is IInterface1WithEvent::Event2

Comment: *** Event Complete
Comment: myRC6WithEvent.invokeEvent_I2E3(myString);
Comment: *** Event Start
Pass: ev.target
      Actual: [object Animals.RC6WithEvent]

Pass: ev
      Actual: This is IInterface2WithEvent::Event3

Comment: *** Event Complete
Comment: myRC6WithEvent.invokeEvent_I3E5(myString);
Comment: *** Event Start
Pass: ev.target
      Actual: [object Animals.RC6WithEvent]

Pass: ev
      Actual: This is IInterface3WithEvent::Event5

Comment: *** Event Complete
Comment: myRC6WithEvent.invokeEvent_I4E1(myString);
Comment: *** Event Start
Pass: ev.target
      Actual: [object Animals.RC6WithEvent]

Pass: ev
      Actual: This is IInterface4WithEvent::Event1

Comment: *** Event Complete
Pass: myRC6WithEvent["Animals.IInterface3WithEvent.addEventListener"](myString)
      Actual: This is IInterface3WithEvent::addListener method

Comment: myRC6WithEvent.invokeEvent_I1E1(myString);
Comment: myRC6WithEvent.invokeEvent_I2E1(myString);
Comment: myRC6WithEvent.invokeEvent_I3E1(myString);
Comment: myRC6WithEvent.invokeEvent_I1E2(myString);
Comment: myRC6WithEvent.invokeEvent_I2E3(myString);
Comment: myRC6WithEvent.invokeEvent_I3E5(myString);
Comment: myRC6WithEvent.invokeEvent_I4E1(myString);
Pass: myRC6WithEvent["Animals.IInterface3WithEvent.addEventListener"](myString)
      Actual: This is IInterface3WithEvent::addListener method

PASS [Test 11: Event Name collision over multiple level requires]
=================================================

=================================================
Starting [Test 12: Vector<T>, IVectorChangedArgs<T>]
Comment: myVector.addEventListener('vectorchanged', vectorChanged);
Comment: *** ObservableVector Change invoke
Comment:     ev.target: 1,2,3,10,5,6,7,8,9
Comment:     ev.index: 3
Comment:     ev.collectionChange: 3
Comment: *** ObservableVector Change End
Comment: *** ObservableVector Change invoke
Comment:     ev.target: Blue,Red,NewString,Green,Pink,Black,White,Tan,Magenta,Orange
Comment:     ev.index: 2
Comment:     ev.collectionChange: 3
Comment: *** ObservableVector Change End
Comment: myAnotherVector : Blue,Red,NewString,Green,Pink,Black,White,Tan,Magenta,Orange
Comment: myVector : 1,2,3,10,5,6,7,8,9
PASS [Test 12: Vector<T>, IVectorChangedArgs<T>]
=================================================

=================================================
Starting [Test 13: EventHandlerInvokeFormat: <This, Sender, Runtimeclass>]
Comment: Create the toaster
Comment: Add event listener for toastComplete event
Comment: *** toastCompleteCallback : Invoke
Pass: ev.message
      Actual: 123

Comment: typeof ev: object
Comment: Dump of properties : 
    var evMembers = [
        ['target', 'object'],
        ['detail', 'object'],
        ['type', 'string'],
        ['message', 'string'],
        ['toString', 'function', 0],
    ];
Pass: typeof ev
      Actual: object

Pass: ev["target"]
      Actual: target

Pass: typeof ev["target"]
      Actual: object

Pass: ev["detail"]
      Actual: detail

Pass: typeof ev["detail"]
      Actual: object

Pass: ev["type"]
      Actual: type

Pass: typeof ev["type"]
      Actual: string

Pass: ev["message"]
      Actual: message

Pass: typeof ev["message"]
      Actual: string

Pass: ev["toString"]
      Actual: toString

Pass: typeof ev["toString"]
      Actual: function

Pass: ev["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev["toString"].length
      Actual: 0

Pass: number of members of ev
      Actual: 5

Comment: typeof ev.target: object
Comment: Dump of properties : 
    var ev.targetMembers = [
        ['addEventListener', 'function', 2],
        ['electricityReporter', 'object'],
        ['getSameToaster', 'function', 0],
        ['indirectMakeToast', 'function', 1],
        ['indirectToaster', 'object'],
        ['invokePreheatCompleteBackgroundEvents', 'function', 1],
        ['invokeRootedHandler', 'function', 2],
        ['makeToast', 'function', 1],
        ['onindirecttoastcompleteevent', 'object'],
        ['onpreheatcompletebackground', 'object'],
        ['onpreheatstart', 'object'],
        ['onrootedtoastcompleteevent', 'object'],
        ['ontoastcompleteevent', 'object'],
        ['ontoaststartevent', 'object'],
        ['preheatInBackground', 'function', 1],
        ['preheatInBackgroundWithSmuggledDelegate', 'function', 1],
        ['removeEventListener', 'function', 2],
        ['rootedHandler', 'object'],
        ['size', 'object'],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.target
      Actual: object

Pass: ev.target["addEventListener"]
      Actual: addEventListener

Pass: typeof ev.target["addEventListener"]
      Actual: function

Pass: ev.target["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["addEventListener"].length
      Actual: 2

Pass: ev.target["electricityReporter"]
      Actual: electricityReporter

Pass: typeof ev.target["electricityReporter"]
      Actual: object

Pass: ev.target["getSameToaster"]
      Actual: getSameToaster

Pass: typeof ev.target["getSameToaster"]
      Actual: function

Pass: ev.target["getSameToaster"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["getSameToaster"].length
      Actual: 0

Pass: ev.target["indirectMakeToast"]
      Actual: indirectMakeToast

Pass: typeof ev.target["indirectMakeToast"]
      Actual: function

Pass: ev.target["indirectMakeToast"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["indirectMakeToast"].length
      Actual: 1

Pass: ev.target["indirectToaster"]
      Actual: indirectToaster

Pass: typeof ev.target["indirectToaster"]
      Actual: object

Pass: ev.target["invokePreheatCompleteBackgroundEvents"]
      Actual: invokePreheatCompleteBackgroundEvents

Pass: typeof ev.target["invokePreheatCompleteBackgroundEvents"]
      Actual: function

Pass: ev.target["invokePreheatCompleteBackgroundEvents"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokePreheatCompleteBackgroundEvents"].length
      Actual: 1

Pass: ev.target["invokeRootedHandler"]
      Actual: invokeRootedHandler

Pass: typeof ev.target["invokeRootedHandler"]
      Actual: function

Pass: ev.target["invokeRootedHandler"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["invokeRootedHandler"].length
      Actual: 2

Pass: ev.target["makeToast"]
      Actual: makeToast

Pass: typeof ev.target["makeToast"]
      Actual: function

Pass: ev.target["makeToast"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["makeToast"].length
      Actual: 1

Pass: ev.target["onindirecttoastcompleteevent"]
      Actual: onindirecttoastcompleteevent

Pass: typeof ev.target["onindirecttoastcompleteevent"]
      Actual: object

Pass: ev.target["onpreheatcompletebackground"]
      Actual: onpreheatcompletebackground

Pass: typeof ev.target["onpreheatcompletebackground"]
      Actual: object

Pass: ev.target["onpreheatstart"]
      Actual: onpreheatstart

Pass: typeof ev.target["onpreheatstart"]
      Actual: object

Pass: ev.target["onrootedtoastcompleteevent"]
      Actual: onrootedtoastcompleteevent

Pass: typeof ev.target["onrootedtoastcompleteevent"]
      Actual: object

Pass: ev.target["ontoastcompleteevent"]
      Actual: ontoastcompleteevent

Pass: typeof ev.target["ontoastcompleteevent"]
      Actual: object

Pass: ev.target["ontoaststartevent"]
      Actual: ontoaststartevent

Pass: typeof ev.target["ontoaststartevent"]
      Actual: object

Pass: ev.target["preheatInBackground"]
      Actual: preheatInBackground

Pass: typeof ev.target["preheatInBackground"]
      Actual: function

Pass: ev.target["preheatInBackground"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["preheatInBackground"].length
      Actual: 1

Pass: ev.target["preheatInBackgroundWithSmuggledDelegate"]
      Actual: preheatInBackgroundWithSmuggledDelegate

Pass: typeof ev.target["preheatInBackgroundWithSmuggledDelegate"]
      Actual: function

Pass: ev.target["preheatInBackgroundWithSmuggledDelegate"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["preheatInBackgroundWithSmuggledDelegate"].length
      Actual: 1

Pass: ev.target["removeEventListener"]
      Actual: removeEventListener

Pass: typeof ev.target["removeEventListener"]
      Actual: function

Pass: ev.target["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["removeEventListener"].length
      Actual: 2

Pass: ev.target["rootedHandler"]
      Actual: rootedHandler

Pass: typeof ev.target["rootedHandler"]
      Actual: object

Pass: ev.target["size"]
      Actual: size

Pass: typeof ev.target["size"]
      Actual: object

Pass: ev.target["toString"]
      Actual: toString

Pass: typeof ev.target["toString"]
      Actual: function

Pass: ev.target["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["toString"].length
      Actual: 0

Pass: number of members of ev.target
      Actual: 20

Pass: ev.target === toaster
      Actual: true

Comment: Verifying property descriptor for ev.target
Pass: typeof ev
      Actual: object

Pass: (target in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: Array.isArray(ev.detail)
      Actual: true

Pass: ev.detail.length
      Actual: 1

Comment: typeof ev.detail[0]: object
Comment: Dump of properties : 
    var ev.detail[0]Members = [
        ['message', 'string'],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.detail[0]
      Actual: object

Pass: ev.detail[0]["message"]
      Actual: message

Pass: typeof ev.detail[0]["message"]
      Actual: string

Pass: ev.detail[0]["toString"]
      Actual: toString

Pass: typeof ev.detail[0]["toString"]
      Actual: function

Pass: ev.detail[0]["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.detail[0]["toString"].length
      Actual: 0

Pass: number of members of ev.detail[0]
      Actual: 2

Pass: ev !== ev.detail[0]
      Actual: true

Pass: ev != ev.detail[0]
      Actual: true

Pass: ev.message
      Actual: 123

Comment: Verifying property descriptor for ev.detail
Pass: typeof ev
      Actual: object

Pass: (detail in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: ev.type
      Actual: toastcompleteevent

Comment: Verifying property descriptor for ev.type
Pass: typeof ev
      Actual: object

Pass: (type in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: ev.myExpando
      Actual: undefined

Pass: ev.detail.myExpando
      Actual: undefined

Comment: *** toastCompleteCallback : Exit
Pass: toastCompleteCount
      Actual: 1

PASS [Test 13: EventHandlerInvokeFormat: <This, Sender, Runtimeclass>]
=================================================

=================================================
Starting [Test 14: EventHandlerInvokeFormat: <This, Sender, String, Arg2>]
Comment: Create the toaster
Comment: Get electricity reporter
Pass: electricityReporter.applianceName
      Actual: Toaster

Comment: Registering onSwitchOff event handler
Comment: Calling toaster.makeToast
Comment: *** OnSwitchOff : Invoke
Pass: ev.target.applianceName
      Actual: Toaster

Pass: ev : eventDetails
      Actual: 123

Pass: ev.detail[1] : unitCount
      Actual: 5

Comment: typeof ev: object
Comment: Dump of properties : 
    var evMembers = [
        ['0', 'string'],
        ['1', 'string'],
        ['2', 'string'],
        ['target', 'object'],
        ['detail', 'object'],
        ['type', 'string'],
    ];
Pass: typeof ev
      Actual: object

Pass: ev["0"]
      Actual: 0

Pass: typeof ev["0"]
      Actual: string

Pass: ev["1"]
      Actual: 1

Pass: typeof ev["1"]
      Actual: string

Pass: ev["2"]
      Actual: 2

Pass: typeof ev["2"]
      Actual: string

Pass: ev["target"]
      Actual: target

Pass: typeof ev["target"]
      Actual: object

Pass: ev["detail"]
      Actual: detail

Pass: typeof ev["detail"]
      Actual: object

Pass: ev["type"]
      Actual: type

Pass: typeof ev["type"]
      Actual: string

Pass: number of members of ev
      Actual: 6

Comment: typeof ev.target: object
Comment: Dump of properties : 
    var ev.targetMembers = [
        ['addEventListener', 'function', 2],
        ['applianceName', 'string'],
        ['getSameElectricityReporter', 'function', 0],
        ['onapplianceswitchoffevent', 'object'],
        ['onapplianceswitchonevent', 'object'],
        ['removeEventListener', 'function', 2],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.target
      Actual: object

Pass: ev.target["addEventListener"]
      Actual: addEventListener

Pass: typeof ev.target["addEventListener"]
      Actual: function

Pass: ev.target["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["addEventListener"].length
      Actual: 2

Pass: ev.target["applianceName"]
      Actual: applianceName

Pass: typeof ev.target["applianceName"]
      Actual: string

Pass: ev.target["getSameElectricityReporter"]
      Actual: getSameElectricityReporter

Pass: typeof ev.target["getSameElectricityReporter"]
      Actual: function

Pass: ev.target["getSameElectricityReporter"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["getSameElectricityReporter"].length
      Actual: 0

Pass: ev.target["onapplianceswitchoffevent"]
      Actual: onapplianceswitchoffevent

Pass: typeof ev.target["onapplianceswitchoffevent"]
      Actual: object

Pass: ev.target["onapplianceswitchonevent"]
      Actual: onapplianceswitchonevent

Pass: typeof ev.target["onapplianceswitchonevent"]
      Actual: object

Pass: ev.target["removeEventListener"]
      Actual: removeEventListener

Pass: typeof ev.target["removeEventListener"]
      Actual: function

Pass: ev.target["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["removeEventListener"].length
      Actual: 2

Pass: ev.target["toString"]
      Actual: toString

Pass: typeof ev.target["toString"]
      Actual: function

Pass: ev.target["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["toString"].length
      Actual: 0

Pass: number of members of ev.target
      Actual: 7

Pass: ev.target === electricityReporter
      Actual: true

Comment: Verifying property descriptor for ev.target
Pass: typeof ev
      Actual: object

Pass: (target in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: Array.isArray(ev.detail)
      Actual: true

Pass: ev.detail.length
      Actual: 2

Comment: typeof ev.detail[0]: string
Comment: Dump of properties : 
    var ev.detail[0]Members = [
        ['0', 'string'],
        ['1', 'string'],
        ['2', 'string'],
    ];
Pass: typeof ev.detail[0]
      Actual: string

Pass: ev.detail[0]["0"]
      Actual: 0

Pass: typeof ev.detail[0]["0"]
      Actual: string

Pass: ev.detail[0]["1"]
      Actual: 1

Pass: typeof ev.detail[0]["1"]
      Actual: string

Pass: ev.detail[0]["2"]
      Actual: 2

Pass: typeof ev.detail[0]["2"]
      Actual: string

Pass: number of members of ev.detail[0]
      Actual: 3

Pass: ev !== ev.detail[0]
      Actual: true

Pass: ev == ev.detail[0]
      Actual: true

Pass: ev.message
      Actual: undefined

Comment: Verifying property descriptor for ev.detail
Pass: typeof ev
      Actual: object

Pass: (detail in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: ev.type
      Actual: applianceswitchoffevent

Comment: Verifying property descriptor for ev.type
Pass: typeof ev
      Actual: object

Pass: (type in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Comment: *** OnSwitchOff : Exit
Pass: eventInvokeCount
      Actual: 1

PASS [Test 14: EventHandlerInvokeFormat: <This, Sender, String, Arg2>]
=================================================

=================================================
Starting [Test 15: EventHandlerInvokeFormat: <This, Sender>]
Comment: Create the toaster
Comment: Add event listener for toastStart event
Comment: *** toastStartCallback : Invoke
Comment: typeof ev: object
Comment: Dump of properties : 
    var evMembers = [
        ['target', 'object'],
        ['detail', 'object'],
        ['type', 'string'],
    ];
Pass: typeof ev
      Actual: object

Pass: ev["target"]
      Actual: target

Pass: typeof ev["target"]
      Actual: object

Pass: ev["detail"]
      Actual: detail

Pass: typeof ev["detail"]
      Actual: object

Pass: ev["type"]
      Actual: type

Pass: typeof ev["type"]
      Actual: string

Pass: number of members of ev
      Actual: 3

Comment: typeof ev.target: object
Comment: Dump of properties : 
    var ev.targetMembers = [
        ['addEventListener', 'function', 2],
        ['electricityReporter', 'object'],
        ['getSameToaster', 'function', 0],
        ['indirectMakeToast', 'function', 1],
        ['indirectToaster', 'object'],
        ['invokePreheatCompleteBackgroundEvents', 'function', 1],
        ['invokeRootedHandler', 'function', 2],
        ['makeToast', 'function', 1],
        ['onindirecttoastcompleteevent', 'object'],
        ['onpreheatcompletebackground', 'object'],
        ['onpreheatstart', 'object'],
        ['onrootedtoastcompleteevent', 'object'],
        ['ontoastcompleteevent', 'object'],
        ['ontoaststartevent', 'object'],
        ['preheatInBackground', 'function', 1],
        ['preheatInBackgroundWithSmuggledDelegate', 'function', 1],
        ['removeEventListener', 'function', 2],
        ['rootedHandler', 'object'],
        ['size', 'object'],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.target
      Actual: object

Pass: ev.target["addEventListener"]
      Actual: addEventListener

Pass: typeof ev.target["addEventListener"]
      Actual: function

Pass: ev.target["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["addEventListener"].length
      Actual: 2

Pass: ev.target["electricityReporter"]
      Actual: electricityReporter

Pass: typeof ev.target["electricityReporter"]
      Actual: object

Pass: ev.target["getSameToaster"]
      Actual: getSameToaster

Pass: typeof ev.target["getSameToaster"]
      Actual: function

Pass: ev.target["getSameToaster"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["getSameToaster"].length
      Actual: 0

Pass: ev.target["indirectMakeToast"]
      Actual: indirectMakeToast

Pass: typeof ev.target["indirectMakeToast"]
      Actual: function

Pass: ev.target["indirectMakeToast"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["indirectMakeToast"].length
      Actual: 1

Pass: ev.target["indirectToaster"]
      Actual: indirectToaster

Pass: typeof ev.target["indirectToaster"]
      Actual: object

Pass: ev.target["invokePreheatCompleteBackgroundEvents"]
      Actual: invokePreheatCompleteBackgroundEvents

Pass: typeof ev.target["invokePreheatCompleteBackgroundEvents"]
      Actual: function

Pass: ev.target["invokePreheatCompleteBackgroundEvents"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokePreheatCompleteBackgroundEvents"].length
      Actual: 1

Pass: ev.target["invokeRootedHandler"]
      Actual: invokeRootedHandler

Pass: typeof ev.target["invokeRootedHandler"]
      Actual: function

Pass: ev.target["invokeRootedHandler"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["invokeRootedHandler"].length
      Actual: 2

Pass: ev.target["makeToast"]
      Actual: makeToast

Pass: typeof ev.target["makeToast"]
      Actual: function

Pass: ev.target["makeToast"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["makeToast"].length
      Actual: 1

Pass: ev.target["onindirecttoastcompleteevent"]
      Actual: onindirecttoastcompleteevent

Pass: typeof ev.target["onindirecttoastcompleteevent"]
      Actual: object

Pass: ev.target["onpreheatcompletebackground"]
      Actual: onpreheatcompletebackground

Pass: typeof ev.target["onpreheatcompletebackground"]
      Actual: object

Pass: ev.target["onpreheatstart"]
      Actual: onpreheatstart

Pass: typeof ev.target["onpreheatstart"]
      Actual: object

Pass: ev.target["onrootedtoastcompleteevent"]
      Actual: onrootedtoastcompleteevent

Pass: typeof ev.target["onrootedtoastcompleteevent"]
      Actual: object

Pass: ev.target["ontoastcompleteevent"]
      Actual: ontoastcompleteevent

Pass: typeof ev.target["ontoastcompleteevent"]
      Actual: object

Pass: ev.target["ontoaststartevent"]
      Actual: ontoaststartevent

Pass: typeof ev.target["ontoaststartevent"]
      Actual: object

Pass: ev.target["preheatInBackground"]
      Actual: preheatInBackground

Pass: typeof ev.target["preheatInBackground"]
      Actual: function

Pass: ev.target["preheatInBackground"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["preheatInBackground"].length
      Actual: 1

Pass: ev.target["preheatInBackgroundWithSmuggledDelegate"]
      Actual: preheatInBackgroundWithSmuggledDelegate

Pass: typeof ev.target["preheatInBackgroundWithSmuggledDelegate"]
      Actual: function

Pass: ev.target["preheatInBackgroundWithSmuggledDelegate"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["preheatInBackgroundWithSmuggledDelegate"].length
      Actual: 1

Pass: ev.target["removeEventListener"]
      Actual: removeEventListener

Pass: typeof ev.target["removeEventListener"]
      Actual: function

Pass: ev.target["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["removeEventListener"].length
      Actual: 2

Pass: ev.target["rootedHandler"]
      Actual: rootedHandler

Pass: typeof ev.target["rootedHandler"]
      Actual: object

Pass: ev.target["size"]
      Actual: size

Pass: typeof ev.target["size"]
      Actual: object

Pass: ev.target["toString"]
      Actual: toString

Pass: typeof ev.target["toString"]
      Actual: function

Pass: ev.target["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["toString"].length
      Actual: 0

Pass: number of members of ev.target
      Actual: 20

Pass: ev.target === toaster
      Actual: true

Comment: Verifying property descriptor for ev.target
Pass: typeof ev
      Actual: object

Pass: (target in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: Array.isArray(ev.detail)
      Actual: true

Pass: ev.detail.length
      Actual: 0

Comment: Verifying property descriptor for ev.detail
Pass: typeof ev
      Actual: object

Pass: (detail in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: ev.type
      Actual: toaststartevent

Comment: Verifying property descriptor for ev.type
Pass: typeof ev
      Actual: object

Pass: (type in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Comment: *** toastStartCallback : Exit
Pass: eventInvokeCount
      Actual: 1

PASS [Test 15: EventHandlerInvokeFormat: <This, Sender>]
=================================================

=================================================
Starting [Test 16: EventHandlerInvokeFormat: <This>]
Comment: Create the toaster
Comment: Add event listener for toater preheat start event
Comment: *** toasterPreheatStartCallback : Invoke
Comment: typeof ev: object
Comment: Dump of properties : 
    var evMembers = [
        ['target', 'object'],
        ['detail', 'object'],
        ['type', 'string'],
    ];
Pass: typeof ev
      Actual: object

Pass: ev["target"]
      Actual: target

Pass: typeof ev["target"]
      Actual: object

Pass: ev["detail"]
      Actual: detail

Pass: typeof ev["detail"]
      Actual: object

Pass: ev["type"]
      Actual: type

Pass: typeof ev["type"]
      Actual: string

Pass: number of members of ev
      Actual: 3

Pass: ev.target
      Actual: null

Comment: Verifying property descriptor for ev.target
Pass: typeof ev
      Actual: object

Pass: (target in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: Array.isArray(ev.detail)
      Actual: true

Pass: ev.detail.length
      Actual: 0

Comment: Verifying property descriptor for ev.detail
Pass: typeof ev
      Actual: object

Pass: (detail in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: ev.type
      Actual: preheatstart

Comment: Verifying property descriptor for ev.type
Pass: typeof ev
      Actual: object

Pass: (type in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: ev.myExpando
      Actual: undefined

Pass: ev.detail.myExpando
      Actual: undefined

Comment: *** toasterPreheatStartCallback : Exit
Pass: eventInvokeCount
      Actual: 1

PASS [Test 16: EventHandlerInvokeFormat: <This>]
=================================================

=================================================
Starting [Test 17: EventHandlerInvokeFormat: <This, sender, Vecor<T>>]
Comment: Create the chef and toaster
Comment: Add event listener for multiple toast make complete event
Comment: *** multipleToastCompleteCollectionCallback : Invoke
Comment: typeof ev: object
Comment: Dump of properties : 
    var evMembers = [
        ['0', 'object'],
        ['1', 'object'],
        ['2', 'object'],
        ['3', 'object'],
        ['4', 'object'],
        ['target', 'object'],
        ['detail', 'object'],
        ['type', 'string'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof ev
      Actual: object

Pass: ev["0"]
      Actual: 0

Pass: typeof ev["0"]
      Actual: object

Pass: ev["1"]
      Actual: 1

Pass: typeof ev["1"]
      Actual: object

Pass: ev["2"]
      Actual: 2

Pass: typeof ev["2"]
      Actual: object

Pass: ev["3"]
      Actual: 3

Pass: typeof ev["3"]
      Actual: object

Pass: ev["4"]
      Actual: 4

Pass: typeof ev["4"]
      Actual: object

Pass: ev["target"]
      Actual: target

Pass: typeof ev["target"]
      Actual: object

Pass: ev["detail"]
      Actual: detail

Pass: typeof ev["detail"]
      Actual: object

Pass: ev["type"]
      Actual: type

Pass: typeof ev["type"]
      Actual: string

Pass: ev["append"]
      Actual: append

Pass: typeof ev["append"]
      Actual: function

Pass: ev["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev["append"].length
      Actual: 1

Pass: ev["clear"]
      Actual: clear

Pass: typeof ev["clear"]
      Actual: function

Pass: ev["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev["clear"].length
      Actual: 0

Pass: ev["first"]
      Actual: first

Pass: typeof ev["first"]
      Actual: function

Pass: ev["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev["first"].length
      Actual: 0

Pass: ev["getAt"]
      Actual: getAt

Pass: typeof ev["getAt"]
      Actual: function

Pass: ev["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev["getAt"].length
      Actual: 1

Pass: ev["getMany"]
      Actual: getMany

Pass: typeof ev["getMany"]
      Actual: function

Pass: ev["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev["getMany"].length
      Actual: 2

Pass: ev["getView"]
      Actual: getView

Pass: typeof ev["getView"]
      Actual: function

Pass: ev["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev["getView"].length
      Actual: 0

Pass: ev["indexOf"]
      Actual: indexOf

Pass: typeof ev["indexOf"]
      Actual: function

Pass: ev["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev["indexOf"].length
      Actual: 1

Pass: ev["insertAt"]
      Actual: insertAt

Pass: typeof ev["insertAt"]
      Actual: function

Pass: ev["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev["insertAt"].length
      Actual: 2

Pass: ev["removeAt"]
      Actual: removeAt

Pass: typeof ev["removeAt"]
      Actual: function

Pass: ev["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev["removeAt"].length
      Actual: 1

Pass: ev["removeAtEnd"]
      Actual: removeAtEnd

Pass: typeof ev["removeAtEnd"]
      Actual: function

Pass: ev["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev["removeAtEnd"].length
      Actual: 0

Pass: ev["replaceAll"]
      Actual: replaceAll

Pass: typeof ev["replaceAll"]
      Actual: function

Pass: ev["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev["replaceAll"].length
      Actual: 1

Pass: ev["setAt"]
      Actual: setAt

Pass: typeof ev["setAt"]
      Actual: function

Pass: ev["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev["setAt"].length
      Actual: 2

Pass: ev["size"]
      Actual: size

Pass: typeof ev["size"]
      Actual: number

Pass: number of members of ev
      Actual: 21

Comment: typeof ev.target: object
Comment: Dump of properties : 
    var ev.targetMembers = [
        ['addEventListener', 'function', 2],
        ['capabilities', 'number'],
        ['makeBreakfast', 'function', 1],
        ['name', 'string'],
        ['onmaketoastroundoff', 'object'],
        ['onmultipletoastcompletearray', 'object'],
        ['onmultipletoastcompletecollection', 'object'],
        ['removeEventListener', 'function', 2],
        ['role', 'number'],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.target
      Actual: object

Pass: ev.target["addEventListener"]
      Actual: addEventListener

Pass: typeof ev.target["addEventListener"]
      Actual: function

Pass: ev.target["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["addEventListener"].length
      Actual: 2

Pass: ev.target["capabilities"]
      Actual: capabilities

Pass: typeof ev.target["capabilities"]
      Actual: number

Pass: ev.target["makeBreakfast"]
      Actual: makeBreakfast

Pass: typeof ev.target["makeBreakfast"]
      Actual: function

Pass: ev.target["makeBreakfast"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["makeBreakfast"].length
      Actual: 1

Pass: ev.target["name"]
      Actual: name

Pass: typeof ev.target["name"]
      Actual: string

Pass: ev.target["onmaketoastroundoff"]
      Actual: onmaketoastroundoff

Pass: typeof ev.target["onmaketoastroundoff"]
      Actual: object

Pass: ev.target["onmultipletoastcompletearray"]
      Actual: onmultipletoastcompletearray

Pass: typeof ev.target["onmultipletoastcompletearray"]
      Actual: object

Pass: ev.target["onmultipletoastcompletecollection"]
      Actual: onmultipletoastcompletecollection

Pass: typeof ev.target["onmultipletoastcompletecollection"]
      Actual: object

Pass: ev.target["removeEventListener"]
      Actual: removeEventListener

Pass: typeof ev.target["removeEventListener"]
      Actual: function

Pass: ev.target["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["removeEventListener"].length
      Actual: 2

Pass: ev.target["role"]
      Actual: role

Pass: typeof ev.target["role"]
      Actual: number

Pass: ev.target["toString"]
      Actual: toString

Pass: typeof ev.target["toString"]
      Actual: function

Pass: ev.target["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["toString"].length
      Actual: 0

Pass: number of members of ev.target
      Actual: 10

Pass: ev.target === myChef
      Actual: true

Comment: Verifying property descriptor for ev.target
Pass: typeof ev
      Actual: object

Pass: (target in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: Array.isArray(ev.detail)
      Actual: true

Pass: ev.detail.length
      Actual: 1

Comment: typeof ev.detail[0]: object
Comment: Dump of properties : 
    var ev.detail[0]Members = [
        ['0', 'object'],
        ['1', 'object'],
        ['2', 'object'],
        ['3', 'object'],
        ['4', 'object'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof ev.detail[0]
      Actual: object

Pass: ev.detail[0]["0"]
      Actual: 0

Pass: typeof ev.detail[0]["0"]
      Actual: object

Pass: ev.detail[0]["1"]
      Actual: 1

Pass: typeof ev.detail[0]["1"]
      Actual: object

Pass: ev.detail[0]["2"]
      Actual: 2

Pass: typeof ev.detail[0]["2"]
      Actual: object

Pass: ev.detail[0]["3"]
      Actual: 3

Pass: typeof ev.detail[0]["3"]
      Actual: object

Pass: ev.detail[0]["4"]
      Actual: 4

Pass: typeof ev.detail[0]["4"]
      Actual: object

Pass: ev.detail[0]["append"]
      Actual: append

Pass: typeof ev.detail[0]["append"]
      Actual: function

Pass: ev.detail[0]["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.detail[0]["append"].length
      Actual: 1

Pass: ev.detail[0]["clear"]
      Actual: clear

Pass: typeof ev.detail[0]["clear"]
      Actual: function

Pass: ev.detail[0]["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.detail[0]["clear"].length
      Actual: 0

Pass: ev.detail[0]["first"]
      Actual: first

Pass: typeof ev.detail[0]["first"]
      Actual: function

Pass: ev.detail[0]["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.detail[0]["first"].length
      Actual: 0

Pass: ev.detail[0]["getAt"]
      Actual: getAt

Pass: typeof ev.detail[0]["getAt"]
      Actual: function

Pass: ev.detail[0]["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.detail[0]["getAt"].length
      Actual: 1

Pass: ev.detail[0]["getMany"]
      Actual: getMany

Pass: typeof ev.detail[0]["getMany"]
      Actual: function

Pass: ev.detail[0]["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.detail[0]["getMany"].length
      Actual: 2

Pass: ev.detail[0]["getView"]
      Actual: getView

Pass: typeof ev.detail[0]["getView"]
      Actual: function

Pass: ev.detail[0]["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.detail[0]["getView"].length
      Actual: 0

Pass: ev.detail[0]["indexOf"]
      Actual: indexOf

Pass: typeof ev.detail[0]["indexOf"]
      Actual: function

Pass: ev.detail[0]["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.detail[0]["indexOf"].length
      Actual: 1

Pass: ev.detail[0]["insertAt"]
      Actual: insertAt

Pass: typeof ev.detail[0]["insertAt"]
      Actual: function

Pass: ev.detail[0]["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.detail[0]["insertAt"].length
      Actual: 2

Pass: ev.detail[0]["removeAt"]
      Actual: removeAt

Pass: typeof ev.detail[0]["removeAt"]
      Actual: function

Pass: ev.detail[0]["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.detail[0]["removeAt"].length
      Actual: 1

Pass: ev.detail[0]["removeAtEnd"]
      Actual: removeAtEnd

Pass: typeof ev.detail[0]["removeAtEnd"]
      Actual: function

Pass: ev.detail[0]["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.detail[0]["removeAtEnd"].length
      Actual: 0

Pass: ev.detail[0]["replaceAll"]
      Actual: replaceAll

Pass: typeof ev.detail[0]["replaceAll"]
      Actual: function

Pass: ev.detail[0]["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.detail[0]["replaceAll"].length
      Actual: 1

Pass: ev.detail[0]["setAt"]
      Actual: setAt

Pass: typeof ev.detail[0]["setAt"]
      Actual: function

Pass: ev.detail[0]["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.detail[0]["setAt"].length
      Actual: 2

Pass: ev.detail[0]["size"]
      Actual: size

Pass: typeof ev.detail[0]["size"]
      Actual: number

Pass: number of members of ev.detail[0]
      Actual: 18

Pass: ev !== ev.detail[0]
      Actual: true

Pass: ev != ev.detail[0]
      Actual: true

Pass: ev.detail[0][0].message
      Actual: Bob

Pass: ev.detail[0][1].message
      Actual: Bob

Pass: ev.detail[0][2].message
      Actual: Bob

Pass: ev.detail[0][3].message
      Actual: Bob

Pass: ev.detail[0][4].message
      Actual: Bob

Comment: Verifying property descriptor for ev.detail
Pass: typeof ev
      Actual: object

Pass: (detail in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: ev.type
      Actual: multipletoastcompletecollection

Comment: Verifying property descriptor for ev.type
Pass: typeof ev
      Actual: object

Pass: (type in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Comment: *** multipleToastCompleteCollectionCallback : Exit
Pass: eventInvokeCount
      Actual: 1

PASS [Test 17: EventHandlerInvokeFormat: <This, sender, Vecor<T>>]
=================================================

=================================================
Starting [Test 18: EventHandlerInvokeFormat: <This, sender, Array<T>>]
Comment: Create the chef and toaster
Comment: Add event listener for multiple toast make complete event
Comment: *** multipleToastCompleteArrayCallback : Invoke
Comment: typeof ev: object
Comment: Dump of properties : 
    var evMembers = [
        ['0', 'object'],
        ['1', 'object'],
        ['2', 'object'],
        ['3', 'object'],
        ['4', 'object'],
        ['target', 'object'],
        ['detail', 'object'],
        ['type', 'string'],
    ];
Pass: typeof ev
      Actual: object

Pass: ev["0"]
      Actual: 0

Pass: typeof ev["0"]
      Actual: object

Pass: ev["1"]
      Actual: 1

Pass: typeof ev["1"]
      Actual: object

Pass: ev["2"]
      Actual: 2

Pass: typeof ev["2"]
      Actual: object

Pass: ev["3"]
      Actual: 3

Pass: typeof ev["3"]
      Actual: object

Pass: ev["4"]
      Actual: 4

Pass: typeof ev["4"]
      Actual: object

Pass: ev["target"]
      Actual: target

Pass: typeof ev["target"]
      Actual: object

Pass: ev["detail"]
      Actual: detail

Pass: typeof ev["detail"]
      Actual: object

Pass: ev["type"]
      Actual: type

Pass: typeof ev["type"]
      Actual: string

Pass: number of members of ev
      Actual: 8

Comment: typeof ev.target: object
Comment: Dump of properties : 
    var ev.targetMembers = [
        ['addEventListener', 'function', 2],
        ['capabilities', 'number'],
        ['makeBreakfast', 'function', 1],
        ['name', 'string'],
        ['onmaketoastroundoff', 'object'],
        ['onmultipletoastcompletearray', 'object'],
        ['onmultipletoastcompletecollection', 'object'],
        ['removeEventListener', 'function', 2],
        ['role', 'number'],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.target
      Actual: object

Pass: ev.target["addEventListener"]
      Actual: addEventListener

Pass: typeof ev.target["addEventListener"]
      Actual: function

Pass: ev.target["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["addEventListener"].length
      Actual: 2

Pass: ev.target["capabilities"]
      Actual: capabilities

Pass: typeof ev.target["capabilities"]
      Actual: number

Pass: ev.target["makeBreakfast"]
      Actual: makeBreakfast

Pass: typeof ev.target["makeBreakfast"]
      Actual: function

Pass: ev.target["makeBreakfast"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["makeBreakfast"].length
      Actual: 1

Pass: ev.target["name"]
      Actual: name

Pass: typeof ev.target["name"]
      Actual: string

Pass: ev.target["onmaketoastroundoff"]
      Actual: onmaketoastroundoff

Pass: typeof ev.target["onmaketoastroundoff"]
      Actual: object

Pass: ev.target["onmultipletoastcompletearray"]
      Actual: onmultipletoastcompletearray

Pass: typeof ev.target["onmultipletoastcompletearray"]
      Actual: object

Pass: ev.target["onmultipletoastcompletecollection"]
      Actual: onmultipletoastcompletecollection

Pass: typeof ev.target["onmultipletoastcompletecollection"]
      Actual: object

Pass: ev.target["removeEventListener"]
      Actual: removeEventListener

Pass: typeof ev.target["removeEventListener"]
      Actual: function

Pass: ev.target["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["removeEventListener"].length
      Actual: 2

Pass: ev.target["role"]
      Actual: role

Pass: typeof ev.target["role"]
      Actual: number

Pass: ev.target["toString"]
      Actual: toString

Pass: typeof ev.target["toString"]
      Actual: function

Pass: ev.target["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["toString"].length
      Actual: 0

Pass: number of members of ev.target
      Actual: 10

Pass: ev.target === myChef
      Actual: true

Comment: Verifying property descriptor for ev.target
Pass: typeof ev
      Actual: object

Pass: (target in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: Array.isArray(ev.detail)
      Actual: true

Pass: ev.detail.length
      Actual: 1

Comment: typeof ev.detail[0]: object
Comment: Dump of properties : 
    var ev.detail[0]Members = [
        ['0', 'object'],
        ['1', 'object'],
        ['2', 'object'],
        ['3', 'object'],
        ['4', 'object'],
    ];
Pass: typeof ev.detail[0]
      Actual: object

Pass: ev.detail[0]["0"]
      Actual: 0

Pass: typeof ev.detail[0]["0"]
      Actual: object

Pass: ev.detail[0]["1"]
      Actual: 1

Pass: typeof ev.detail[0]["1"]
      Actual: object

Pass: ev.detail[0]["2"]
      Actual: 2

Pass: typeof ev.detail[0]["2"]
      Actual: object

Pass: ev.detail[0]["3"]
      Actual: 3

Pass: typeof ev.detail[0]["3"]
      Actual: object

Pass: ev.detail[0]["4"]
      Actual: 4

Pass: typeof ev.detail[0]["4"]
      Actual: object

Pass: number of members of ev.detail[0]
      Actual: 5

Pass: ev !== ev.detail[0]
      Actual: true

Pass: ev != ev.detail[0]
      Actual: true

Pass: ev.detail[0][0].message
      Actual: Bob

Pass: ev.detail[0][1].message
      Actual: Bob

Pass: ev.detail[0][2].message
      Actual: Bob

Pass: ev.detail[0][3].message
      Actual: Bob

Pass: ev.detail[0][4].message
      Actual: Bob

Comment: Verifying property descriptor for ev.detail
Pass: typeof ev
      Actual: object

Pass: (detail in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: ev.type
      Actual: multipletoastcompletearray

Comment: Verifying property descriptor for ev.type
Pass: typeof ev
      Actual: object

Pass: (type in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Comment: *** multipleToastCompleteArrayCallback : Exit
Pass: eventInvokeCount
      Actual: 1

PASS [Test 18: EventHandlerInvokeFormat: <This, sender, Array<T>>]
=================================================

=================================================
Starting [Test 19: EventHandlerInvokeFormat: <This, sender, outParams, number>]
Comment: Create the chef and toaster
Comment: Add event listener for roundoff
Comment: *** makeToastRoundOffCallback : Invoke
Comment: typeof ev: object
Comment: Dump of properties : 
    var evMembers = [
        ['target', 'object'],
        ['detail', 'object'],
        ['type', 'string'],
    ];
Pass: typeof ev
      Actual: object

Pass: ev["target"]
      Actual: target

Pass: typeof ev["target"]
      Actual: object

Pass: ev["detail"]
      Actual: detail

Pass: typeof ev["detail"]
      Actual: object

Pass: ev["type"]
      Actual: type

Pass: typeof ev["type"]
      Actual: string

Pass: number of members of ev
      Actual: 3

Comment: typeof ev.target: object
Comment: Dump of properties : 
    var ev.targetMembers = [
        ['addEventListener', 'function', 2],
        ['capabilities', 'number'],
        ['makeBreakfast', 'function', 1],
        ['name', 'string'],
        ['onmaketoastroundoff', 'object'],
        ['onmultipletoastcompletearray', 'object'],
        ['onmultipletoastcompletecollection', 'object'],
        ['removeEventListener', 'function', 2],
        ['role', 'number'],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.target
      Actual: object

Pass: ev.target["addEventListener"]
      Actual: addEventListener

Pass: typeof ev.target["addEventListener"]
      Actual: function

Pass: ev.target["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["addEventListener"].length
      Actual: 2

Pass: ev.target["capabilities"]
      Actual: capabilities

Pass: typeof ev.target["capabilities"]
      Actual: number

Pass: ev.target["makeBreakfast"]
      Actual: makeBreakfast

Pass: typeof ev.target["makeBreakfast"]
      Actual: function

Pass: ev.target["makeBreakfast"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["makeBreakfast"].length
      Actual: 1

Pass: ev.target["name"]
      Actual: name

Pass: typeof ev.target["name"]
      Actual: string

Pass: ev.target["onmaketoastroundoff"]
      Actual: onmaketoastroundoff

Pass: typeof ev.target["onmaketoastroundoff"]
      Actual: object

Pass: ev.target["onmultipletoastcompletearray"]
      Actual: onmultipletoastcompletearray

Pass: typeof ev.target["onmultipletoastcompletearray"]
      Actual: object

Pass: ev.target["onmultipletoastcompletecollection"]
      Actual: onmultipletoastcompletecollection

Pass: typeof ev.target["onmultipletoastcompletecollection"]
      Actual: object

Pass: ev.target["removeEventListener"]
      Actual: removeEventListener

Pass: typeof ev.target["removeEventListener"]
      Actual: function

Pass: ev.target["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["removeEventListener"].length
      Actual: 2

Pass: ev.target["role"]
      Actual: role

Pass: typeof ev.target["role"]
      Actual: number

Pass: ev.target["toString"]
      Actual: toString

Pass: typeof ev.target["toString"]
      Actual: function

Pass: ev.target["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["toString"].length
      Actual: 0

Pass: number of members of ev.target
      Actual: 10

Pass: ev.target === myChef
      Actual: true

Comment: Verifying property descriptor for ev.target
Pass: typeof ev
      Actual: object

Pass: (target in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: Array.isArray(ev.detail)
      Actual: true

Pass: ev.detail.length
      Actual: 1

Comment: typeof ev.detail[0]: number
Comment: Dump of properties : 
    var ev.detail[0]Members = [
    ];
Pass: typeof ev.detail[0]
      Actual: number

Pass: number of members of ev.detail[0]
      Actual: 0

Pass: ev.detail[0].toString()
      Actual: 5

Pass: ev !== ev.detail[0]
      Actual: true

Pass: ev == ev.detail[0]
      Actual: true

Comment: Verifying property descriptor for ev.detail
Pass: typeof ev
      Actual: object

Pass: (detail in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: ev.type
      Actual: maketoastroundoff

Comment: Verifying property descriptor for ev.type
Pass: typeof ev
      Actual: object

Pass: (type in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Comment: *** makeToastRoundOffCallback : Exit
Pass: eventInvokeCount
      Actual: 1

PASS [Test 19: EventHandlerInvokeFormat: <This, sender, outParams, number>]
=================================================

=================================================
Starting [Test 20: EventHandlerInvokeFormat: <This, sender, struct>]
Comment: Create Object
Comment: Add event listener
Comment: Invoke method and event
Comment: *** structEventCallback : Invoke
Comment: typeof ev: object
Comment: Dump of properties : 
    var evMembers = [
        ['structId', 'number'],
        ['structData', 'number'],
        ['target', 'object'],
        ['detail', 'object'],
        ['type', 'string'],
    ];
Pass: typeof ev
      Actual: object

Pass: ev["structId"]
      Actual: structId

Pass: typeof ev["structId"]
      Actual: number

Pass: ev["structData"]
      Actual: structData

Pass: typeof ev["structData"]
      Actual: number

Pass: ev["target"]
      Actual: target

Pass: typeof ev["target"]
      Actual: object

Pass: ev["detail"]
      Actual: detail

Pass: typeof ev["detail"]
      Actual: object

Pass: ev["type"]
      Actual: type

Pass: typeof ev["type"]
      Actual: string

Pass: number of members of ev
      Actual: 5

Comment: typeof ev.target: object
Comment: Dump of properties : 
    var ev.targetMembers = [
        ['addEventListener', 'function', 2],
        ['invokeDelegateEvent', 'function', 1],
        ['invokeInterfaceWithTargetEvent', 'function', 0],
        ['invokeStructEvent', 'function', 1],
        ['invokeStructWithTargetEvent', 'function', 1],
        ['ondelegateevent', 'object'],
        ['oninterfacewithtargetevent', 'object'],
        ['onstructevent', 'object'],
        ['onstructwithtargetevent', 'object'],
        ['removeEventListener', 'function', 2],
        ['target', 'function', 1],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.target
      Actual: object

Pass: ev.target["addEventListener"]
      Actual: addEventListener

Pass: typeof ev.target["addEventListener"]
      Actual: function

Pass: ev.target["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["addEventListener"].length
      Actual: 2

Pass: ev.target["invokeDelegateEvent"]
      Actual: invokeDelegateEvent

Pass: typeof ev.target["invokeDelegateEvent"]
      Actual: function

Pass: ev.target["invokeDelegateEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokeDelegateEvent"].length
      Actual: 1

Pass: ev.target["invokeInterfaceWithTargetEvent"]
      Actual: invokeInterfaceWithTargetEvent

Pass: typeof ev.target["invokeInterfaceWithTargetEvent"]
      Actual: function

Pass: ev.target["invokeInterfaceWithTargetEvent"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["invokeInterfaceWithTargetEvent"].length
      Actual: 0

Pass: ev.target["invokeStructEvent"]
      Actual: invokeStructEvent

Pass: typeof ev.target["invokeStructEvent"]
      Actual: function

Pass: ev.target["invokeStructEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokeStructEvent"].length
      Actual: 1

Pass: ev.target["invokeStructWithTargetEvent"]
      Actual: invokeStructWithTargetEvent

Pass: typeof ev.target["invokeStructWithTargetEvent"]
      Actual: function

Pass: ev.target["invokeStructWithTargetEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokeStructWithTargetEvent"].length
      Actual: 1

Pass: ev.target["ondelegateevent"]
      Actual: ondelegateevent

Pass: typeof ev.target["ondelegateevent"]
      Actual: object

Pass: ev.target["oninterfacewithtargetevent"]
      Actual: oninterfacewithtargetevent

Pass: typeof ev.target["oninterfacewithtargetevent"]
      Actual: object

Pass: ev.target["onstructevent"]
      Actual: onstructevent

Pass: typeof ev.target["onstructevent"]
      Actual: object

Pass: ev.target["onstructwithtargetevent"]
      Actual: onstructwithtargetevent

Pass: typeof ev.target["onstructwithtargetevent"]
      Actual: object

Pass: ev.target["removeEventListener"]
      Actual: removeEventListener

Pass: typeof ev.target["removeEventListener"]
      Actual: function

Pass: ev.target["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["removeEventListener"].length
      Actual: 2

Pass: ev.target["target"]
      Actual: target

Pass: typeof ev.target["target"]
      Actual: function

Pass: ev.target["target"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["target"].length
      Actual: 1

Pass: ev.target["toString"]
      Actual: toString

Pass: typeof ev.target["toString"]
      Actual: function

Pass: ev.target["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["toString"].length
      Actual: 0

Pass: number of members of ev.target
      Actual: 12

Pass: ev.target === myRC8WithEvent
      Actual: true

Comment: Verifying property descriptor for ev.target
Pass: typeof ev
      Actual: object

Pass: (target in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: Array.isArray(ev.detail)
      Actual: true

Pass: ev.detail.length
      Actual: 1

Comment: typeof ev.detail[0]: object
Comment: Dump of properties : 
    var ev.detail[0]Members = [
        ['structId', 'number'],
        ['structData', 'number'],
    ];
Pass: typeof ev.detail[0]
      Actual: object

Pass: ev.detail[0]["structId"]
      Actual: structId

Pass: typeof ev.detail[0]["structId"]
      Actual: number

Pass: ev.detail[0]["structData"]
      Actual: structData

Pass: typeof ev.detail[0]["structData"]
      Actual: number

Pass: number of members of ev.detail[0]
      Actual: 2

Pass: ev.detail[0]
      Actual: [object Animals._StructForStructEvent]

Pass: ev.detail[0].structId
      Actual: 10

Pass: ev.detail[0].structData
      Actual: 100

Pass: ev !== ev.detail[0]
      Actual: true

Pass: ev != ev.detail[0]
      Actual: true

Comment: Verifying property descriptor for ev.detail
Pass: typeof ev
      Actual: object

Pass: (detail in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: ev.type
      Actual: structevent

Comment: Verifying property descriptor for ev.type
Pass: typeof ev
      Actual: object

Pass: (type in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Comment: *** structEventCallback : Exit
Pass: eventInvokeCount
      Actual: 1

PASS [Test 20: EventHandlerInvokeFormat: <This, sender, struct>]
=================================================

=================================================
Starting [Test 21: EventHandlerInvokeFormat: <This, sender, delegate>]
Comment: Create Object
Comment: Add event listener
Comment: Invoke method and event
Comment: *** delegateEventCallback : Invoke
Comment: typeof ev: function
Comment: Dump of properties : 
    var evMembers = [
        ['target', 'object'],
        ['detail', 'object'],
        ['type', 'string'],
    ];
Pass: typeof ev
      Actual: function

Pass: ev["target"]
      Actual: target

Pass: typeof ev["target"]
      Actual: object

Pass: ev["detail"]
      Actual: detail

Pass: typeof ev["detail"]
      Actual: object

Pass: ev["type"]
      Actual: type

Pass: typeof ev["type"]
      Actual: string

Pass: number of members of ev
      Actual: 3

Comment: *** myDelegateCallback : Invoke
Pass: inValue
      Actual: 999

Comment: *** myDelegateCallback : Exit
Pass: myValue
      Actual: 1000

Comment: typeof ev.target: object
Comment: Dump of properties : 
    var ev.targetMembers = [
        ['addEventListener', 'function', 2],
        ['invokeDelegateEvent', 'function', 1],
        ['invokeInterfaceWithTargetEvent', 'function', 0],
        ['invokeStructEvent', 'function', 1],
        ['invokeStructWithTargetEvent', 'function', 1],
        ['ondelegateevent', 'object'],
        ['oninterfacewithtargetevent', 'object'],
        ['onstructevent', 'object'],
        ['onstructwithtargetevent', 'object'],
        ['removeEventListener', 'function', 2],
        ['target', 'function', 1],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.target
      Actual: object

Pass: ev.target["addEventListener"]
      Actual: addEventListener

Pass: typeof ev.target["addEventListener"]
      Actual: function

Pass: ev.target["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["addEventListener"].length
      Actual: 2

Pass: ev.target["invokeDelegateEvent"]
      Actual: invokeDelegateEvent

Pass: typeof ev.target["invokeDelegateEvent"]
      Actual: function

Pass: ev.target["invokeDelegateEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokeDelegateEvent"].length
      Actual: 1

Pass: ev.target["invokeInterfaceWithTargetEvent"]
      Actual: invokeInterfaceWithTargetEvent

Pass: typeof ev.target["invokeInterfaceWithTargetEvent"]
      Actual: function

Pass: ev.target["invokeInterfaceWithTargetEvent"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["invokeInterfaceWithTargetEvent"].length
      Actual: 0

Pass: ev.target["invokeStructEvent"]
      Actual: invokeStructEvent

Pass: typeof ev.target["invokeStructEvent"]
      Actual: function

Pass: ev.target["invokeStructEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokeStructEvent"].length
      Actual: 1

Pass: ev.target["invokeStructWithTargetEvent"]
      Actual: invokeStructWithTargetEvent

Pass: typeof ev.target["invokeStructWithTargetEvent"]
      Actual: function

Pass: ev.target["invokeStructWithTargetEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokeStructWithTargetEvent"].length
      Actual: 1

Pass: ev.target["ondelegateevent"]
      Actual: ondelegateevent

Pass: typeof ev.target["ondelegateevent"]
      Actual: object

Pass: ev.target["oninterfacewithtargetevent"]
      Actual: oninterfacewithtargetevent

Pass: typeof ev.target["oninterfacewithtargetevent"]
      Actual: object

Pass: ev.target["onstructevent"]
      Actual: onstructevent

Pass: typeof ev.target["onstructevent"]
      Actual: object

Pass: ev.target["onstructwithtargetevent"]
      Actual: onstructwithtargetevent

Pass: typeof ev.target["onstructwithtargetevent"]
      Actual: object

Pass: ev.target["removeEventListener"]
      Actual: removeEventListener

Pass: typeof ev.target["removeEventListener"]
      Actual: function

Pass: ev.target["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["removeEventListener"].length
      Actual: 2

Pass: ev.target["target"]
      Actual: target

Pass: typeof ev.target["target"]
      Actual: function

Pass: ev.target["target"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["target"].length
      Actual: 1

Pass: ev.target["toString"]
      Actual: toString

Pass: typeof ev.target["toString"]
      Actual: function

Pass: ev.target["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["toString"].length
      Actual: 0

Pass: number of members of ev.target
      Actual: 12

Pass: ev.target === myRC8WithEvent
      Actual: true

Comment: Verifying property descriptor for ev.target
Pass: typeof ev
      Actual: function

Pass: (target in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: Array.isArray(ev.detail)
      Actual: true

Pass: ev.detail.length
      Actual: 1

Comment: typeof ev.detail[0]: function
Comment: Dump of properties : 
    var ev.detail[0]Members = [
    ];
Pass: typeof ev.detail[0]
      Actual: function

Pass: number of members of ev.detail[0]
      Actual: 0

Pass: ev.detail[0]
      Actual: function myDelegateCallback(inValue) {
                logger.comment("*** myDelegateCallback : Invoke");
                verify(inValue, myValue, "inValue");
                myValue++;
                logger.comment("*** myDelegateCallback : Exit");
            }

Comment: *** myDelegateCallback : Invoke
Pass: inValue
      Actual: 1000

Comment: *** myDelegateCallback : Exit
Pass: myValue
      Actual: 1001

Pass: ev !== ev.detail[0]
      Actual: true

Pass: ev != ev.detail[0]
      Actual: true

Comment: Verifying property descriptor for ev.detail
Pass: typeof ev
      Actual: function

Pass: (detail in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: ev.type
      Actual: delegateevent

Comment: Verifying property descriptor for ev.type
Pass: typeof ev
      Actual: function

Pass: (type in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Comment: *** delegateEventCallback : Exit
Comment: typeof myDelegateCallback: function
Comment: Dump of properties : 
    var myDelegateCallbackMembers = [
    ];
Pass: typeof myDelegateCallback
      Actual: function

Pass: number of members of myDelegateCallback
      Actual: 0

Pass: eventInvokeCount
      Actual: 1

PASS [Test 21: EventHandlerInvokeFormat: <This, sender, delegate>]
=================================================

=================================================
Starting [Test 22: EventHandlerInvokeFormat: <This, sender, delegate = null>]
Comment: Create Object
Comment: Add event listener
Comment: Invoke method and event
Comment: *** nullDelegateInvokeCallback : Invoke
Comment: typeof ev: object
Comment: Dump of properties : 
    var evMembers = [
        ['target', 'object'],
        ['detail', 'object'],
        ['type', 'string'],
    ];
Pass: typeof ev
      Actual: object

Pass: ev["target"]
      Actual: target

Pass: typeof ev["target"]
      Actual: object

Pass: ev["detail"]
      Actual: detail

Pass: typeof ev["detail"]
      Actual: object

Pass: ev["type"]
      Actual: type

Pass: typeof ev["type"]
      Actual: string

Pass: number of members of ev
      Actual: 3

Comment: typeof ev.target: object
Comment: Dump of properties : 
    var ev.targetMembers = [
        ['addEventListener', 'function', 2],
        ['invokeDelegateEvent', 'function', 1],
        ['invokeInterfaceWithTargetEvent', 'function', 0],
        ['invokeStructEvent', 'function', 1],
        ['invokeStructWithTargetEvent', 'function', 1],
        ['ondelegateevent', 'object'],
        ['oninterfacewithtargetevent', 'object'],
        ['onstructevent', 'object'],
        ['onstructwithtargetevent', 'object'],
        ['removeEventListener', 'function', 2],
        ['target', 'function', 1],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.target
      Actual: object

Pass: ev.target["addEventListener"]
      Actual: addEventListener

Pass: typeof ev.target["addEventListener"]
      Actual: function

Pass: ev.target["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["addEventListener"].length
      Actual: 2

Pass: ev.target["invokeDelegateEvent"]
      Actual: invokeDelegateEvent

Pass: typeof ev.target["invokeDelegateEvent"]
      Actual: function

Pass: ev.target["invokeDelegateEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokeDelegateEvent"].length
      Actual: 1

Pass: ev.target["invokeInterfaceWithTargetEvent"]
      Actual: invokeInterfaceWithTargetEvent

Pass: typeof ev.target["invokeInterfaceWithTargetEvent"]
      Actual: function

Pass: ev.target["invokeInterfaceWithTargetEvent"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["invokeInterfaceWithTargetEvent"].length
      Actual: 0

Pass: ev.target["invokeStructEvent"]
      Actual: invokeStructEvent

Pass: typeof ev.target["invokeStructEvent"]
      Actual: function

Pass: ev.target["invokeStructEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokeStructEvent"].length
      Actual: 1

Pass: ev.target["invokeStructWithTargetEvent"]
      Actual: invokeStructWithTargetEvent

Pass: typeof ev.target["invokeStructWithTargetEvent"]
      Actual: function

Pass: ev.target["invokeStructWithTargetEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokeStructWithTargetEvent"].length
      Actual: 1

Pass: ev.target["ondelegateevent"]
      Actual: ondelegateevent

Pass: typeof ev.target["ondelegateevent"]
      Actual: object

Pass: ev.target["oninterfacewithtargetevent"]
      Actual: oninterfacewithtargetevent

Pass: typeof ev.target["oninterfacewithtargetevent"]
      Actual: object

Pass: ev.target["onstructevent"]
      Actual: onstructevent

Pass: typeof ev.target["onstructevent"]
      Actual: object

Pass: ev.target["onstructwithtargetevent"]
      Actual: onstructwithtargetevent

Pass: typeof ev.target["onstructwithtargetevent"]
      Actual: object

Pass: ev.target["removeEventListener"]
      Actual: removeEventListener

Pass: typeof ev.target["removeEventListener"]
      Actual: function

Pass: ev.target["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["removeEventListener"].length
      Actual: 2

Pass: ev.target["target"]
      Actual: target

Pass: typeof ev.target["target"]
      Actual: function

Pass: ev.target["target"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["target"].length
      Actual: 1

Pass: ev.target["toString"]
      Actual: toString

Pass: typeof ev.target["toString"]
      Actual: function

Pass: ev.target["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["toString"].length
      Actual: 0

Pass: number of members of ev.target
      Actual: 12

Pass: ev.target === myRC8WithEvent
      Actual: true

Comment: Verifying property descriptor for ev.target
Pass: typeof ev
      Actual: object

Pass: (target in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: Array.isArray(ev.detail)
      Actual: true

Pass: ev.detail.length
      Actual: 1

Pass: ev.detail[0]
      Actual: null

Comment: Verifying property descriptor for ev.detail
Pass: typeof ev
      Actual: object

Pass: (detail in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: ev.type
      Actual: delegateevent

Comment: Verifying property descriptor for ev.type
Pass: typeof ev
      Actual: object

Pass: (type in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Comment: *** nullDelegateInvokeCallback : Exit
Pass: eventInvokeCount
      Actual: 1

PASS [Test 22: EventHandlerInvokeFormat: <This, sender, delegate = null>]
=================================================

=================================================
Starting [Test 23: EventHandlerInvokeFormat: <This, sender, NameConflictWithTarget - Inteface>]
Comment: Create Object
Comment: Add event listener
Comment: Invoke method and event
Comment: *** interfaceWithTargetEventCallback : Invoke
Comment: typeof ev: object
Comment: Dump of properties : 
    var evMembers = [
        ['target', 'object'],
        ['detail', 'object'],
        ['type', 'string'],
        ['addEventListener', 'function', 2],
        ['invokeDelegateEvent', 'function', 1],
        ['invokeInterfaceWithTargetEvent', 'function', 0],
        ['invokeStructEvent', 'function', 1],
        ['invokeStructWithTargetEvent', 'function', 1],
        ['ondelegateevent', 'object'],
        ['oninterfacewithtargetevent', 'object'],
        ['onstructevent', 'object'],
        ['onstructwithtargetevent', 'object'],
        ['removeEventListener', 'function', 2],
        ['toString', 'function', 0],
    ];
Pass: typeof ev
      Actual: object

Pass: ev["target"]
      Actual: target

Pass: typeof ev["target"]
      Actual: object

Pass: ev["detail"]
      Actual: detail

Pass: typeof ev["detail"]
      Actual: object

Pass: ev["type"]
      Actual: type

Pass: typeof ev["type"]
      Actual: string

Pass: ev["addEventListener"]
      Actual: addEventListener

Pass: typeof ev["addEventListener"]
      Actual: function

Pass: ev["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev["addEventListener"].length
      Actual: 2

Pass: ev["invokeDelegateEvent"]
      Actual: invokeDelegateEvent

Pass: typeof ev["invokeDelegateEvent"]
      Actual: function

Pass: ev["invokeDelegateEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev["invokeDelegateEvent"].length
      Actual: 1

Pass: ev["invokeInterfaceWithTargetEvent"]
      Actual: invokeInterfaceWithTargetEvent

Pass: typeof ev["invokeInterfaceWithTargetEvent"]
      Actual: function

Pass: ev["invokeInterfaceWithTargetEvent"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev["invokeInterfaceWithTargetEvent"].length
      Actual: 0

Pass: ev["invokeStructEvent"]
      Actual: invokeStructEvent

Pass: typeof ev["invokeStructEvent"]
      Actual: function

Pass: ev["invokeStructEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev["invokeStructEvent"].length
      Actual: 1

Pass: ev["invokeStructWithTargetEvent"]
      Actual: invokeStructWithTargetEvent

Pass: typeof ev["invokeStructWithTargetEvent"]
      Actual: function

Pass: ev["invokeStructWithTargetEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev["invokeStructWithTargetEvent"].length
      Actual: 1

Pass: ev["ondelegateevent"]
      Actual: ondelegateevent

Pass: typeof ev["ondelegateevent"]
      Actual: object

Pass: ev["oninterfacewithtargetevent"]
      Actual: oninterfacewithtargetevent

Pass: typeof ev["oninterfacewithtargetevent"]
      Actual: object

Pass: ev["onstructevent"]
      Actual: onstructevent

Pass: typeof ev["onstructevent"]
      Actual: object

Pass: ev["onstructwithtargetevent"]
      Actual: onstructwithtargetevent

Pass: typeof ev["onstructwithtargetevent"]
      Actual: object

Pass: ev["removeEventListener"]
      Actual: removeEventListener

Pass: typeof ev["removeEventListener"]
      Actual: function

Pass: ev["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev["removeEventListener"].length
      Actual: 2

Pass: ev["toString"]
      Actual: toString

Pass: typeof ev["toString"]
      Actual: function

Pass: ev["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev["toString"].length
      Actual: 0

Pass: number of members of ev
      Actual: 14

Comment: typeof ev.target: object
Comment: Dump of properties : 
    var ev.targetMembers = [
        ['addEventListener', 'function', 2],
        ['invokeDelegateEvent', 'function', 1],
        ['invokeInterfaceWithTargetEvent', 'function', 0],
        ['invokeStructEvent', 'function', 1],
        ['invokeStructWithTargetEvent', 'function', 1],
        ['ondelegateevent', 'object'],
        ['oninterfacewithtargetevent', 'object'],
        ['onstructevent', 'object'],
        ['onstructwithtargetevent', 'object'],
        ['removeEventListener', 'function', 2],
        ['target', 'function', 1],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.target
      Actual: object

Pass: ev.target["addEventListener"]
      Actual: addEventListener

Pass: typeof ev.target["addEventListener"]
      Actual: function

Pass: ev.target["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["addEventListener"].length
      Actual: 2

Pass: ev.target["invokeDelegateEvent"]
      Actual: invokeDelegateEvent

Pass: typeof ev.target["invokeDelegateEvent"]
      Actual: function

Pass: ev.target["invokeDelegateEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokeDelegateEvent"].length
      Actual: 1

Pass: ev.target["invokeInterfaceWithTargetEvent"]
      Actual: invokeInterfaceWithTargetEvent

Pass: typeof ev.target["invokeInterfaceWithTargetEvent"]
      Actual: function

Pass: ev.target["invokeInterfaceWithTargetEvent"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["invokeInterfaceWithTargetEvent"].length
      Actual: 0

Pass: ev.target["invokeStructEvent"]
      Actual: invokeStructEvent

Pass: typeof ev.target["invokeStructEvent"]
      Actual: function

Pass: ev.target["invokeStructEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokeStructEvent"].length
      Actual: 1

Pass: ev.target["invokeStructWithTargetEvent"]
      Actual: invokeStructWithTargetEvent

Pass: typeof ev.target["invokeStructWithTargetEvent"]
      Actual: function

Pass: ev.target["invokeStructWithTargetEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokeStructWithTargetEvent"].length
      Actual: 1

Pass: ev.target["ondelegateevent"]
      Actual: ondelegateevent

Pass: typeof ev.target["ondelegateevent"]
      Actual: object

Pass: ev.target["oninterfacewithtargetevent"]
      Actual: oninterfacewithtargetevent

Pass: typeof ev.target["oninterfacewithtargetevent"]
      Actual: object

Pass: ev.target["onstructevent"]
      Actual: onstructevent

Pass: typeof ev.target["onstructevent"]
      Actual: object

Pass: ev.target["onstructwithtargetevent"]
      Actual: onstructwithtargetevent

Pass: typeof ev.target["onstructwithtargetevent"]
      Actual: object

Pass: ev.target["removeEventListener"]
      Actual: removeEventListener

Pass: typeof ev.target["removeEventListener"]
      Actual: function

Pass: ev.target["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["removeEventListener"].length
      Actual: 2

Pass: ev.target["target"]
      Actual: target

Pass: typeof ev.target["target"]
      Actual: function

Pass: ev.target["target"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["target"].length
      Actual: 1

Pass: ev.target["toString"]
      Actual: toString

Pass: typeof ev.target["toString"]
      Actual: function

Pass: ev.target["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["toString"].length
      Actual: 0

Pass: number of members of ev.target
      Actual: 12

Pass: ev.target === myRC8WithEvent
      Actual: true

Comment: Verifying property descriptor for ev.target
Pass: typeof ev
      Actual: object

Pass: (target in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: Array.isArray(ev.detail)
      Actual: true

Pass: ev.detail.length
      Actual: 1

Comment: typeof ev.detail[0]: object
Comment: Dump of properties : 
    var ev.detail[0]Members = [
        ['addEventListener', 'function', 2],
        ['invokeDelegateEvent', 'function', 1],
        ['invokeInterfaceWithTargetEvent', 'function', 0],
        ['invokeStructEvent', 'function', 1],
        ['invokeStructWithTargetEvent', 'function', 1],
        ['ondelegateevent', 'object'],
        ['oninterfacewithtargetevent', 'object'],
        ['onstructevent', 'object'],
        ['onstructwithtargetevent', 'object'],
        ['removeEventListener', 'function', 2],
        ['target', 'function', 1],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.detail[0]
      Actual: object

Pass: ev.detail[0]["addEventListener"]
      Actual: addEventListener

Pass: typeof ev.detail[0]["addEventListener"]
      Actual: function

Pass: ev.detail[0]["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.detail[0]["addEventListener"].length
      Actual: 2

Pass: ev.detail[0]["invokeDelegateEvent"]
      Actual: invokeDelegateEvent

Pass: typeof ev.detail[0]["invokeDelegateEvent"]
      Actual: function

Pass: ev.detail[0]["invokeDelegateEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.detail[0]["invokeDelegateEvent"].length
      Actual: 1

Pass: ev.detail[0]["invokeInterfaceWithTargetEvent"]
      Actual: invokeInterfaceWithTargetEvent

Pass: typeof ev.detail[0]["invokeInterfaceWithTargetEvent"]
      Actual: function

Pass: ev.detail[0]["invokeInterfaceWithTargetEvent"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.detail[0]["invokeInterfaceWithTargetEvent"].length
      Actual: 0

Pass: ev.detail[0]["invokeStructEvent"]
      Actual: invokeStructEvent

Pass: typeof ev.detail[0]["invokeStructEvent"]
      Actual: function

Pass: ev.detail[0]["invokeStructEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.detail[0]["invokeStructEvent"].length
      Actual: 1

Pass: ev.detail[0]["invokeStructWithTargetEvent"]
      Actual: invokeStructWithTargetEvent

Pass: typeof ev.detail[0]["invokeStructWithTargetEvent"]
      Actual: function

Pass: ev.detail[0]["invokeStructWithTargetEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.detail[0]["invokeStructWithTargetEvent"].length
      Actual: 1

Pass: ev.detail[0]["ondelegateevent"]
      Actual: ondelegateevent

Pass: typeof ev.detail[0]["ondelegateevent"]
      Actual: object

Pass: ev.detail[0]["oninterfacewithtargetevent"]
      Actual: oninterfacewithtargetevent

Pass: typeof ev.detail[0]["oninterfacewithtargetevent"]
      Actual: object

Pass: ev.detail[0]["onstructevent"]
      Actual: onstructevent

Pass: typeof ev.detail[0]["onstructevent"]
      Actual: object

Pass: ev.detail[0]["onstructwithtargetevent"]
      Actual: onstructwithtargetevent

Pass: typeof ev.detail[0]["onstructwithtargetevent"]
      Actual: object

Pass: ev.detail[0]["removeEventListener"]
      Actual: removeEventListener

Pass: typeof ev.detail[0]["removeEventListener"]
      Actual: function

Pass: ev.detail[0]["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.detail[0]["removeEventListener"].length
      Actual: 2

Pass: ev.detail[0]["target"]
      Actual: target

Pass: typeof ev.detail[0]["target"]
      Actual: function

Pass: ev.detail[0]["target"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.detail[0]["target"].length
      Actual: 1

Pass: ev.detail[0]["toString"]
      Actual: toString

Pass: typeof ev.detail[0]["toString"]
      Actual: function

Pass: ev.detail[0]["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.detail[0]["toString"].length
      Actual: 0

Pass: number of members of ev.detail[0]
      Actual: 12

Pass: ev.detail[0] === myRC8WithEvent
      Actual: true

Pass: ev !== ev.detail[0]
      Actual: true

Pass: ev != ev.detail[0]
      Actual: true

Comment: Verifying property descriptor for ev.detail
Pass: typeof ev
      Actual: object

Pass: (detail in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: ev.type
      Actual: interfacewithtargetevent

Comment: Verifying property descriptor for ev.type
Pass: typeof ev
      Actual: object

Pass: (type in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Comment: *** interfaceWithTargetEventCallback : Exit
Pass: eventInvokeCount
      Actual: 1

PASS [Test 23: EventHandlerInvokeFormat: <This, sender, NameConflictWithTarget - Inteface>]
=================================================

=================================================
Starting [Test 24: EventHandlerInvokeFormat: <This, sender, NameConflictWithTarget - struct>]
Comment: Create Object
Comment: Add event listener
Comment: Invoke method and event
Comment: *** structWithTargetEventCallback : Invoke
Comment: typeof ev: object
Comment: Dump of properties : 
    var evMembers = [
        ['structId', 'number'],
        ['structData', 'number'],
        ['target', 'object'],
        ['detail', 'object'],
        ['type', 'string'],
    ];
Pass: typeof ev
      Actual: object

Pass: ev["structId"]
      Actual: structId

Pass: typeof ev["structId"]
      Actual: number

Pass: ev["structData"]
      Actual: structData

Pass: typeof ev["structData"]
      Actual: number

Pass: ev["target"]
      Actual: target

Pass: typeof ev["target"]
      Actual: object

Pass: ev["detail"]
      Actual: detail

Pass: typeof ev["detail"]
      Actual: object

Pass: ev["type"]
      Actual: type

Pass: typeof ev["type"]
      Actual: string

Pass: number of members of ev
      Actual: 5

Comment: typeof ev.target: object
Comment: Dump of properties : 
    var ev.targetMembers = [
        ['addEventListener', 'function', 2],
        ['invokeDelegateEvent', 'function', 1],
        ['invokeInterfaceWithTargetEvent', 'function', 0],
        ['invokeStructEvent', 'function', 1],
        ['invokeStructWithTargetEvent', 'function', 1],
        ['ondelegateevent', 'object'],
        ['oninterfacewithtargetevent', 'object'],
        ['onstructevent', 'object'],
        ['onstructwithtargetevent', 'object'],
        ['removeEventListener', 'function', 2],
        ['target', 'function', 1],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.target
      Actual: object

Pass: ev.target["addEventListener"]
      Actual: addEventListener

Pass: typeof ev.target["addEventListener"]
      Actual: function

Pass: ev.target["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["addEventListener"].length
      Actual: 2

Pass: ev.target["invokeDelegateEvent"]
      Actual: invokeDelegateEvent

Pass: typeof ev.target["invokeDelegateEvent"]
      Actual: function

Pass: ev.target["invokeDelegateEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokeDelegateEvent"].length
      Actual: 1

Pass: ev.target["invokeInterfaceWithTargetEvent"]
      Actual: invokeInterfaceWithTargetEvent

Pass: typeof ev.target["invokeInterfaceWithTargetEvent"]
      Actual: function

Pass: ev.target["invokeInterfaceWithTargetEvent"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["invokeInterfaceWithTargetEvent"].length
      Actual: 0

Pass: ev.target["invokeStructEvent"]
      Actual: invokeStructEvent

Pass: typeof ev.target["invokeStructEvent"]
      Actual: function

Pass: ev.target["invokeStructEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokeStructEvent"].length
      Actual: 1

Pass: ev.target["invokeStructWithTargetEvent"]
      Actual: invokeStructWithTargetEvent

Pass: typeof ev.target["invokeStructWithTargetEvent"]
      Actual: function

Pass: ev.target["invokeStructWithTargetEvent"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokeStructWithTargetEvent"].length
      Actual: 1

Pass: ev.target["ondelegateevent"]
      Actual: ondelegateevent

Pass: typeof ev.target["ondelegateevent"]
      Actual: object

Pass: ev.target["oninterfacewithtargetevent"]
      Actual: oninterfacewithtargetevent

Pass: typeof ev.target["oninterfacewithtargetevent"]
      Actual: object

Pass: ev.target["onstructevent"]
      Actual: onstructevent

Pass: typeof ev.target["onstructevent"]
      Actual: object

Pass: ev.target["onstructwithtargetevent"]
      Actual: onstructwithtargetevent

Pass: typeof ev.target["onstructwithtargetevent"]
      Actual: object

Pass: ev.target["removeEventListener"]
      Actual: removeEventListener

Pass: typeof ev.target["removeEventListener"]
      Actual: function

Pass: ev.target["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["removeEventListener"].length
      Actual: 2

Pass: ev.target["target"]
      Actual: target

Pass: typeof ev.target["target"]
      Actual: function

Pass: ev.target["target"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["target"].length
      Actual: 1

Pass: ev.target["toString"]
      Actual: toString

Pass: typeof ev.target["toString"]
      Actual: function

Pass: ev.target["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["toString"].length
      Actual: 0

Pass: number of members of ev.target
      Actual: 12

Pass: ev.target === myRC8WithEvent
      Actual: true

Comment: Verifying property descriptor for ev.target
Pass: typeof ev
      Actual: object

Pass: (target in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: Array.isArray(ev.detail)
      Actual: true

Pass: ev.detail.length
      Actual: 1

Comment: typeof ev.detail[0]: object
Comment: Dump of properties : 
    var ev.detail[0]Members = [
        ['structId', 'number'],
        ['structData', 'number'],
        ['target', 'boolean'],
    ];
Pass: typeof ev.detail[0]
      Actual: object

Pass: ev.detail[0]["structId"]
      Actual: structId

Pass: typeof ev.detail[0]["structId"]
      Actual: number

Pass: ev.detail[0]["structData"]
      Actual: structData

Pass: typeof ev.detail[0]["structData"]
      Actual: number

Pass: ev.detail[0]["target"]
      Actual: target

Pass: typeof ev.detail[0]["target"]
      Actual: boolean

Pass: number of members of ev.detail[0]
      Actual: 3

Pass: ev.detail[0]
      Actual: [object Animals._StructForStructWithTargetEvent]

Pass: ev.detail[0].structId
      Actual: 10

Pass: ev.detail[0].structData
      Actual: 100

Pass: ev.detail[0].target !== ev.target
      Actual: true

Pass: ev.detail[0].target != ev.target
      Actual: true

Pass: ev !== ev.detail[0]
      Actual: true

Pass: ev != ev.detail[0]
      Actual: true

Comment: Verifying property descriptor for ev.detail
Pass: typeof ev
      Actual: object

Pass: (detail in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: ev.type
      Actual: structwithtargetevent

Comment: Verifying property descriptor for ev.type
Pass: typeof ev
      Actual: object

Pass: (type in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Comment: *** structWithTargetEventCallback : Exit
Pass: eventInvokeCount
      Actual: 1

PASS [Test 24: EventHandlerInvokeFormat: <This, sender, NameConflictWithTarget - struct>]
=================================================

=================================================
Starting [Test 25: BasicEventHandler]
Comment: Create the chef and toaster
Comment: typeof myChef: object
Comment: Dump of properties : 
    var myChefMembers = [
        ['addEventListener', 'function', 2],
        ['capabilities', 'number'],
        ['makeBreakfast', 'function', 1],
        ['name', 'string'],
        ['onmaketoastroundoff', 'object'],
        ['onmultipletoastcompletearray', 'object'],
        ['onmultipletoastcompletecollection', 'object'],
        ['removeEventListener', 'function', 2],
        ['role', 'number'],
        ['toString', 'function', 0],
    ];
Pass: typeof myChef
      Actual: object

Pass: myChef["addEventListener"]
      Actual: addEventListener

Pass: typeof myChef["addEventListener"]
      Actual: function

Pass: myChef["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myChef["addEventListener"].length
      Actual: 2

Pass: myChef["capabilities"]
      Actual: capabilities

Pass: typeof myChef["capabilities"]
      Actual: number

Pass: myChef["makeBreakfast"]
      Actual: makeBreakfast

Pass: typeof myChef["makeBreakfast"]
      Actual: function

Pass: myChef["makeBreakfast"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myChef["makeBreakfast"].length
      Actual: 1

Pass: myChef["name"]
      Actual: name

Pass: typeof myChef["name"]
      Actual: string

Pass: myChef["onmaketoastroundoff"]
      Actual: onmaketoastroundoff

Pass: typeof myChef["onmaketoastroundoff"]
      Actual: object

Pass: myChef["onmultipletoastcompletearray"]
      Actual: onmultipletoastcompletearray

Pass: typeof myChef["onmultipletoastcompletearray"]
      Actual: object

Pass: myChef["onmultipletoastcompletecollection"]
      Actual: onmultipletoastcompletecollection

Pass: typeof myChef["onmultipletoastcompletecollection"]
      Actual: object

Pass: myChef["removeEventListener"]
      Actual: removeEventListener

Pass: typeof myChef["removeEventListener"]
      Actual: function

Pass: myChef["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myChef["removeEventListener"].length
      Actual: 2

Pass: myChef["role"]
      Actual: role

Pass: typeof myChef["role"]
      Actual: number

Pass: myChef["toString"]
      Actual: toString

Pass: typeof myChef["toString"]
      Actual: function

Pass: myChef["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myChef["toString"].length
      Actual: 0

Pass: number of members of myChef
      Actual: 10

Pass: myChef.onmultipletoastcompletecollection
      Actual: null

Comment: Add event handler for multiple toast complete
Pass: myChef.onmultipletoastcompletecollection
      Actual: function multipleToastCompleteCollectionCallback(ev) {
                logger.comment("*** multipleToastCompleteCollectionCallback : Invoke");
                eventInvokeCount++;

                // Verify Ev
                verifyMembers("ev", ev, evToastList5Members);

                // Verify target
                verifyMembers("ev.target", ev.target, chefWithEventHandlerMembers);
                assert(ev.target === myChef, "ev.target === myChef");
                verifyEvObjectPropertyDescriptor("ev", ev, "target");

                // Verify Detail
                assert(Array.isArray(ev.detail), "Array.isArray(ev.detail)");
                verify(ev.detail.length, 1, "ev.detail.length");
                verifyMembers("ev.detail[0]", ev.detail[0], toastList5Members);
                assert(ev !== ev.detail[0], "ev !== ev.detail[0]");
                assert(ev != ev.detail[0], "ev != ev.detail[0]");
                var detail0 = ev.detail[0];
                for (i = 0; i < 5; i++) {
                    verify(detail0[i].message, ev[i].message, "ev.detail[0][" + i + "].message");
                }
                verifyEvObjectPropertyDescriptor("ev", ev, "detail");

                // verify type
                verify(ev.type, "multipletoastcompletecollection", "ev.type");
                verifyEvObjectPropertyDescriptor("ev", ev, "type");

                logger.comment("*** multipleToastCompleteCollectionCallback : Exit");
            }

Comment: *** multipleToastCompleteCollectionCallback : Invoke
Comment: typeof ev: object
Comment: Dump of properties : 
    var evMembers = [
        ['0', 'object'],
        ['1', 'object'],
        ['2', 'object'],
        ['3', 'object'],
        ['4', 'object'],
        ['target', 'object'],
        ['detail', 'object'],
        ['type', 'string'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof ev
      Actual: object

Pass: ev["0"]
      Actual: 0

Pass: typeof ev["0"]
      Actual: object

Pass: ev["1"]
      Actual: 1

Pass: typeof ev["1"]
      Actual: object

Pass: ev["2"]
      Actual: 2

Pass: typeof ev["2"]
      Actual: object

Pass: ev["3"]
      Actual: 3

Pass: typeof ev["3"]
      Actual: object

Pass: ev["4"]
      Actual: 4

Pass: typeof ev["4"]
      Actual: object

Pass: ev["target"]
      Actual: target

Pass: typeof ev["target"]
      Actual: object

Pass: ev["detail"]
      Actual: detail

Pass: typeof ev["detail"]
      Actual: object

Pass: ev["type"]
      Actual: type

Pass: typeof ev["type"]
      Actual: string

Pass: ev["append"]
      Actual: append

Pass: typeof ev["append"]
      Actual: function

Pass: ev["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev["append"].length
      Actual: 1

Pass: ev["clear"]
      Actual: clear

Pass: typeof ev["clear"]
      Actual: function

Pass: ev["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev["clear"].length
      Actual: 0

Pass: ev["first"]
      Actual: first

Pass: typeof ev["first"]
      Actual: function

Pass: ev["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev["first"].length
      Actual: 0

Pass: ev["getAt"]
      Actual: getAt

Pass: typeof ev["getAt"]
      Actual: function

Pass: ev["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev["getAt"].length
      Actual: 1

Pass: ev["getMany"]
      Actual: getMany

Pass: typeof ev["getMany"]
      Actual: function

Pass: ev["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev["getMany"].length
      Actual: 2

Pass: ev["getView"]
      Actual: getView

Pass: typeof ev["getView"]
      Actual: function

Pass: ev["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev["getView"].length
      Actual: 0

Pass: ev["indexOf"]
      Actual: indexOf

Pass: typeof ev["indexOf"]
      Actual: function

Pass: ev["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev["indexOf"].length
      Actual: 1

Pass: ev["insertAt"]
      Actual: insertAt

Pass: typeof ev["insertAt"]
      Actual: function

Pass: ev["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev["insertAt"].length
      Actual: 2

Pass: ev["removeAt"]
      Actual: removeAt

Pass: typeof ev["removeAt"]
      Actual: function

Pass: ev["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev["removeAt"].length
      Actual: 1

Pass: ev["removeAtEnd"]
      Actual: removeAtEnd

Pass: typeof ev["removeAtEnd"]
      Actual: function

Pass: ev["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev["removeAtEnd"].length
      Actual: 0

Pass: ev["replaceAll"]
      Actual: replaceAll

Pass: typeof ev["replaceAll"]
      Actual: function

Pass: ev["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev["replaceAll"].length
      Actual: 1

Pass: ev["setAt"]
      Actual: setAt

Pass: typeof ev["setAt"]
      Actual: function

Pass: ev["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev["setAt"].length
      Actual: 2

Pass: ev["size"]
      Actual: size

Pass: typeof ev["size"]
      Actual: number

Pass: number of members of ev
      Actual: 21

Comment: typeof ev.target: object
Comment: Dump of properties : 
    var ev.targetMembers = [
        ['addEventListener', 'function', 2],
        ['capabilities', 'number'],
        ['makeBreakfast', 'function', 1],
        ['name', 'string'],
        ['onmaketoastroundoff', 'object'],
        ['onmultipletoastcompletearray', 'object'],
        ['onmultipletoastcompletecollection', 'function', 1],
        ['removeEventListener', 'function', 2],
        ['role', 'number'],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.target
      Actual: object

Pass: ev.target["addEventListener"]
      Actual: addEventListener

Pass: typeof ev.target["addEventListener"]
      Actual: function

Pass: ev.target["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["addEventListener"].length
      Actual: 2

Pass: ev.target["capabilities"]
      Actual: capabilities

Pass: typeof ev.target["capabilities"]
      Actual: number

Pass: ev.target["makeBreakfast"]
      Actual: makeBreakfast

Pass: typeof ev.target["makeBreakfast"]
      Actual: function

Pass: ev.target["makeBreakfast"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["makeBreakfast"].length
      Actual: 1

Pass: ev.target["name"]
      Actual: name

Pass: typeof ev.target["name"]
      Actual: string

Pass: ev.target["onmaketoastroundoff"]
      Actual: onmaketoastroundoff

Pass: typeof ev.target["onmaketoastroundoff"]
      Actual: object

Pass: ev.target["onmultipletoastcompletearray"]
      Actual: onmultipletoastcompletearray

Pass: typeof ev.target["onmultipletoastcompletearray"]
      Actual: object

Pass: ev.target["onmultipletoastcompletecollection"]
      Actual: onmultipletoastcompletecollection

Pass: typeof ev.target["onmultipletoastcompletecollection"]
      Actual: function

Pass: ev.target["onmultipletoastcompletecollection"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["onmultipletoastcompletecollection"].length
      Actual: 1

Pass: ev.target["removeEventListener"]
      Actual: removeEventListener

Pass: typeof ev.target["removeEventListener"]
      Actual: function

Pass: ev.target["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["removeEventListener"].length
      Actual: 2

Pass: ev.target["role"]
      Actual: role

Pass: typeof ev.target["role"]
      Actual: number

Pass: ev.target["toString"]
      Actual: toString

Pass: typeof ev.target["toString"]
      Actual: function

Pass: ev.target["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["toString"].length
      Actual: 0

Pass: number of members of ev.target
      Actual: 10

Pass: ev.target === myChef
      Actual: true

Comment: Verifying property descriptor for ev.target
Pass: typeof ev
      Actual: object

Pass: (target in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: Array.isArray(ev.detail)
      Actual: true

Pass: ev.detail.length
      Actual: 1

Comment: typeof ev.detail[0]: object
Comment: Dump of properties : 
    var ev.detail[0]Members = [
        ['0', 'object'],
        ['1', 'object'],
        ['2', 'object'],
        ['3', 'object'],
        ['4', 'object'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof ev.detail[0]
      Actual: object

Pass: ev.detail[0]["0"]
      Actual: 0

Pass: typeof ev.detail[0]["0"]
      Actual: object

Pass: ev.detail[0]["1"]
      Actual: 1

Pass: typeof ev.detail[0]["1"]
      Actual: object

Pass: ev.detail[0]["2"]
      Actual: 2

Pass: typeof ev.detail[0]["2"]
      Actual: object

Pass: ev.detail[0]["3"]
      Actual: 3

Pass: typeof ev.detail[0]["3"]
      Actual: object

Pass: ev.detail[0]["4"]
      Actual: 4

Pass: typeof ev.detail[0]["4"]
      Actual: object

Pass: ev.detail[0]["append"]
      Actual: append

Pass: typeof ev.detail[0]["append"]
      Actual: function

Pass: ev.detail[0]["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.detail[0]["append"].length
      Actual: 1

Pass: ev.detail[0]["clear"]
      Actual: clear

Pass: typeof ev.detail[0]["clear"]
      Actual: function

Pass: ev.detail[0]["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.detail[0]["clear"].length
      Actual: 0

Pass: ev.detail[0]["first"]
      Actual: first

Pass: typeof ev.detail[0]["first"]
      Actual: function

Pass: ev.detail[0]["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.detail[0]["first"].length
      Actual: 0

Pass: ev.detail[0]["getAt"]
      Actual: getAt

Pass: typeof ev.detail[0]["getAt"]
      Actual: function

Pass: ev.detail[0]["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.detail[0]["getAt"].length
      Actual: 1

Pass: ev.detail[0]["getMany"]
      Actual: getMany

Pass: typeof ev.detail[0]["getMany"]
      Actual: function

Pass: ev.detail[0]["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.detail[0]["getMany"].length
      Actual: 2

Pass: ev.detail[0]["getView"]
      Actual: getView

Pass: typeof ev.detail[0]["getView"]
      Actual: function

Pass: ev.detail[0]["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.detail[0]["getView"].length
      Actual: 0

Pass: ev.detail[0]["indexOf"]
      Actual: indexOf

Pass: typeof ev.detail[0]["indexOf"]
      Actual: function

Pass: ev.detail[0]["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.detail[0]["indexOf"].length
      Actual: 1

Pass: ev.detail[0]["insertAt"]
      Actual: insertAt

Pass: typeof ev.detail[0]["insertAt"]
      Actual: function

Pass: ev.detail[0]["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.detail[0]["insertAt"].length
      Actual: 2

Pass: ev.detail[0]["removeAt"]
      Actual: removeAt

Pass: typeof ev.detail[0]["removeAt"]
      Actual: function

Pass: ev.detail[0]["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.detail[0]["removeAt"].length
      Actual: 1

Pass: ev.detail[0]["removeAtEnd"]
      Actual: removeAtEnd

Pass: typeof ev.detail[0]["removeAtEnd"]
      Actual: function

Pass: ev.detail[0]["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.detail[0]["removeAtEnd"].length
      Actual: 0

Pass: ev.detail[0]["replaceAll"]
      Actual: replaceAll

Pass: typeof ev.detail[0]["replaceAll"]
      Actual: function

Pass: ev.detail[0]["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.detail[0]["replaceAll"].length
      Actual: 1

Pass: ev.detail[0]["setAt"]
      Actual: setAt

Pass: typeof ev.detail[0]["setAt"]
      Actual: function

Pass: ev.detail[0]["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.detail[0]["setAt"].length
      Actual: 2

Pass: ev.detail[0]["size"]
      Actual: size

Pass: typeof ev.detail[0]["size"]
      Actual: number

Pass: number of members of ev.detail[0]
      Actual: 18

Pass: ev !== ev.detail[0]
      Actual: true

Pass: ev != ev.detail[0]
      Actual: true

Pass: ev.detail[0][0].message
      Actual: Bob

Pass: ev.detail[0][1].message
      Actual: Bob

Pass: ev.detail[0][2].message
      Actual: Bob

Pass: ev.detail[0][3].message
      Actual: Bob

Pass: ev.detail[0][4].message
      Actual: Bob

Comment: Verifying property descriptor for ev.detail
Pass: typeof ev
      Actual: object

Pass: (detail in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Pass: ev.type
      Actual: multipletoastcompletecollection

Comment: Verifying property descriptor for ev.type
Pass: typeof ev
      Actual: object

Pass: (type in ev)
      Actual: true

Comment: Get property descriptor from object
Pass: desc !== undefined
      Actual: true

Pass: desc.writable
      Actual: false

Pass: desc.enumerable
      Actual: true

Pass: desc.configurable
      Actual: false

Pass: desc.get
      Actual: undefined

Pass: desc.set
      Actual: undefined

Pass: desc.value
      Actual: true

Comment: *** multipleToastCompleteCollectionCallback : Exit
Pass: eventInvokeCount
      Actual: 1

Comment: Set event handler to null
Pass: myChef.onmultipletoastcompletecollection
      Actual: null

Pass: eventInvokeCount
      Actual: 1

PASS [Test 25: BasicEventHandler]
=================================================

=================================================
Starting [Test 26: CombinationOfEventHandlerSet]
Comment: Create the chef and toaster
Comment: typeof myChef: object
Comment: Dump of properties : 
    var myChefMembers = [
        ['addEventListener', 'function', 2],
        ['capabilities', 'number'],
        ['makeBreakfast', 'function', 1],
        ['name', 'string'],
        ['onmaketoastroundoff', 'object'],
        ['onmultipletoastcompletearray', 'object'],
        ['onmultipletoastcompletecollection', 'object'],
        ['removeEventListener', 'function', 2],
        ['role', 'number'],
        ['toString', 'function', 0],
    ];
Pass: typeof myChef
      Actual: object

Pass: myChef["addEventListener"]
      Actual: addEventListener

Pass: typeof myChef["addEventListener"]
      Actual: function

Pass: myChef["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myChef["addEventListener"].length
      Actual: 2

Pass: myChef["capabilities"]
      Actual: capabilities

Pass: typeof myChef["capabilities"]
      Actual: number

Pass: myChef["makeBreakfast"]
      Actual: makeBreakfast

Pass: typeof myChef["makeBreakfast"]
      Actual: function

Pass: myChef["makeBreakfast"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myChef["makeBreakfast"].length
      Actual: 1

Pass: myChef["name"]
      Actual: name

Pass: typeof myChef["name"]
      Actual: string

Pass: myChef["onmaketoastroundoff"]
      Actual: onmaketoastroundoff

Pass: typeof myChef["onmaketoastroundoff"]
      Actual: object

Pass: myChef["onmultipletoastcompletearray"]
      Actual: onmultipletoastcompletearray

Pass: typeof myChef["onmultipletoastcompletearray"]
      Actual: object

Pass: myChef["onmultipletoastcompletecollection"]
      Actual: onmultipletoastcompletecollection

Pass: typeof myChef["onmultipletoastcompletecollection"]
      Actual: object

Pass: myChef["removeEventListener"]
      Actual: removeEventListener

Pass: typeof myChef["removeEventListener"]
      Actual: function

Pass: myChef["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myChef["removeEventListener"].length
      Actual: 2

Pass: myChef["role"]
      Actual: role

Pass: typeof myChef["role"]
      Actual: number

Pass: myChef["toString"]
      Actual: toString

Pass: typeof myChef["toString"]
      Actual: function

Pass: myChef["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myChef["toString"].length
      Actual: 0

Pass: number of members of myChef
      Actual: 10

Pass: myChef.onmultipletoastcompletecollection
      Actual: null

Comment: Add event handler for multiple toast complete - callback1
Pass: myChef.onmultipletoastcompletecollection
      Actual: function multipleToastCompleteCollectionCallback1(ev) {
                logger.comment("*** multipleToastCompleteCollectionCallback1 : Invoke");
                eventInvokeCount++;
                eventInvokeCount1++;

                // Verify that event handler is being invoked correctly
                verify(ev.type, "multipletoastcompletecollection", "ev.type");

                logger.comment("*** multipleToastCompleteCollectionCallback1 : Exit");
            }

Comment: *** multipleToastCompleteCollectionCallback1 : Invoke
Pass: ev.type
      Actual: multipletoastcompletecollection

Comment: *** multipleToastCompleteCollectionCallback1 : Exit
Pass: eventInvokeCount
      Actual: 1

Pass: eventInvokeCount1
      Actual: 1

Pass: eventInvokeCount2
      Actual: 0

Comment: Set event handler to callback2
Pass: myChef.onmultipletoastcompletecollection
      Actual: function multipleToastCompleteCollectionCallback2(ev) {
                logger.comment("*** multipleToastCompleteCollectionCallback2 : Invoke");
                eventInvokeCount++;
                eventInvokeCount2++;

                // Verify that event handler is being invoked correctly
                verify(ev.type, "multipletoastcompletecollection", "ev.type");

                logger.comment("*** multipleToastCompleteCollectionCallback2 : Exit");
            }

Comment: *** multipleToastCompleteCollectionCallback2 : Invoke
Pass: ev.type
      Actual: multipletoastcompletecollection

Comment: *** multipleToastCompleteCollectionCallback2 : Exit
Pass: eventInvokeCount
      Actual: 2

Pass: eventInvokeCount1
      Actual: 1

Pass: eventInvokeCount2
      Actual: 1

Comment: Set event handler to null
Pass: myChef.onmultipletoastcompletecollection
      Actual: null

Pass: eventInvokeCount
      Actual: 2

Pass: eventInvokeCount1
      Actual: 1

Pass: eventInvokeCount2
      Actual: 1

Comment: Set event handler to callback 2
Pass: myChef.onmultipletoastcompletecollection
      Actual: function multipleToastCompleteCollectionCallback2(ev) {
                logger.comment("*** multipleToastCompleteCollectionCallback2 : Invoke");
                eventInvokeCount++;
                eventInvokeCount2++;

                // Verify that event handler is being invoked correctly
                verify(ev.type, "multipletoastcompletecollection", "ev.type");

                logger.comment("*** multipleToastCompleteCollectionCallback2 : Exit");
            }

Comment: *** multipleToastCompleteCollectionCallback2 : Invoke
Pass: ev.type
      Actual: multipletoastcompletecollection

Comment: *** multipleToastCompleteCollectionCallback2 : Exit
Pass: eventInvokeCount
      Actual: 3

Pass: eventInvokeCount1
      Actual: 1

Pass: eventInvokeCount2
      Actual: 2

PASS [Test 26: CombinationOfEventHandlerSet]
=================================================

=================================================
Starting [Test 27: NameConflictsOnEventHandler: With event name collision of event1 and event method collision onevent2]
Comment: Create the object;
Pass: myRC1WithEvent["onevent1"]
      Actual: null

Pass: myRC1WithEvent.onevent2
      Actual: null

Pass: myRC1WithEvent["onevent21"]
      Actual: null

Pass: myRC1WithEvent.onevent3
      Actual: null

Comment: Set the callbacks
Pass: myRC1WithEvent["onevent1"]
      Actual: function interface1Callback1(ev) {
                logger.comment("*** interface1Callback1: Invoke");
                i1e1Count++;
                verify(ev.type, "event1", "ev.type");
                verify(ev.detail[0], ev.type, "ev.detail[0]");
                logger.comment("*** interface1Callback1: Exit");
            }

Pass: myRC1WithEvent.onevent2
      Actual: function interface1Callback2(ev) {
                logger.comment("*** interface1Callback2: Invoke");
                i1e2Count++;
                verify(ev.type, "event2", "ev.type");
                verify(ev.detail[0], ev.type, "ev.detail[0]");
                logger.comment("*** interface1Callback2: Exit");
            }

Pass: myRC1WithEvent["onevent21"]
      Actual: function interface2Callback1(ev) {
                logger.comment("*** interface2Callback1: Invoke");
                i2e1Count++;
                verify(ev.type, "event21", "ev.type");
                verify(ev.detail[0], ev.type, "ev.detail[0]");
                logger.comment("*** interface2Callback1: Exit");
            }

Pass: myRC1WithEvent.onevent3
      Actual: function interface2Callback3(ev) {
                logger.comment("*** interface2Callback3: Invoke");
                i2e3Count++;
                verify(ev.type, "event3", "ev.type");
                verify(ev.detail[0], ev.type, "ev.detail[0]");
                logger.comment("*** interface2Callback3: Exit");
            }

Comment: Invoke events and methods
Comment: *** interface1Callback1: Invoke
Pass: ev.type
      Actual: event1

Pass: ev.detail[0]
      Actual: event1

Comment: *** interface1Callback1: Exit
Pass: i1e1Count
      Actual: 1

Comment: *** interface1Callback2: Invoke
Pass: ev.type
      Actual: event2

Pass: ev.detail[0]
      Actual: event2

Comment: *** interface1Callback2: Exit
Pass: i1e2Count
      Actual: 1

Comment: *** interface2Callback1: Invoke
Pass: ev.type
      Actual: event21

Pass: ev.detail[0]
      Actual: event21

Comment: *** interface2Callback1: Exit
Pass: i2e1Count
      Actual: 1

Comment: *** interface2Callback3: Invoke
Pass: ev.type
      Actual: event3

Pass: ev.detail[0]
      Actual: event3

Comment: *** interface2Callback3: Exit
Pass: i2e3Count
      Actual: 1

Pass: myRC1WithEvent["Animals.IInterface2WithEvent.onevent2"]("This is onevent2 method")
      Actual: This is onevent2 method

Comment: Set the callbacks to null
Pass: myRC1WithEvent["onevent1"]
      Actual: null

Pass: myRC1WithEvent.onevent2
      Actual: null

Pass: myRC1WithEvent["onevent21"]
      Actual: null

Pass: myRC1WithEvent.onevent3
      Actual: null

Comment: Invoke events and methods
Pass: i1e1Count
      Actual: 1

Pass: i1e2Count
      Actual: 1

Pass: i2e1Count
      Actual: 1

Pass: i2e3Count
      Actual: 1

Pass: myRC1WithEvent["Animals.IInterface2WithEvent.onevent2"]("This is onevent2 method")
      Actual: This is onevent2 method

PASS [Test 27: NameConflictsOnEventHandler: With event name collision of event1 and event method collision onevent2]
=================================================

=================================================
Starting [Test 28: NameConflictsOnEventHandler: event method collision resulting in unresolvable thunk]
Comment: Create the object;
Comment: verify that onevent1 is unresolvable thunk for interface 4
Pass: Exception from unresolvable event-method returned (TypeError: Object expected)
      Actual: true

Comment: Test to check rest of the event1 handlers can be set
Pass: myRC6WithEvent["Animals.IInterface1WithEvent.onevent1"]
      Actual: null

Pass: myRC6WithEvent.onevent2
      Actual: null

Pass: myRC6WithEvent["onevent21"]
      Actual: null

Pass: myRC6WithEvent.onevent3
      Actual: null

Pass: myRC6WithEvent["onevent31"]
      Actual: null

Pass: myRC6WithEvent.onevent5
      Actual: null

Comment: Set the callbacks
Pass: myRC6WithEvent["Animals.IInterface1WithEvent.onevent1"]
      Actual: function interface1Callback1(ev) {
                logger.comment("*** interface1Callback1: Invoke");
                i1e1Count++;
                verify(ev.type, "Animals.IInterface1WithEvent.event1", "ev.type");
                verify(ev.detail[0], ev.type, "ev.detail[0]");
                logger.comment("*** interface1Callback1: Exit");
            }

Pass: myRC6WithEvent.onevent2
      Actual: function interface1Callback2(ev) {
                logger.comment("*** interface1Callback2: Invoke");
                i1e2Count++;
                verify(ev.type, "event2", "ev.type");
                verify(ev.detail[0], ev.type, "ev.detail[0]");
                logger.comment("*** interface1Callback2: Exit");
            }

Pass: myRC6WithEvent["onevent21"]
      Actual: function interface2Callback1(ev) {
                logger.comment("*** interface2Callback1: Invoke");
                i2e1Count++;
                verify(ev.type, "event21", "ev.type");
                verify(ev.detail[0], ev.type, "ev.detail[0]");
                logger.comment("*** interface2Callback1: Exit");
            }

Pass: myRC6WithEvent.onevent3
      Actual: function interface2Callback3(ev) {
                logger.comment("*** interface2Callback3: Invoke");
                i2e3Count++;
                verify(ev.type, "event3", "ev.type");
                verify(ev.detail[0], ev.type, "ev.detail[0]");
                logger.comment("*** interface2Callback3: Exit");
            }

Pass: myRC6WithEvent["onevent31"]
      Actual: function interface3Callback1(ev) {
                logger.comment("*** interface3Callback1: Invoke");
                i3e1Count++;
                verify(ev.type, "event31", "ev.type");
                verify(ev.detail[0], ev.type, "ev.detail[0]");
                logger.comment("*** interface3Callback1: Exit");
            }

Pass: myRC6WithEvent.onevent5
      Actual: function interface3Callback5(ev) {
                logger.comment("*** interface3Callback5: Invoke");
                i3e5Count++;
                verify(ev.type, "event5", "ev.type");
                verify(ev.detail[0], ev.type, "ev.detail[0]");
                logger.comment("*** interface3Callback5: Exit");
            }

Comment: Invoke events and methods
Comment: *** interface1Callback1: Invoke
Pass: ev.type
      Actual: Animals.IInterface1WithEvent.event1

Pass: ev.detail[0]
      Actual: Animals.IInterface1WithEvent.event1

Comment: *** interface1Callback1: Exit
Pass: i1e1Count
      Actual: 1

Comment: *** interface1Callback2: Invoke
Pass: ev.type
      Actual: event2

Pass: ev.detail[0]
      Actual: event2

Comment: *** interface1Callback2: Exit
Pass: i1e2Count
      Actual: 1

Comment: *** interface2Callback1: Invoke
Pass: ev.type
      Actual: event21

Pass: ev.detail[0]
      Actual: event21

Comment: *** interface2Callback1: Exit
Pass: i2e1Count
      Actual: 1

Comment: *** interface2Callback3: Invoke
Pass: ev.type
      Actual: event3

Pass: ev.detail[0]
      Actual: event3

Comment: *** interface2Callback3: Exit
Pass: i2e3Count
      Actual: 1

Pass: myRC6WithEvent["Animals.IInterface2WithEvent.onevent2"]("This is onevent2 method")
      Actual: This is onevent2 method

Comment: *** interface3Callback1: Invoke
Pass: ev.type
      Actual: event31

Pass: ev.detail[0]
      Actual: event31

Comment: *** interface3Callback1: Exit
Pass: i3e1Count
      Actual: 1

Comment: *** interface3Callback5: Invoke
Pass: ev.type
      Actual: event5

Pass: ev.detail[0]
      Actual: event5

Comment: *** interface3Callback5: Exit
Pass: i3e5Count
      Actual: 1

Comment: Set the callbacks to null
Pass: myRC6WithEvent["Animals.IInterface1WithEvent.onevent1"]
      Actual: null

Pass: myRC6WithEvent.onevent2
      Actual: null

Pass: myRC6WithEvent["onevent21"]
      Actual: null

Pass: myRC6WithEvent.onevent3
      Actual: null

Pass: myRC6WithEvent["onevent31"]
      Actual: null

Pass: myRC6WithEvent.onevent5
      Actual: null

Comment: Invoke events and methods
Pass: i1e1Count
      Actual: 1

Pass: i1e2Count
      Actual: 1

Pass: i2e1Count
      Actual: 1

Pass: i2e3Count
      Actual: 1

Pass: myRC6WithEvent["Animals.IInterface2WithEvent.onevent2"]("This is onevent2 method")
      Actual: This is onevent2 method

Pass: i3e1Count
      Actual: 1

Pass: i3e5Count
      Actual: 1

PASS [Test 28: NameConflictsOnEventHandler: event method collision resulting in unresolvable thunk]
=================================================

=================================================
Starting [Test 29: NameConflictsOnEventHandler: event method name on other interface which doesnt have any events]
Comment: Create the object;
Comment: typeof myRC7WithEvent: object
Comment: Dump of properties : 
    var myRC7WithEventMembers = [
        ['Animals.IInterfaceWithOnEvent1.onevent1', 'function', 1],
        ['addEventListener', 'function', 2],
        ['invokeEvent_I1E1', 'function', 1],
        ['invokeEvent_I1E2', 'function', 1],
        ['onevent1', 'object'],
        ['onevent2', 'object'],
        ['removeEventListener', 'function', 2],
        ['toString', 'function', 0],
    ];
Pass: typeof myRC7WithEvent
      Actual: object

Pass: myRC7WithEvent["Animals.IInterfaceWithOnEvent1.onevent1"]
      Actual: Animals.IInterfaceWithOnEvent1.onevent1

Pass: typeof myRC7WithEvent["Animals.IInterfaceWithOnEvent1.onevent1"]
      Actual: function

Pass: myRC7WithEvent["Animals.IInterfaceWithOnEvent1.onevent1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC7WithEvent["Animals.IInterfaceWithOnEvent1.onevent1"].length
      Actual: 1

Pass: myRC7WithEvent["addEventListener"]
      Actual: addEventListener

Pass: typeof myRC7WithEvent["addEventListener"]
      Actual: function

Pass: myRC7WithEvent["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC7WithEvent["addEventListener"].length
      Actual: 2

Pass: myRC7WithEvent["invokeEvent_I1E1"]
      Actual: invokeEvent_I1E1

Pass: typeof myRC7WithEvent["invokeEvent_I1E1"]
      Actual: function

Pass: myRC7WithEvent["invokeEvent_I1E1"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC7WithEvent["invokeEvent_I1E1"].length
      Actual: 1

Pass: myRC7WithEvent["invokeEvent_I1E2"]
      Actual: invokeEvent_I1E2

Pass: typeof myRC7WithEvent["invokeEvent_I1E2"]
      Actual: function

Pass: myRC7WithEvent["invokeEvent_I1E2"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myRC7WithEvent["invokeEvent_I1E2"].length
      Actual: 1

Pass: myRC7WithEvent["onevent1"]
      Actual: onevent1

Pass: typeof myRC7WithEvent["onevent1"]
      Actual: object

Pass: myRC7WithEvent["onevent2"]
      Actual: onevent2

Pass: typeof myRC7WithEvent["onevent2"]
      Actual: object

Pass: myRC7WithEvent["removeEventListener"]
      Actual: removeEventListener

Pass: typeof myRC7WithEvent["removeEventListener"]
      Actual: function

Pass: myRC7WithEvent["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myRC7WithEvent["removeEventListener"].length
      Actual: 2

Pass: myRC7WithEvent["toString"]
      Actual: toString

Pass: typeof myRC7WithEvent["toString"]
      Actual: function

Pass: myRC7WithEvent["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myRC7WithEvent["toString"].length
      Actual: 0

Pass: number of members of myRC7WithEvent
      Actual: 8

Pass: myRC7WithEvent.onevent1
      Actual: null

Pass: myRC7WithEvent.onevent2
      Actual: null

Comment: Set the callbacks
Pass: myRC7WithEvent.onevent1
      Actual: function interface1Callback1(ev) {
                logger.comment("*** interface1Callback1: Invoke");
                event1Count++;
                verify(ev.type, "event1", "ev.type");
                verify(ev.detail[0], ev.type, "ev.detail[0]");
                logger.comment("*** interface1Callback1: Exit");
            }

Pass: myRC7WithEvent.onevent2
      Actual: function interface1Callback2(ev) {
                logger.comment("*** interface1Callback2: Invoke");
                event2Count++;
                verify(ev.type, "event2", "ev.type");
                verify(ev.detail[0], ev.type, "ev.detail[0]");
                logger.comment("*** interface1Callback2: Exit");
            }

Comment: Invoke events and methods
Comment: *** interface1Callback1: Invoke
Pass: ev.type
      Actual: event1

Pass: ev.detail[0]
      Actual: event1

Comment: *** interface1Callback1: Exit
Pass: event1Count
      Actual: 1

Comment: *** interface1Callback2: Invoke
Pass: ev.type
      Actual: event2

Pass: ev.detail[0]
      Actual: event2

Comment: *** interface1Callback2: Exit
Pass: event2Count
      Actual: 1

Pass: myRC7WithEvent["Animals.IInterfaceWithOnEvent1.onevent1"]("This is onevent2 method")
      Actual: This is onevent1 method

Comment: Set the callbacks to null
Pass: myRC7WithEvent.onevent1
      Actual: null

Pass: myRC7WithEvent.onevent2
      Actual: null

Comment: Invoke events and methods
Pass: event1Count
      Actual: 1

Pass: event2Count
      Actual: 1

Pass: myRC7WithEvent["Animals.IInterfaceWithOnEvent1.onevent1"]("This is onevent2 method")
      Actual: This is onevent1 method

PASS [Test 29: NameConflictsOnEventHandler: event method name on other interface which doesnt have any events]
=================================================

=================================================
Starting [Test 30: TypeMismatch during addEventListener]
Pass: AddEventListener with eventCount
      Actual: undefined

PASS [Test 30: TypeMismatch during addEventListener]
=================================================

=================================================
Starting [Test 31: TypeMismatch during removeEventListener]
Pass: RemoveEventListener with eventCount
      Actual: undefined

PASS [Test 31: TypeMismatch during removeEventListener]
=================================================

=================================================
Starting [Test 32: TypeMismatch during event handler]
Pass: toaster.ontoastcompleteevent with eventCount
      Actual: undefined

Pass: toaster.ontoastcompleteevent
      Actual: null

PASS [Test 32: TypeMismatch during event handler]
=================================================

=================================================
Starting [Test 33: Use delegate property and native delegate]
Comment: var myRC2WithEvent = new Animals.RC2WithEvent();
Pass: myRC2WithEvent.handler1.toString()
      Actual: function Interface2WithEventHandler() { [native code] }

Comment: myRC2WithEvent.onevent1 = nativeDelegate
Comment: myRC2WithEvent.invokeEvent_I2E1('NativeDelegateString');
Pass: Too few arguments when calling native delegate with event arg returned (Error: invoke: function called with too few arguments)
      Actual: true

Pass: eventCount
      Actual: 0

Pass: native Delegate Invoked
      Actual: false

Comment: myRC2WithEvent.onevent1 = callback1
Pass: myRC2WithEvent.onevent21
      Actual: function callback1(ev) {
                logger.comment("*** Event Start : Interface2::Event1");
                eventCount++;
                verify(ev.target, myRC2WithEvent, "ev.target");
                verify(ev, myString, "ev");
                logger.comment("*** Event Complete : Interface2::Event1");
            }

Comment: myRC2WithEvent.invokeEvent_I2E1(myString);
Comment: *** Event Start : Interface2::Event1
Pass: ev.target
      Actual: [object Animals.RC2WithEvent]

Pass: ev
      Actual: This is IInterface2WithEvent::Event1

Comment: *** Event Complete : Interface2::Event1
Pass: eventCount
      Actual: 1

PASS [Test 33: Use delegate property and native delegate]
=================================================

=================================================
Starting [Test 34: Calling event handler as delegate]
Comment: var myRC2WithEvent = new Animals.RC2WithEvent();
Comment: myRC2WithEvent.onevent21 = callback1
Pass: myRC2WithEvent.onevent21
      Actual: function callback1(ev, param2) {
                if (useAsEvent == true) {
                    logger.comment("*** Event : Invoke");
                    eventCount++;
                    verify(ev.target, myRC2WithEvent, "ev.target");
                    verify(ev, myString, "ev");
                    logger.comment("*** Event : Exit");
                }
                else {
                    logger.comment("*** Delegate : Invoke");
                    delegateCount++;
                    verify(ev, myRC2WithEvent, "sender");
                    verify(param2, myString, "hString");
                    logger.comment("*** Delegate : Exit");
                }
            }

Comment: myRC2WithEvent.invokeEvent_I2E1(myString);
Comment: *** Event : Invoke
Pass: ev.target
      Actual: [object Animals.RC2WithEvent]

Pass: ev
      Actual: This is IInterface2WithEvent::Event1

Comment: *** Event : Exit
Pass: eventCount
      Actual: 1

Pass: eventCount
      Actual: 0

Comment: myRC2WithEvent.invokeDelegate(callback1, myString)
Comment: *** Delegate : Invoke
Pass: sender
      Actual: [object Animals.RC2WithEvent]

Pass: hString
      Actual: Delegate String

Comment: *** Delegate : Exit
Pass: eventCount
      Actual: 0

Pass: eventCount
      Actual: 1

Comment: myRC2WithEvent.invokeEvent_I2E1(myString);
Comment: *** Event : Invoke
Pass: ev.target
      Actual: [object Animals.RC2WithEvent]

Pass: ev
      Actual: Event String

Comment: *** Event : Exit
Pass: eventCount
      Actual: 1

Pass: eventCount
      Actual: 0

PASS [Test 34: Calling event handler as delegate]
=================================================

=================================================
Starting [Test 35: Multiple times event invoke and identity]
Comment: Calling toaster.makeToast to ensure the legitimate listener is still there
Comment: *** callback invoke
Comment: setting ev1
Comment: *** callback exit
Pass: Number of events handled
      Actual: 1

Pass: ev1 !== undefined
      Actual: true

Pass: ev2 === undefined
      Actual: true

Comment: *** callback invoke
Comment: setting ev2
Comment: *** callback exit
Pass: Number of events handled
      Actual: 2

Pass: ev1 !== undefined
      Actual: true

Pass: ev2 !== undefined
      Actual: true

Pass: ev1 !== ev2
      Actual: true

PASS [Test 35: Multiple times event invoke and identity]
=================================================

=================================================
Starting [Test 36: Setting indirect event]
Comment: Make indirect toast
Pass: event count
      Actual: 1

PASS [Test 36: Setting indirect event]
=================================================

=================================================
Starting [Test 37: Setting indirect event and reseting toaster before invoking event, verify not collected if we do not supportWeakDelegates]
Comment: Make toast
Pass: event count
      Actual: 1

PASS [Test 37: Setting indirect event and reseting toaster before invoking event, verify not collected if we do not supportWeakDelegates]
=================================================

=================================================
Starting [Test 38: Setting indirect event and setting indirect toaster to null and then creating toast, the event should be fired]
Comment: Make indirect toast
Pass: event count
      Actual: 1

PASS [Test 38: Setting indirect event and setting indirect toaster to null and then creating toast, the event should be fired]
=================================================

=================================================
Starting [Test 39: Setting rooted delegate and making sure it isnt collected even if toaster is set to null]
Pass: event count
      Actual: 1

Comment: Make rooted toast
Pass: event count
      Actual: 2

Comment: Make rooted toast
Pass: event count
      Actual: 3

PASS [Test 39: Setting rooted delegate and making sure it isnt collected even if toaster is set to null]
=================================================

=================================================
Starting [Test 40: Setting rooted delegate and making sure it isnt collected even if toaster is set to null]
Pass: event count
      Actual: 1

Comment: Make rooted toast
Pass: event count
      Actual: 2

Comment: Make toast
Pass: event count
      Actual: 3

PASS [Test 40: Setting rooted delegate and making sure it isnt collected even if toaster is set to null]
=================================================

=================================================
Starting [Test 41: Cross Apartment event invoke]
Comment: Fabrikam.Kitchen.Toaster created successfully
Comment: Add preheat bg complete event handler
Comment: Calling toaster.preheatInBackground
Comment: toaster.preheatInBackground done
Pass: eventCount
      Actual: 1

PASS [Test 41: Cross Apartment event invoke]
=================================================

=================================================
Starting [Test 42: Setting indirect event and reseting toaster before invoking event, verify the error is thrown]
Comment: Test prereq returned false. Skipping
PASS [Test 42: Setting indirect event and reseting toaster before invoking event, verify the error is thrown]
=================================================

Passed: 42
Failed: 0
