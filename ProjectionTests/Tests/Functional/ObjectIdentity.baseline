Object Identity Tests

=================================================
Starting [Test 1: GetBackSameSimpleRuntimeClass]
Comment: Create myFish
Comment: typeof myFish: object
Comment: Dump of properties : 
    var myFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myFish
      Actual: object

Pass: myFish's property
      Actual: getNullAsAnimal

Pass: typeof myFish["getNullAsAnimal"]
      Actual: function

Pass: myFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsAnimal"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsMap

Pass: typeof myFish["getNullAsMap"]
      Actual: function

Pass: myFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsMap"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsObservableVector

Pass: typeof myFish["getNullAsObservableVector"]
      Actual: function

Pass: myFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsObservableVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsPropertyValue

Pass: typeof myFish["getNullAsPropertyValue"]
      Actual: function

Pass: myFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsVector

Pass: typeof myFish["getNullAsVector"]
      Actual: function

Pass: myFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getNumFins

Pass: typeof myFish["getNumFins"]
      Actual: function

Pass: myFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNumFins"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneAnimal

Pass: typeof myFish["getOneAnimal"]
      Actual: function

Pass: myFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneAnimal"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof myFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: myFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof myFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: myFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof myFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: myFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneMap

Pass: typeof myFish["getOneMap"]
      Actual: function

Pass: myFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneMap"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneObservableVector

Pass: typeof myFish["getOneObservableVector"]
      Actual: function

Pass: myFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneObservableVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getOnePropertyValue

Pass: typeof myFish["getOnePropertyValue"]
      Actual: function

Pass: myFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOnePropertyValue"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneVector

Pass: typeof myFish["getOneVector"]
      Actual: function

Pass: myFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneVector"].length
      Actual: 0

Pass: myFish's property
      Actual: marshalIFish

Pass: typeof myFish["marshalIFish"]
      Actual: function

Pass: myFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalIFish"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalIFishToFish

Pass: typeof myFish["marshalIFishToFish"]
      Actual: function

Pass: myFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalIFishToFish"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalILikeToSwim

Pass: typeof myFish["marshalILikeToSwim"]
      Actual: function

Pass: myFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalILikeToSwim"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof myFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: myFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: myFish's property
      Actual: name

Pass: typeof myFish["name"]
      Actual: string

Pass: myFish's property
      Actual: setNumFins

Pass: typeof myFish["setNumFins"]
      Actual: function

Pass: myFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["setNumFins"].length
      Actual: 1

Pass: myFish's property
      Actual: singTheSwimmingSong

Pass: typeof myFish["singTheSwimmingSong"]
      Actual: function

Pass: myFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["singTheSwimmingSong"].length
      Actual: 0

Pass: myFish's property
      Actual: toString

Pass: typeof myFish["toString"]
      Actual: function

Pass: myFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["toString"].length
      Actual: 0

Pass: number of properties of myFish
      Actual: 22

Pass: myFish.name
      Actual: Nemo

Comment: Get mySameFish same as myFish
Comment: typeof mySameFish: object
Comment: Dump of properties : 
    var mySameFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof mySameFish
      Actual: object

Pass: mySameFish's property
      Actual: getNullAsAnimal

Pass: typeof mySameFish["getNullAsAnimal"]
      Actual: function

Pass: mySameFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsAnimal"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsMap

Pass: typeof mySameFish["getNullAsMap"]
      Actual: function

Pass: mySameFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsMap"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsObservableVector

Pass: typeof mySameFish["getNullAsObservableVector"]
      Actual: function

Pass: mySameFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsObservableVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsPropertyValue

Pass: typeof mySameFish["getNullAsPropertyValue"]
      Actual: function

Pass: mySameFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsVector

Pass: typeof mySameFish["getNullAsVector"]
      Actual: function

Pass: mySameFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNumFins

Pass: typeof mySameFish["getNumFins"]
      Actual: function

Pass: mySameFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNumFins"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneAnimal

Pass: typeof mySameFish["getOneAnimal"]
      Actual: function

Pass: mySameFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneAnimal"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof mySameFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof mySameFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof mySameFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneMap

Pass: typeof mySameFish["getOneMap"]
      Actual: function

Pass: mySameFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneMap"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneObservableVector

Pass: typeof mySameFish["getOneObservableVector"]
      Actual: function

Pass: mySameFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneObservableVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOnePropertyValue

Pass: typeof mySameFish["getOnePropertyValue"]
      Actual: function

Pass: mySameFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOnePropertyValue"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneVector

Pass: typeof mySameFish["getOneVector"]
      Actual: function

Pass: mySameFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: marshalIFish

Pass: typeof mySameFish["marshalIFish"]
      Actual: function

Pass: mySameFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalIFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalIFishToFish

Pass: typeof mySameFish["marshalIFishToFish"]
      Actual: function

Pass: mySameFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalIFishToFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalILikeToSwim

Pass: typeof mySameFish["marshalILikeToSwim"]
      Actual: function

Pass: mySameFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalILikeToSwim"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof mySameFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: mySameFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: name

Pass: typeof mySameFish["name"]
      Actual: string

Pass: mySameFish's property
      Actual: setNumFins

Pass: typeof mySameFish["setNumFins"]
      Actual: function

Pass: mySameFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["setNumFins"].length
      Actual: 1

Pass: mySameFish's property
      Actual: singTheSwimmingSong

Pass: typeof mySameFish["singTheSwimmingSong"]
      Actual: function

Pass: mySameFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["singTheSwimmingSong"].length
      Actual: 0

Pass: mySameFish's property
      Actual: toString

Pass: typeof mySameFish["toString"]
      Actual: function

Pass: mySameFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["toString"].length
      Actual: 0

Pass: number of properties of mySameFish
      Actual: 22

Pass: mySameFish.name
      Actual: Nemo

Comment: Equality Tests on myFish and mySameFish
Pass: myFish == mySameFish
      Actual: true

Pass: myFish === mySameFish
      Actual: true

Comment: Get new fish as mySecondFish
Pass: mySecondFish.name
      Actual: Dori

Comment: Equality Tests on mySecondFish with myFish and mySecondFish
Pass: myFish != mySecondFish
      Actual: true

Pass: myFish !== mySecondFish
      Actual: true

Pass: mySameFish != mySecondFish
      Actual: true

Pass: mySameFish !== mySecondFish
      Actual: true

Comment: Lifetime tests
Comment: Set my Fish to null and check if samefish can still retain the expandos and other values
Comment: Verifying that myFish doesnt have the expandos
Pass: myFish.name
      Actual: Marlin

Pass: myFish !== mySameFish
      Actual: true

Comment: Verifying that mySameFish still has the expandos
Pass: mySameFish.name
      Actual: Nemo

Comment: Pass mySameFish to Method that keeps fish into the ABI
Pass: Animals.Animal.myFish == mySameFish
      Actual: true

Pass: Animals.Animal.myFish === mySameFish
      Actual: true

Comment: Set the mySameFish to null so that we dont have myFish instance anywhere in JS land
Comment: Perform gc
Comment: Get the fish back from winrt
Comment: Verifying that mySameFish still has the expandos
Pass: mySameFish.name
      Actual: Nemo

PASS [Test 1: GetBackSameSimpleRuntimeClass]
=================================================

=================================================
Starting [Test 2: GetBackSameParameterizedInterface]
Comment: Get first vector as myVector
Comment: typeof myVector: object
Comment: Dump of properties : 
    var myVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['5', 'number'],
        ['6', 'number'],
        ['7', 'number'],
        ['8', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof myVector
      Actual: object

Pass: myVector's property
      Actual: 0

Pass: typeof myVector["0"]
      Actual: number

Pass: myVector["0"]
      Actual: 1

Pass: myVector's property
      Actual: 1

Pass: typeof myVector["1"]
      Actual: number

Pass: myVector["1"]
      Actual: 2

Pass: myVector's property
      Actual: 2

Pass: typeof myVector["2"]
      Actual: number

Pass: myVector["2"]
      Actual: 3

Pass: myVector's property
      Actual: 3

Pass: typeof myVector["3"]
      Actual: number

Pass: myVector["3"]
      Actual: 4

Pass: myVector's property
      Actual: 4

Pass: typeof myVector["4"]
      Actual: number

Pass: myVector["4"]
      Actual: 5

Pass: myVector's property
      Actual: 5

Pass: typeof myVector["5"]
      Actual: number

Pass: myVector["5"]
      Actual: 6

Pass: myVector's property
      Actual: 6

Pass: typeof myVector["6"]
      Actual: number

Pass: myVector["6"]
      Actual: 7

Pass: myVector's property
      Actual: 7

Pass: typeof myVector["7"]
      Actual: number

Pass: myVector["7"]
      Actual: 8

Pass: myVector's property
      Actual: 8

Pass: typeof myVector["8"]
      Actual: number

Pass: myVector["8"]
      Actual: 9

Pass: myVector's property
      Actual: append

Pass: typeof myVector["append"]
      Actual: function

Pass: myVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["append"].length
      Actual: 1

Pass: myVector's property
      Actual: clear

Pass: typeof myVector["clear"]
      Actual: function

Pass: myVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["clear"].length
      Actual: 0

Pass: myVector's property
      Actual: first

Pass: typeof myVector["first"]
      Actual: function

Pass: myVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["first"].length
      Actual: 0

Pass: myVector's property
      Actual: getAt

Pass: typeof myVector["getAt"]
      Actual: function

Pass: myVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["getAt"].length
      Actual: 1

Pass: myVector's property
      Actual: getMany

Pass: typeof myVector["getMany"]
      Actual: function

Pass: myVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector["getMany"].length
      Actual: 2

Pass: myVector's property
      Actual: getView

Pass: typeof myVector["getView"]
      Actual: function

Pass: myVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["getView"].length
      Actual: 0

Pass: myVector's property
      Actual: indexOf

Pass: typeof myVector["indexOf"]
      Actual: function

Pass: myVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["indexOf"].length
      Actual: 1

Pass: myVector's property
      Actual: insertAt

Pass: typeof myVector["insertAt"]
      Actual: function

Pass: myVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector["insertAt"].length
      Actual: 2

Pass: myVector's property
      Actual: removeAt

Pass: typeof myVector["removeAt"]
      Actual: function

Pass: myVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["removeAt"].length
      Actual: 1

Pass: myVector's property
      Actual: removeAtEnd

Pass: typeof myVector["removeAtEnd"]
      Actual: function

Pass: myVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["removeAtEnd"].length
      Actual: 0

Pass: myVector's property
      Actual: replaceAll

Pass: typeof myVector["replaceAll"]
      Actual: function

Pass: myVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["replaceAll"].length
      Actual: 1

Pass: myVector's property
      Actual: setAt

Pass: typeof myVector["setAt"]
      Actual: function

Pass: myVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector["setAt"].length
      Actual: 2

Pass: myVector's property
      Actual: size

Pass: typeof myVector["size"]
      Actual: number

Pass: number of properties of myVector
      Actual: 22

Comment: Get myVector back as mySameVector
Comment: typeof mySameVector: object
Comment: Dump of properties : 
    var mySameVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['5', 'number'],
        ['6', 'number'],
        ['7', 'number'],
        ['8', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof mySameVector
      Actual: object

Pass: mySameVector's property
      Actual: 0

Pass: typeof mySameVector["0"]
      Actual: number

Pass: mySameVector["0"]
      Actual: 1

Pass: mySameVector's property
      Actual: 1

Pass: typeof mySameVector["1"]
      Actual: number

Pass: mySameVector["1"]
      Actual: 2

Pass: mySameVector's property
      Actual: 2

Pass: typeof mySameVector["2"]
      Actual: number

Pass: mySameVector["2"]
      Actual: 3

Pass: mySameVector's property
      Actual: 3

Pass: typeof mySameVector["3"]
      Actual: number

Pass: mySameVector["3"]
      Actual: 4

Pass: mySameVector's property
      Actual: 4

Pass: typeof mySameVector["4"]
      Actual: number

Pass: mySameVector["4"]
      Actual: 5

Pass: mySameVector's property
      Actual: 5

Pass: typeof mySameVector["5"]
      Actual: number

Pass: mySameVector["5"]
      Actual: 6

Pass: mySameVector's property
      Actual: 6

Pass: typeof mySameVector["6"]
      Actual: number

Pass: mySameVector["6"]
      Actual: 7

Pass: mySameVector's property
      Actual: 7

Pass: typeof mySameVector["7"]
      Actual: number

Pass: mySameVector["7"]
      Actual: 8

Pass: mySameVector's property
      Actual: 8

Pass: typeof mySameVector["8"]
      Actual: number

Pass: mySameVector["8"]
      Actual: 9

Pass: mySameVector's property
      Actual: append

Pass: typeof mySameVector["append"]
      Actual: function

Pass: mySameVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["append"].length
      Actual: 1

Pass: mySameVector's property
      Actual: clear

Pass: typeof mySameVector["clear"]
      Actual: function

Pass: mySameVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["clear"].length
      Actual: 0

Pass: mySameVector's property
      Actual: first

Pass: typeof mySameVector["first"]
      Actual: function

Pass: mySameVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["first"].length
      Actual: 0

Pass: mySameVector's property
      Actual: getAt

Pass: typeof mySameVector["getAt"]
      Actual: function

Pass: mySameVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["getAt"].length
      Actual: 1

Pass: mySameVector's property
      Actual: getMany

Pass: typeof mySameVector["getMany"]
      Actual: function

Pass: mySameVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySameVector["getMany"].length
      Actual: 2

Pass: mySameVector's property
      Actual: getView

Pass: typeof mySameVector["getView"]
      Actual: function

Pass: mySameVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["getView"].length
      Actual: 0

Pass: mySameVector's property
      Actual: indexOf

Pass: typeof mySameVector["indexOf"]
      Actual: function

Pass: mySameVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["indexOf"].length
      Actual: 1

Pass: mySameVector's property
      Actual: insertAt

Pass: typeof mySameVector["insertAt"]
      Actual: function

Pass: mySameVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySameVector["insertAt"].length
      Actual: 2

Pass: mySameVector's property
      Actual: removeAt

Pass: typeof mySameVector["removeAt"]
      Actual: function

Pass: mySameVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["removeAt"].length
      Actual: 1

Pass: mySameVector's property
      Actual: removeAtEnd

Pass: typeof mySameVector["removeAtEnd"]
      Actual: function

Pass: mySameVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["removeAtEnd"].length
      Actual: 0

Pass: mySameVector's property
      Actual: replaceAll

Pass: typeof mySameVector["replaceAll"]
      Actual: function

Pass: mySameVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["replaceAll"].length
      Actual: 1

Pass: mySameVector's property
      Actual: setAt

Pass: typeof mySameVector["setAt"]
      Actual: function

Pass: mySameVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySameVector["setAt"].length
      Actual: 2

Pass: mySameVector's property
      Actual: size

Pass: typeof mySameVector["size"]
      Actual: number

Pass: number of properties of mySameVector
      Actual: 22

Comment: Equality tests on myVector and mySameVector
Pass: myVector == mySameVector
      Actual: true

Pass: myVector === mySameVector
      Actual: true

Comment: Get new vector as mySecondVector
Comment: typeof mySecondVector: object
Comment: Dump of properties : 
    var mySecondVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof mySecondVector
      Actual: object

Pass: mySecondVector's property
      Actual: 0

Pass: typeof mySecondVector["0"]
      Actual: number

Pass: mySecondVector["0"]
      Actual: 1

Pass: mySecondVector's property
      Actual: 1

Pass: typeof mySecondVector["1"]
      Actual: number

Pass: mySecondVector["1"]
      Actual: 2

Pass: mySecondVector's property
      Actual: 2

Pass: typeof mySecondVector["2"]
      Actual: number

Pass: mySecondVector["2"]
      Actual: 3

Pass: mySecondVector's property
      Actual: 3

Pass: typeof mySecondVector["3"]
      Actual: number

Pass: mySecondVector["3"]
      Actual: 4

Pass: mySecondVector's property
      Actual: append

Pass: typeof mySecondVector["append"]
      Actual: function

Pass: mySecondVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySecondVector["append"].length
      Actual: 1

Pass: mySecondVector's property
      Actual: clear

Pass: typeof mySecondVector["clear"]
      Actual: function

Pass: mySecondVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySecondVector["clear"].length
      Actual: 0

Pass: mySecondVector's property
      Actual: first

Pass: typeof mySecondVector["first"]
      Actual: function

Pass: mySecondVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySecondVector["first"].length
      Actual: 0

Pass: mySecondVector's property
      Actual: getAt

Pass: typeof mySecondVector["getAt"]
      Actual: function

Pass: mySecondVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySecondVector["getAt"].length
      Actual: 1

Pass: mySecondVector's property
      Actual: getMany

Pass: typeof mySecondVector["getMany"]
      Actual: function

Pass: mySecondVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySecondVector["getMany"].length
      Actual: 2

Pass: mySecondVector's property
      Actual: getView

Pass: typeof mySecondVector["getView"]
      Actual: function

Pass: mySecondVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySecondVector["getView"].length
      Actual: 0

Pass: mySecondVector's property
      Actual: indexOf

Pass: typeof mySecondVector["indexOf"]
      Actual: function

Pass: mySecondVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySecondVector["indexOf"].length
      Actual: 1

Pass: mySecondVector's property
      Actual: insertAt

Pass: typeof mySecondVector["insertAt"]
      Actual: function

Pass: mySecondVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySecondVector["insertAt"].length
      Actual: 2

Pass: mySecondVector's property
      Actual: removeAt

Pass: typeof mySecondVector["removeAt"]
      Actual: function

Pass: mySecondVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySecondVector["removeAt"].length
      Actual: 1

Pass: mySecondVector's property
      Actual: removeAtEnd

Pass: typeof mySecondVector["removeAtEnd"]
      Actual: function

Pass: mySecondVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySecondVector["removeAtEnd"].length
      Actual: 0

Pass: mySecondVector's property
      Actual: replaceAll

Pass: typeof mySecondVector["replaceAll"]
      Actual: function

Pass: mySecondVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySecondVector["replaceAll"].length
      Actual: 1

Pass: mySecondVector's property
      Actual: setAt

Pass: typeof mySecondVector["setAt"]
      Actual: function

Pass: mySecondVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySecondVector["setAt"].length
      Actual: 2

Pass: mySecondVector's property
      Actual: size

Pass: typeof mySecondVector["size"]
      Actual: number

Pass: number of properties of mySecondVector
      Actual: 17

Comment: Equality tests on mySecondVector with myVector and mySecondVector
Pass: myVector != mySecondVector
      Actual: true

Pass: myVector !== mySecondVector
      Actual: true

Pass: mySameVector != mySecondVector
      Actual: true

Pass: mySameVector !== mySecondVector
      Actual: true

Comment: Create third vector with same contents but different vector and check equality
Pass: mySecondVector != myThirdVector
      Actual: true

Pass: mySecondVector !== myThirdVector
      Actual: true

Comment: Create Fish and perform equality tests with vector
Pass: myVector != myFish
      Actual: true

Pass: myVector !== myFish
      Actual: true

Comment: Get the string Vector and check its not equal with any of the vectors we got earlier
Pass: myVector != myStringVector
      Actual: true

Pass: myVector !== myStringVector
      Actual: true

Pass: mySecondVector != myStringVector
      Actual: true

Pass: mySecondVector !== myStringVector
      Actual: true

Comment: Check the view and iterables are not identical
Comment: typeof myIterator: object
Comment: Dump of properties : 
    var myIteratorMembers = [
        ['current', 'number'],
        ['getMany', 'function', 1],
        ['hasCurrent', 'boolean'],
        ['moveNext', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterator
      Actual: object

Pass: myIterator's property
      Actual: current

Pass: typeof myIterator["current"]
      Actual: number

Pass: myIterator's property
      Actual: getMany

Pass: typeof myIterator["getMany"]
      Actual: function

Pass: myIterator["getMany"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myIterator["getMany"].length
      Actual: 1

Pass: myIterator's property
      Actual: hasCurrent

Pass: typeof myIterator["hasCurrent"]
      Actual: boolean

Pass: myIterator's property
      Actual: moveNext

Pass: typeof myIterator["moveNext"]
      Actual: function

Pass: myIterator["moveNext"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["moveNext"].length
      Actual: 0

Pass: myIterator's property
      Actual: toString

Pass: typeof myIterator["toString"]
      Actual: function

Pass: myIterator["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["toString"].length
      Actual: 0

Pass: number of properties of myIterator
      Actual: 5

Comment: Equality and Expando tests on : myIterator and myVector
Pass: myIterator != myVector
      Actual: true

Pass: myIterator !== myVector
      Actual: true

Comment: typeof myVectorView: object
Comment: Dump of properties : 
    var myVectorViewMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['5', 'number'],
        ['6', 'number'],
        ['7', 'number'],
        ['8', 'number'],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['indexOf', 'function', 1],
        ['size', 'number'],
    ];
Pass: typeof myVectorView
      Actual: object

Pass: myVectorView's property
      Actual: 0

Pass: typeof myVectorView["0"]
      Actual: number

Pass: myVectorView["0"]
      Actual: 1

Pass: myVectorView's property
      Actual: 1

Pass: typeof myVectorView["1"]
      Actual: number

Pass: myVectorView["1"]
      Actual: 2

Pass: myVectorView's property
      Actual: 2

Pass: typeof myVectorView["2"]
      Actual: number

Pass: myVectorView["2"]
      Actual: 3

Pass: myVectorView's property
      Actual: 3

Pass: typeof myVectorView["3"]
      Actual: number

Pass: myVectorView["3"]
      Actual: 4

Pass: myVectorView's property
      Actual: 4

Pass: typeof myVectorView["4"]
      Actual: number

Pass: myVectorView["4"]
      Actual: 5

Pass: myVectorView's property
      Actual: 5

Pass: typeof myVectorView["5"]
      Actual: number

Pass: myVectorView["5"]
      Actual: 6

Pass: myVectorView's property
      Actual: 6

Pass: typeof myVectorView["6"]
      Actual: number

Pass: myVectorView["6"]
      Actual: 7

Pass: myVectorView's property
      Actual: 7

Pass: typeof myVectorView["7"]
      Actual: number

Pass: myVectorView["7"]
      Actual: 8

Pass: myVectorView's property
      Actual: 8

Pass: typeof myVectorView["8"]
      Actual: number

Pass: myVectorView["8"]
      Actual: 9

Pass: myVectorView's property
      Actual: first

Pass: typeof myVectorView["first"]
      Actual: function

Pass: myVectorView["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVectorView["first"].length
      Actual: 0

Pass: myVectorView's property
      Actual: getAt

Pass: typeof myVectorView["getAt"]
      Actual: function

Pass: myVectorView["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVectorView["getAt"].length
      Actual: 1

Pass: myVectorView's property
      Actual: getMany

Pass: typeof myVectorView["getMany"]
      Actual: function

Pass: myVectorView["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVectorView["getMany"].length
      Actual: 2

Pass: myVectorView's property
      Actual: indexOf

Pass: typeof myVectorView["indexOf"]
      Actual: function

Pass: myVectorView["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVectorView["indexOf"].length
      Actual: 1

Pass: myVectorView's property
      Actual: size

Pass: typeof myVectorView["size"]
      Actual: number

Pass: number of properties of myVectorView
      Actual: 14

Comment: Equality tests on : myVectorView and myVector
Pass: myVectorView != myVector
      Actual: true

Pass: myVectorView !== myVector
      Actual: true

Comment: Lifetime tests
Comment: Set myVector to null and check if sameVector can still retain the expandos and other values
Comment: Verifying that myVector doesnt have the expandos
Pass: myVector.length
      Actual: 9

Pass: myVector !== mySameVector
      Actual: true

Comment: Verifying that mySameVector still has the expandos
Pass: mySameVector.length
      Actual: 9

Comment: Pass mySameVector to Method that keeps vector into the ABI
Pass: myAnimal.myVector == mySameVector
      Actual: true

Pass: myAnimal.myVector === mySameVector
      Actual: true

Comment: Set the mySameVector to null so that we dont have myVector instance anywhere in JS land
Comment: Perform gc
Comment: Get the vector back from winrt
Comment: Verifying that mySameVector still has the expandos
Pass: mySameVector.length
      Actual: 9

PASS [Test 2: GetBackSameParameterizedInterface]
=================================================

=================================================
Starting [Test 3: GetBackSameSimpleInterface]
Comment: Create myFish
Comment: typeof myFish: object
Comment: Dump of properties : 
    var myFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myFish
      Actual: object

Pass: myFish's property
      Actual: getNullAsAnimal

Pass: typeof myFish["getNullAsAnimal"]
      Actual: function

Pass: myFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsAnimal"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsMap

Pass: typeof myFish["getNullAsMap"]
      Actual: function

Pass: myFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsMap"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsObservableVector

Pass: typeof myFish["getNullAsObservableVector"]
      Actual: function

Pass: myFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsObservableVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsPropertyValue

Pass: typeof myFish["getNullAsPropertyValue"]
      Actual: function

Pass: myFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsVector

Pass: typeof myFish["getNullAsVector"]
      Actual: function

Pass: myFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getNumFins

Pass: typeof myFish["getNumFins"]
      Actual: function

Pass: myFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNumFins"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneAnimal

Pass: typeof myFish["getOneAnimal"]
      Actual: function

Pass: myFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneAnimal"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof myFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: myFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof myFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: myFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof myFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: myFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneMap

Pass: typeof myFish["getOneMap"]
      Actual: function

Pass: myFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneMap"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneObservableVector

Pass: typeof myFish["getOneObservableVector"]
      Actual: function

Pass: myFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneObservableVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getOnePropertyValue

Pass: typeof myFish["getOnePropertyValue"]
      Actual: function

Pass: myFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOnePropertyValue"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneVector

Pass: typeof myFish["getOneVector"]
      Actual: function

Pass: myFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneVector"].length
      Actual: 0

Pass: myFish's property
      Actual: marshalIFish

Pass: typeof myFish["marshalIFish"]
      Actual: function

Pass: myFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalIFish"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalIFishToFish

Pass: typeof myFish["marshalIFishToFish"]
      Actual: function

Pass: myFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalIFishToFish"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalILikeToSwim

Pass: typeof myFish["marshalILikeToSwim"]
      Actual: function

Pass: myFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalILikeToSwim"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof myFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: myFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: myFish's property
      Actual: name

Pass: typeof myFish["name"]
      Actual: string

Pass: myFish's property
      Actual: setNumFins

Pass: typeof myFish["setNumFins"]
      Actual: function

Pass: myFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["setNumFins"].length
      Actual: 1

Pass: myFish's property
      Actual: singTheSwimmingSong

Pass: typeof myFish["singTheSwimmingSong"]
      Actual: function

Pass: myFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["singTheSwimmingSong"].length
      Actual: 0

Pass: myFish's property
      Actual: toString

Pass: typeof myFish["toString"]
      Actual: function

Pass: myFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["toString"].length
      Actual: 0

Pass: number of properties of myFish
      Actual: 22

Pass: myFish.name
      Actual: Nemo

Comment: Get mySameFish same as myFish
Comment: typeof mySameFish: object
Comment: Dump of properties : 
    var mySameFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof mySameFish
      Actual: object

Pass: mySameFish's property
      Actual: getNullAsAnimal

Pass: typeof mySameFish["getNullAsAnimal"]
      Actual: function

Pass: mySameFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsAnimal"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsMap

Pass: typeof mySameFish["getNullAsMap"]
      Actual: function

Pass: mySameFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsMap"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsObservableVector

Pass: typeof mySameFish["getNullAsObservableVector"]
      Actual: function

Pass: mySameFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsObservableVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsPropertyValue

Pass: typeof mySameFish["getNullAsPropertyValue"]
      Actual: function

Pass: mySameFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsVector

Pass: typeof mySameFish["getNullAsVector"]
      Actual: function

Pass: mySameFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNumFins

Pass: typeof mySameFish["getNumFins"]
      Actual: function

Pass: mySameFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNumFins"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneAnimal

Pass: typeof mySameFish["getOneAnimal"]
      Actual: function

Pass: mySameFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneAnimal"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof mySameFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof mySameFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof mySameFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneMap

Pass: typeof mySameFish["getOneMap"]
      Actual: function

Pass: mySameFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneMap"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneObservableVector

Pass: typeof mySameFish["getOneObservableVector"]
      Actual: function

Pass: mySameFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneObservableVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOnePropertyValue

Pass: typeof mySameFish["getOnePropertyValue"]
      Actual: function

Pass: mySameFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOnePropertyValue"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneVector

Pass: typeof mySameFish["getOneVector"]
      Actual: function

Pass: mySameFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: marshalIFish

Pass: typeof mySameFish["marshalIFish"]
      Actual: function

Pass: mySameFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalIFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalIFishToFish

Pass: typeof mySameFish["marshalIFishToFish"]
      Actual: function

Pass: mySameFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalIFishToFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalILikeToSwim

Pass: typeof mySameFish["marshalILikeToSwim"]
      Actual: function

Pass: mySameFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalILikeToSwim"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof mySameFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: mySameFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: name

Pass: typeof mySameFish["name"]
      Actual: string

Pass: mySameFish's property
      Actual: setNumFins

Pass: typeof mySameFish["setNumFins"]
      Actual: function

Pass: mySameFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["setNumFins"].length
      Actual: 1

Pass: mySameFish's property
      Actual: singTheSwimmingSong

Pass: typeof mySameFish["singTheSwimmingSong"]
      Actual: function

Pass: mySameFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["singTheSwimmingSong"].length
      Actual: 0

Pass: mySameFish's property
      Actual: toString

Pass: typeof mySameFish["toString"]
      Actual: function

Pass: mySameFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["toString"].length
      Actual: 0

Pass: number of properties of mySameFish
      Actual: 22

Pass: mySameFish.name
      Actual: Nemo

Comment: Equality Tests on myFish and mySameFish
Pass: myFish == mySameFish
      Actual: true

Pass: myFish === mySameFish
      Actual: true

Comment: Lifetime tests
Comment: Set my Fish to null
Comment: Verifying that mySameFish still has the expandos
Pass: mySameFish.name
      Actual: Nemo

Comment: Pass mySameFish to Method that keeps fish into the ABI
Pass: Animals.Animal.myIFish == mySameFish
      Actual: true

Pass: Animals.Animal.myIFish === mySameFish
      Actual: true

Comment: Set the mySameFish to null
Comment: Perform gc
Comment: Get the fish back from winrt
Comment: Verifying that mySameFish still has the expandos
Pass: mySameFish.name
      Actual: Nemo

PASS [Test 3: GetBackSameSimpleInterface]
=================================================

=================================================
Starting [Test 4: GetBackSameSimpleRequiredInterface]
Comment: Create myFish
Comment: typeof myFish: object
Comment: Dump of properties : 
    var myFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myFish
      Actual: object

Pass: myFish's property
      Actual: getNullAsAnimal

Pass: typeof myFish["getNullAsAnimal"]
      Actual: function

Pass: myFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsAnimal"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsMap

Pass: typeof myFish["getNullAsMap"]
      Actual: function

Pass: myFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsMap"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsObservableVector

Pass: typeof myFish["getNullAsObservableVector"]
      Actual: function

Pass: myFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsObservableVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsPropertyValue

Pass: typeof myFish["getNullAsPropertyValue"]
      Actual: function

Pass: myFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsVector

Pass: typeof myFish["getNullAsVector"]
      Actual: function

Pass: myFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getNumFins

Pass: typeof myFish["getNumFins"]
      Actual: function

Pass: myFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNumFins"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneAnimal

Pass: typeof myFish["getOneAnimal"]
      Actual: function

Pass: myFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneAnimal"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof myFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: myFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof myFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: myFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof myFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: myFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneMap

Pass: typeof myFish["getOneMap"]
      Actual: function

Pass: myFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneMap"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneObservableVector

Pass: typeof myFish["getOneObservableVector"]
      Actual: function

Pass: myFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneObservableVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getOnePropertyValue

Pass: typeof myFish["getOnePropertyValue"]
      Actual: function

Pass: myFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOnePropertyValue"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneVector

Pass: typeof myFish["getOneVector"]
      Actual: function

Pass: myFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneVector"].length
      Actual: 0

Pass: myFish's property
      Actual: marshalIFish

Pass: typeof myFish["marshalIFish"]
      Actual: function

Pass: myFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalIFish"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalIFishToFish

Pass: typeof myFish["marshalIFishToFish"]
      Actual: function

Pass: myFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalIFishToFish"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalILikeToSwim

Pass: typeof myFish["marshalILikeToSwim"]
      Actual: function

Pass: myFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalILikeToSwim"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof myFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: myFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: myFish's property
      Actual: name

Pass: typeof myFish["name"]
      Actual: string

Pass: myFish's property
      Actual: setNumFins

Pass: typeof myFish["setNumFins"]
      Actual: function

Pass: myFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["setNumFins"].length
      Actual: 1

Pass: myFish's property
      Actual: singTheSwimmingSong

Pass: typeof myFish["singTheSwimmingSong"]
      Actual: function

Pass: myFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["singTheSwimmingSong"].length
      Actual: 0

Pass: myFish's property
      Actual: toString

Pass: typeof myFish["toString"]
      Actual: function

Pass: myFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["toString"].length
      Actual: 0

Pass: number of properties of myFish
      Actual: 22

Pass: myFish.name
      Actual: Nemo

Comment: Get mySameFish same as myFish
Comment: typeof mySameFish: object
Comment: Dump of properties : 
    var mySameFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof mySameFish
      Actual: object

Pass: mySameFish's property
      Actual: getNullAsAnimal

Pass: typeof mySameFish["getNullAsAnimal"]
      Actual: function

Pass: mySameFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsAnimal"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsMap

Pass: typeof mySameFish["getNullAsMap"]
      Actual: function

Pass: mySameFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsMap"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsObservableVector

Pass: typeof mySameFish["getNullAsObservableVector"]
      Actual: function

Pass: mySameFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsObservableVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsPropertyValue

Pass: typeof mySameFish["getNullAsPropertyValue"]
      Actual: function

Pass: mySameFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsVector

Pass: typeof mySameFish["getNullAsVector"]
      Actual: function

Pass: mySameFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNumFins

Pass: typeof mySameFish["getNumFins"]
      Actual: function

Pass: mySameFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNumFins"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneAnimal

Pass: typeof mySameFish["getOneAnimal"]
      Actual: function

Pass: mySameFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneAnimal"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof mySameFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof mySameFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof mySameFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneMap

Pass: typeof mySameFish["getOneMap"]
      Actual: function

Pass: mySameFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneMap"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneObservableVector

Pass: typeof mySameFish["getOneObservableVector"]
      Actual: function

Pass: mySameFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneObservableVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOnePropertyValue

Pass: typeof mySameFish["getOnePropertyValue"]
      Actual: function

Pass: mySameFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOnePropertyValue"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneVector

Pass: typeof mySameFish["getOneVector"]
      Actual: function

Pass: mySameFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: marshalIFish

Pass: typeof mySameFish["marshalIFish"]
      Actual: function

Pass: mySameFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalIFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalIFishToFish

Pass: typeof mySameFish["marshalIFishToFish"]
      Actual: function

Pass: mySameFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalIFishToFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalILikeToSwim

Pass: typeof mySameFish["marshalILikeToSwim"]
      Actual: function

Pass: mySameFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalILikeToSwim"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof mySameFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: mySameFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: name

Pass: typeof mySameFish["name"]
      Actual: string

Pass: mySameFish's property
      Actual: setNumFins

Pass: typeof mySameFish["setNumFins"]
      Actual: function

Pass: mySameFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["setNumFins"].length
      Actual: 1

Pass: mySameFish's property
      Actual: singTheSwimmingSong

Pass: typeof mySameFish["singTheSwimmingSong"]
      Actual: function

Pass: mySameFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["singTheSwimmingSong"].length
      Actual: 0

Pass: mySameFish's property
      Actual: toString

Pass: typeof mySameFish["toString"]
      Actual: function

Pass: mySameFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["toString"].length
      Actual: 0

Pass: number of properties of mySameFish
      Actual: 22

Pass: mySameFish.name
      Actual: Nemo

Comment: Equality Tests on myFish and mySameFish
Pass: myFish == mySameFish
      Actual: true

Pass: myFish === mySameFish
      Actual: true

Comment: Lifetime tests
Comment: Set my Fish to null
Comment: Verifying that mySameFish still has the expandos
Pass: mySameFish.name
      Actual: Nemo

Comment: Pass mySameFish to Method that keeps fish into the ABI
Pass: Animals.Animal.myLikeToSwim == mySameFish
      Actual: true

Pass: Animals.Animal.myLikeToSwim === mySameFish
      Actual: true

Comment: Set the mySameFish to null
Comment: Perform gc
Comment: Get the fish back from winrt
Comment: Verifying that mySameFish still has the expandos
Pass: mySameFish.name
      Actual: Nemo

PASS [Test 4: GetBackSameSimpleRequiredInterface]
=================================================

=================================================
Starting [Test 5: GetBackSameParameterizedRequiredInterface]
Comment: Get first vector as myVector
Comment: typeof myVector: object
Comment: Dump of properties : 
    var myVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['5', 'number'],
        ['6', 'number'],
        ['7', 'number'],
        ['8', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof myVector
      Actual: object

Pass: myVector's property
      Actual: 0

Pass: typeof myVector["0"]
      Actual: number

Pass: myVector["0"]
      Actual: 1

Pass: myVector's property
      Actual: 1

Pass: typeof myVector["1"]
      Actual: number

Pass: myVector["1"]
      Actual: 2

Pass: myVector's property
      Actual: 2

Pass: typeof myVector["2"]
      Actual: number

Pass: myVector["2"]
      Actual: 3

Pass: myVector's property
      Actual: 3

Pass: typeof myVector["3"]
      Actual: number

Pass: myVector["3"]
      Actual: 4

Pass: myVector's property
      Actual: 4

Pass: typeof myVector["4"]
      Actual: number

Pass: myVector["4"]
      Actual: 5

Pass: myVector's property
      Actual: 5

Pass: typeof myVector["5"]
      Actual: number

Pass: myVector["5"]
      Actual: 6

Pass: myVector's property
      Actual: 6

Pass: typeof myVector["6"]
      Actual: number

Pass: myVector["6"]
      Actual: 7

Pass: myVector's property
      Actual: 7

Pass: typeof myVector["7"]
      Actual: number

Pass: myVector["7"]
      Actual: 8

Pass: myVector's property
      Actual: 8

Pass: typeof myVector["8"]
      Actual: number

Pass: myVector["8"]
      Actual: 9

Pass: myVector's property
      Actual: append

Pass: typeof myVector["append"]
      Actual: function

Pass: myVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["append"].length
      Actual: 1

Pass: myVector's property
      Actual: clear

Pass: typeof myVector["clear"]
      Actual: function

Pass: myVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["clear"].length
      Actual: 0

Pass: myVector's property
      Actual: first

Pass: typeof myVector["first"]
      Actual: function

Pass: myVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["first"].length
      Actual: 0

Pass: myVector's property
      Actual: getAt

Pass: typeof myVector["getAt"]
      Actual: function

Pass: myVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["getAt"].length
      Actual: 1

Pass: myVector's property
      Actual: getMany

Pass: typeof myVector["getMany"]
      Actual: function

Pass: myVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector["getMany"].length
      Actual: 2

Pass: myVector's property
      Actual: getView

Pass: typeof myVector["getView"]
      Actual: function

Pass: myVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["getView"].length
      Actual: 0

Pass: myVector's property
      Actual: indexOf

Pass: typeof myVector["indexOf"]
      Actual: function

Pass: myVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["indexOf"].length
      Actual: 1

Pass: myVector's property
      Actual: insertAt

Pass: typeof myVector["insertAt"]
      Actual: function

Pass: myVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector["insertAt"].length
      Actual: 2

Pass: myVector's property
      Actual: removeAt

Pass: typeof myVector["removeAt"]
      Actual: function

Pass: myVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["removeAt"].length
      Actual: 1

Pass: myVector's property
      Actual: removeAtEnd

Pass: typeof myVector["removeAtEnd"]
      Actual: function

Pass: myVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["removeAtEnd"].length
      Actual: 0

Pass: myVector's property
      Actual: replaceAll

Pass: typeof myVector["replaceAll"]
      Actual: function

Pass: myVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["replaceAll"].length
      Actual: 1

Pass: myVector's property
      Actual: setAt

Pass: typeof myVector["setAt"]
      Actual: function

Pass: myVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector["setAt"].length
      Actual: 2

Pass: myVector's property
      Actual: size

Pass: typeof myVector["size"]
      Actual: number

Pass: number of properties of myVector
      Actual: 22

Comment: Get myVector back as Iterable = mySameVector
Comment: typeof mySameVector: object
Comment: Dump of properties : 
    var mySameVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['5', 'number'],
        ['6', 'number'],
        ['7', 'number'],
        ['8', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof mySameVector
      Actual: object

Pass: mySameVector's property
      Actual: 0

Pass: typeof mySameVector["0"]
      Actual: number

Pass: mySameVector["0"]
      Actual: 1

Pass: mySameVector's property
      Actual: 1

Pass: typeof mySameVector["1"]
      Actual: number

Pass: mySameVector["1"]
      Actual: 2

Pass: mySameVector's property
      Actual: 2

Pass: typeof mySameVector["2"]
      Actual: number

Pass: mySameVector["2"]
      Actual: 3

Pass: mySameVector's property
      Actual: 3

Pass: typeof mySameVector["3"]
      Actual: number

Pass: mySameVector["3"]
      Actual: 4

Pass: mySameVector's property
      Actual: 4

Pass: typeof mySameVector["4"]
      Actual: number

Pass: mySameVector["4"]
      Actual: 5

Pass: mySameVector's property
      Actual: 5

Pass: typeof mySameVector["5"]
      Actual: number

Pass: mySameVector["5"]
      Actual: 6

Pass: mySameVector's property
      Actual: 6

Pass: typeof mySameVector["6"]
      Actual: number

Pass: mySameVector["6"]
      Actual: 7

Pass: mySameVector's property
      Actual: 7

Pass: typeof mySameVector["7"]
      Actual: number

Pass: mySameVector["7"]
      Actual: 8

Pass: mySameVector's property
      Actual: 8

Pass: typeof mySameVector["8"]
      Actual: number

Pass: mySameVector["8"]
      Actual: 9

Pass: mySameVector's property
      Actual: append

Pass: typeof mySameVector["append"]
      Actual: function

Pass: mySameVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["append"].length
      Actual: 1

Pass: mySameVector's property
      Actual: clear

Pass: typeof mySameVector["clear"]
      Actual: function

Pass: mySameVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["clear"].length
      Actual: 0

Pass: mySameVector's property
      Actual: first

Pass: typeof mySameVector["first"]
      Actual: function

Pass: mySameVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["first"].length
      Actual: 0

Pass: mySameVector's property
      Actual: getAt

Pass: typeof mySameVector["getAt"]
      Actual: function

Pass: mySameVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["getAt"].length
      Actual: 1

Pass: mySameVector's property
      Actual: getMany

Pass: typeof mySameVector["getMany"]
      Actual: function

Pass: mySameVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySameVector["getMany"].length
      Actual: 2

Pass: mySameVector's property
      Actual: getView

Pass: typeof mySameVector["getView"]
      Actual: function

Pass: mySameVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["getView"].length
      Actual: 0

Pass: mySameVector's property
      Actual: indexOf

Pass: typeof mySameVector["indexOf"]
      Actual: function

Pass: mySameVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["indexOf"].length
      Actual: 1

Pass: mySameVector's property
      Actual: insertAt

Pass: typeof mySameVector["insertAt"]
      Actual: function

Pass: mySameVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySameVector["insertAt"].length
      Actual: 2

Pass: mySameVector's property
      Actual: removeAt

Pass: typeof mySameVector["removeAt"]
      Actual: function

Pass: mySameVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["removeAt"].length
      Actual: 1

Pass: mySameVector's property
      Actual: removeAtEnd

Pass: typeof mySameVector["removeAtEnd"]
      Actual: function

Pass: mySameVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["removeAtEnd"].length
      Actual: 0

Pass: mySameVector's property
      Actual: replaceAll

Pass: typeof mySameVector["replaceAll"]
      Actual: function

Pass: mySameVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["replaceAll"].length
      Actual: 1

Pass: mySameVector's property
      Actual: setAt

Pass: typeof mySameVector["setAt"]
      Actual: function

Pass: mySameVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySameVector["setAt"].length
      Actual: 2

Pass: mySameVector's property
      Actual: size

Pass: typeof mySameVector["size"]
      Actual: number

Pass: number of properties of mySameVector
      Actual: 22

Comment: Equality tests on myVector and mySameVector
Pass: myVector == mySameVector
      Actual: true

Pass: myVector === mySameVector
      Actual: true

Comment: Lifetime tests
Comment: Set myVector to null
Comment: Verifying that mySameVector still has the expandos
Pass: mySameVector.length
      Actual: 9

Comment: Pass mySameVector to Method that keeps vector into the ABI
Pass: myAnimal.myIterable == mySameVector
      Actual: true

Pass: myAnimal.myIterable === mySameVector
      Actual: true

Comment: Set the mySameVector to null
Comment: Perform gc
Comment: Get the iterable back from winrt
Comment: Verifying that mySameVector still has the expandos
Pass: mySameVector.length
      Actual: 9

PASS [Test 5: GetBackSameParameterizedRequiredInterface]
=================================================

=================================================
Starting [Test 6: DelegateWithSimpleRuntimeClass]
Comment: Create myFish
Comment: typeof myFish: object
Comment: Dump of properties : 
    var myFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myFish
      Actual: object

Pass: myFish's property
      Actual: getNullAsAnimal

Pass: typeof myFish["getNullAsAnimal"]
      Actual: function

Pass: myFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsAnimal"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsMap

Pass: typeof myFish["getNullAsMap"]
      Actual: function

Pass: myFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsMap"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsObservableVector

Pass: typeof myFish["getNullAsObservableVector"]
      Actual: function

Pass: myFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsObservableVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsPropertyValue

Pass: typeof myFish["getNullAsPropertyValue"]
      Actual: function

Pass: myFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsVector

Pass: typeof myFish["getNullAsVector"]
      Actual: function

Pass: myFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getNumFins

Pass: typeof myFish["getNumFins"]
      Actual: function

Pass: myFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNumFins"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneAnimal

Pass: typeof myFish["getOneAnimal"]
      Actual: function

Pass: myFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneAnimal"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof myFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: myFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof myFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: myFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof myFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: myFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneMap

Pass: typeof myFish["getOneMap"]
      Actual: function

Pass: myFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneMap"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneObservableVector

Pass: typeof myFish["getOneObservableVector"]
      Actual: function

Pass: myFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneObservableVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getOnePropertyValue

Pass: typeof myFish["getOnePropertyValue"]
      Actual: function

Pass: myFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOnePropertyValue"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneVector

Pass: typeof myFish["getOneVector"]
      Actual: function

Pass: myFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneVector"].length
      Actual: 0

Pass: myFish's property
      Actual: marshalIFish

Pass: typeof myFish["marshalIFish"]
      Actual: function

Pass: myFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalIFish"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalIFishToFish

Pass: typeof myFish["marshalIFishToFish"]
      Actual: function

Pass: myFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalIFishToFish"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalILikeToSwim

Pass: typeof myFish["marshalILikeToSwim"]
      Actual: function

Pass: myFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalILikeToSwim"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof myFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: myFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: myFish's property
      Actual: name

Pass: typeof myFish["name"]
      Actual: string

Pass: myFish's property
      Actual: setNumFins

Pass: typeof myFish["setNumFins"]
      Actual: function

Pass: myFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["setNumFins"].length
      Actual: 1

Pass: myFish's property
      Actual: singTheSwimmingSong

Pass: typeof myFish["singTheSwimmingSong"]
      Actual: function

Pass: myFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["singTheSwimmingSong"].length
      Actual: 0

Pass: myFish's property
      Actual: toString

Pass: typeof myFish["toString"]
      Actual: function

Pass: myFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["toString"].length
      Actual: 0

Pass: number of properties of myFish
      Actual: 22

Pass: myFish.name
      Actual: Nemo

Comment: Pass myFish to Method that keeps fish into the ABI
Comment: Call the delegate with the fish : returning null
Comment: *** myDelegate: Invoke
Comment: typeof delegateMyFish: object
Comment: Dump of properties : 
    var delegateMyFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof delegateMyFish
      Actual: object

Pass: delegateMyFish's property
      Actual: getNullAsAnimal

Pass: typeof delegateMyFish["getNullAsAnimal"]
      Actual: function

Pass: delegateMyFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsAnimal"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsMap

Pass: typeof delegateMyFish["getNullAsMap"]
      Actual: function

Pass: delegateMyFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsMap"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsObservableVector

Pass: typeof delegateMyFish["getNullAsObservableVector"]
      Actual: function

Pass: delegateMyFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsObservableVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsPropertyValue

Pass: typeof delegateMyFish["getNullAsPropertyValue"]
      Actual: function

Pass: delegateMyFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsVector

Pass: typeof delegateMyFish["getNullAsVector"]
      Actual: function

Pass: delegateMyFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNumFins

Pass: typeof delegateMyFish["getNumFins"]
      Actual: function

Pass: delegateMyFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNumFins"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneAnimal

Pass: typeof delegateMyFish["getOneAnimal"]
      Actual: function

Pass: delegateMyFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneAnimal"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof delegateMyFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof delegateMyFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof delegateMyFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneMap

Pass: typeof delegateMyFish["getOneMap"]
      Actual: function

Pass: delegateMyFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneMap"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneObservableVector

Pass: typeof delegateMyFish["getOneObservableVector"]
      Actual: function

Pass: delegateMyFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneObservableVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOnePropertyValue

Pass: typeof delegateMyFish["getOnePropertyValue"]
      Actual: function

Pass: delegateMyFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOnePropertyValue"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneVector

Pass: typeof delegateMyFish["getOneVector"]
      Actual: function

Pass: delegateMyFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: marshalIFish

Pass: typeof delegateMyFish["marshalIFish"]
      Actual: function

Pass: delegateMyFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalIFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalIFishToFish

Pass: typeof delegateMyFish["marshalIFishToFish"]
      Actual: function

Pass: delegateMyFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalIFishToFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalILikeToSwim

Pass: typeof delegateMyFish["marshalILikeToSwim"]
      Actual: function

Pass: delegateMyFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalILikeToSwim"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof delegateMyFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: delegateMyFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: name

Pass: typeof delegateMyFish["name"]
      Actual: string

Pass: delegateMyFish's property
      Actual: setNumFins

Pass: typeof delegateMyFish["setNumFins"]
      Actual: function

Pass: delegateMyFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["setNumFins"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: singTheSwimmingSong

Pass: typeof delegateMyFish["singTheSwimmingSong"]
      Actual: function

Pass: delegateMyFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["singTheSwimmingSong"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: toString

Pass: typeof delegateMyFish["toString"]
      Actual: function

Pass: delegateMyFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["toString"].length
      Actual: 0

Pass: number of properties of delegateMyFish
      Actual: 22

Pass: delegateMyFish.name
      Actual: Nemo

Comment: Equality Tests on myFish and delegateMyFish
Pass: myFish == delegateMyFish
      Actual: true

Pass: myFish === delegateMyFish
      Actual: true

Comment: Lifetime tests
Comment: Set my Fish to null
Comment: Perform gc
Comment: Verifying that delegateMyFish still has the expandos
Pass: mySameFish.name
      Actual: Nemo

Comment: *** myDelegate: Exit
Pass: mySameFish
      Actual: null

Comment: Call the delegate with the fish: returning fish
Comment: *** myDelegate: Invoke
Comment: typeof delegateMyFish: object
Comment: Dump of properties : 
    var delegateMyFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof delegateMyFish
      Actual: object

Pass: delegateMyFish's property
      Actual: getNullAsAnimal

Pass: typeof delegateMyFish["getNullAsAnimal"]
      Actual: function

Pass: delegateMyFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsAnimal"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsMap

Pass: typeof delegateMyFish["getNullAsMap"]
      Actual: function

Pass: delegateMyFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsMap"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsObservableVector

Pass: typeof delegateMyFish["getNullAsObservableVector"]
      Actual: function

Pass: delegateMyFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsObservableVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsPropertyValue

Pass: typeof delegateMyFish["getNullAsPropertyValue"]
      Actual: function

Pass: delegateMyFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsVector

Pass: typeof delegateMyFish["getNullAsVector"]
      Actual: function

Pass: delegateMyFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNumFins

Pass: typeof delegateMyFish["getNumFins"]
      Actual: function

Pass: delegateMyFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNumFins"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneAnimal

Pass: typeof delegateMyFish["getOneAnimal"]
      Actual: function

Pass: delegateMyFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneAnimal"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof delegateMyFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof delegateMyFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof delegateMyFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneMap

Pass: typeof delegateMyFish["getOneMap"]
      Actual: function

Pass: delegateMyFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneMap"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneObservableVector

Pass: typeof delegateMyFish["getOneObservableVector"]
      Actual: function

Pass: delegateMyFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneObservableVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOnePropertyValue

Pass: typeof delegateMyFish["getOnePropertyValue"]
      Actual: function

Pass: delegateMyFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOnePropertyValue"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneVector

Pass: typeof delegateMyFish["getOneVector"]
      Actual: function

Pass: delegateMyFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: marshalIFish

Pass: typeof delegateMyFish["marshalIFish"]
      Actual: function

Pass: delegateMyFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalIFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalIFishToFish

Pass: typeof delegateMyFish["marshalIFishToFish"]
      Actual: function

Pass: delegateMyFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalIFishToFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalILikeToSwim

Pass: typeof delegateMyFish["marshalILikeToSwim"]
      Actual: function

Pass: delegateMyFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalILikeToSwim"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof delegateMyFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: delegateMyFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: name

Pass: typeof delegateMyFish["name"]
      Actual: string

Pass: delegateMyFish's property
      Actual: setNumFins

Pass: typeof delegateMyFish["setNumFins"]
      Actual: function

Pass: delegateMyFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["setNumFins"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: singTheSwimmingSong

Pass: typeof delegateMyFish["singTheSwimmingSong"]
      Actual: function

Pass: delegateMyFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["singTheSwimmingSong"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: toString

Pass: typeof delegateMyFish["toString"]
      Actual: function

Pass: delegateMyFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["toString"].length
      Actual: 0

Pass: number of properties of delegateMyFish
      Actual: 22

Pass: delegateMyFish.name
      Actual: Nemo

Comment: Equality Tests on myFish and delegateMyFish
Pass: myFish == delegateMyFish
      Actual: true

Pass: myFish === delegateMyFish
      Actual: true

Comment: Lifetime tests
Comment: Set my Fish to null
Comment: Perform gc
Comment: Verifying that delegateMyFish still has the expandos
Pass: mySameFish.name
      Actual: Nemo

Comment: *** myDelegate: Exit
Comment: typeof mySameFish: object
Comment: Dump of properties : 
    var mySameFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof mySameFish
      Actual: object

Pass: mySameFish's property
      Actual: getNullAsAnimal

Pass: typeof mySameFish["getNullAsAnimal"]
      Actual: function

Pass: mySameFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsAnimal"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsMap

Pass: typeof mySameFish["getNullAsMap"]
      Actual: function

Pass: mySameFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsMap"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsObservableVector

Pass: typeof mySameFish["getNullAsObservableVector"]
      Actual: function

Pass: mySameFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsObservableVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsPropertyValue

Pass: typeof mySameFish["getNullAsPropertyValue"]
      Actual: function

Pass: mySameFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsVector

Pass: typeof mySameFish["getNullAsVector"]
      Actual: function

Pass: mySameFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNumFins

Pass: typeof mySameFish["getNumFins"]
      Actual: function

Pass: mySameFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNumFins"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneAnimal

Pass: typeof mySameFish["getOneAnimal"]
      Actual: function

Pass: mySameFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneAnimal"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof mySameFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof mySameFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof mySameFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneMap

Pass: typeof mySameFish["getOneMap"]
      Actual: function

Pass: mySameFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneMap"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneObservableVector

Pass: typeof mySameFish["getOneObservableVector"]
      Actual: function

Pass: mySameFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneObservableVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOnePropertyValue

Pass: typeof mySameFish["getOnePropertyValue"]
      Actual: function

Pass: mySameFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOnePropertyValue"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneVector

Pass: typeof mySameFish["getOneVector"]
      Actual: function

Pass: mySameFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: marshalIFish

Pass: typeof mySameFish["marshalIFish"]
      Actual: function

Pass: mySameFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalIFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalIFishToFish

Pass: typeof mySameFish["marshalIFishToFish"]
      Actual: function

Pass: mySameFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalIFishToFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalILikeToSwim

Pass: typeof mySameFish["marshalILikeToSwim"]
      Actual: function

Pass: mySameFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalILikeToSwim"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof mySameFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: mySameFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: name

Pass: typeof mySameFish["name"]
      Actual: string

Pass: mySameFish's property
      Actual: setNumFins

Pass: typeof mySameFish["setNumFins"]
      Actual: function

Pass: mySameFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["setNumFins"].length
      Actual: 1

Pass: mySameFish's property
      Actual: singTheSwimmingSong

Pass: typeof mySameFish["singTheSwimmingSong"]
      Actual: function

Pass: mySameFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["singTheSwimmingSong"].length
      Actual: 0

Pass: mySameFish's property
      Actual: toString

Pass: typeof mySameFish["toString"]
      Actual: function

Pass: mySameFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["toString"].length
      Actual: 0

Pass: number of properties of mySameFish
      Actual: 22

Pass: mySameFish.name
      Actual: Nemo

Comment: Equality Tests on myFish and mySameFish
Pass: Animals.Animal.myFish == mySameFish
      Actual: true

Pass: Animals.Animal.myFish === mySameFish
      Actual: true

Comment: Lifetime tests
Comment: Set my Fish to null
Comment: Perform gc
Comment: Verifying that mySameFish still has the expandos
Pass: mySameFish.name
      Actual: Nemo

PASS [Test 6: DelegateWithSimpleRuntimeClass]
=================================================

=================================================
Starting [Test 7: DelegateWithSimpleInterface]
Comment: Create myFish
Comment: typeof myFish: object
Comment: Dump of properties : 
    var myFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myFish
      Actual: object

Pass: myFish's property
      Actual: getNullAsAnimal

Pass: typeof myFish["getNullAsAnimal"]
      Actual: function

Pass: myFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsAnimal"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsMap

Pass: typeof myFish["getNullAsMap"]
      Actual: function

Pass: myFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsMap"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsObservableVector

Pass: typeof myFish["getNullAsObservableVector"]
      Actual: function

Pass: myFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsObservableVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsPropertyValue

Pass: typeof myFish["getNullAsPropertyValue"]
      Actual: function

Pass: myFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsVector

Pass: typeof myFish["getNullAsVector"]
      Actual: function

Pass: myFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getNumFins

Pass: typeof myFish["getNumFins"]
      Actual: function

Pass: myFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNumFins"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneAnimal

Pass: typeof myFish["getOneAnimal"]
      Actual: function

Pass: myFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneAnimal"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof myFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: myFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof myFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: myFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof myFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: myFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneMap

Pass: typeof myFish["getOneMap"]
      Actual: function

Pass: myFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneMap"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneObservableVector

Pass: typeof myFish["getOneObservableVector"]
      Actual: function

Pass: myFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneObservableVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getOnePropertyValue

Pass: typeof myFish["getOnePropertyValue"]
      Actual: function

Pass: myFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOnePropertyValue"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneVector

Pass: typeof myFish["getOneVector"]
      Actual: function

Pass: myFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneVector"].length
      Actual: 0

Pass: myFish's property
      Actual: marshalIFish

Pass: typeof myFish["marshalIFish"]
      Actual: function

Pass: myFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalIFish"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalIFishToFish

Pass: typeof myFish["marshalIFishToFish"]
      Actual: function

Pass: myFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalIFishToFish"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalILikeToSwim

Pass: typeof myFish["marshalILikeToSwim"]
      Actual: function

Pass: myFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalILikeToSwim"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof myFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: myFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: myFish's property
      Actual: name

Pass: typeof myFish["name"]
      Actual: string

Pass: myFish's property
      Actual: setNumFins

Pass: typeof myFish["setNumFins"]
      Actual: function

Pass: myFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["setNumFins"].length
      Actual: 1

Pass: myFish's property
      Actual: singTheSwimmingSong

Pass: typeof myFish["singTheSwimmingSong"]
      Actual: function

Pass: myFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["singTheSwimmingSong"].length
      Actual: 0

Pass: myFish's property
      Actual: toString

Pass: typeof myFish["toString"]
      Actual: function

Pass: myFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["toString"].length
      Actual: 0

Pass: number of properties of myFish
      Actual: 22

Pass: myFish.name
      Actual: Nemo

Comment: Pass myFish to Method that keeps fish into the ABI
Comment: Call the delegate with the fish : returning null
Comment: *** myDelegate: Invoke
Comment: typeof delegateMyFish: object
Comment: Dump of properties : 
    var delegateMyFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof delegateMyFish
      Actual: object

Pass: delegateMyFish's property
      Actual: getNullAsAnimal

Pass: typeof delegateMyFish["getNullAsAnimal"]
      Actual: function

Pass: delegateMyFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsAnimal"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsMap

Pass: typeof delegateMyFish["getNullAsMap"]
      Actual: function

Pass: delegateMyFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsMap"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsObservableVector

Pass: typeof delegateMyFish["getNullAsObservableVector"]
      Actual: function

Pass: delegateMyFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsObservableVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsPropertyValue

Pass: typeof delegateMyFish["getNullAsPropertyValue"]
      Actual: function

Pass: delegateMyFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsVector

Pass: typeof delegateMyFish["getNullAsVector"]
      Actual: function

Pass: delegateMyFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNumFins

Pass: typeof delegateMyFish["getNumFins"]
      Actual: function

Pass: delegateMyFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNumFins"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneAnimal

Pass: typeof delegateMyFish["getOneAnimal"]
      Actual: function

Pass: delegateMyFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneAnimal"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof delegateMyFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof delegateMyFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof delegateMyFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneMap

Pass: typeof delegateMyFish["getOneMap"]
      Actual: function

Pass: delegateMyFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneMap"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneObservableVector

Pass: typeof delegateMyFish["getOneObservableVector"]
      Actual: function

Pass: delegateMyFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneObservableVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOnePropertyValue

Pass: typeof delegateMyFish["getOnePropertyValue"]
      Actual: function

Pass: delegateMyFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOnePropertyValue"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneVector

Pass: typeof delegateMyFish["getOneVector"]
      Actual: function

Pass: delegateMyFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: marshalIFish

Pass: typeof delegateMyFish["marshalIFish"]
      Actual: function

Pass: delegateMyFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalIFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalIFishToFish

Pass: typeof delegateMyFish["marshalIFishToFish"]
      Actual: function

Pass: delegateMyFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalIFishToFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalILikeToSwim

Pass: typeof delegateMyFish["marshalILikeToSwim"]
      Actual: function

Pass: delegateMyFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalILikeToSwim"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof delegateMyFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: delegateMyFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: name

Pass: typeof delegateMyFish["name"]
      Actual: string

Pass: delegateMyFish's property
      Actual: setNumFins

Pass: typeof delegateMyFish["setNumFins"]
      Actual: function

Pass: delegateMyFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["setNumFins"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: singTheSwimmingSong

Pass: typeof delegateMyFish["singTheSwimmingSong"]
      Actual: function

Pass: delegateMyFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["singTheSwimmingSong"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: toString

Pass: typeof delegateMyFish["toString"]
      Actual: function

Pass: delegateMyFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["toString"].length
      Actual: 0

Pass: number of properties of delegateMyFish
      Actual: 22

Pass: delegateMyFish.name
      Actual: Nemo

Comment: Equality Tests on myFish and delegateMyFish
Pass: myFish == delegateMyFish
      Actual: true

Pass: myFish === delegateMyFish
      Actual: true

Comment: Lifetime tests
Comment: Set my Fish to null
Comment: Perform gc
Comment: Verifying that delegateMyFish still has the expandos
Pass: mySameFish.name
      Actual: Nemo

Comment: *** myDelegate: Exit
Pass: mySameFish
      Actual: null

Comment: Call the delegate with the fish: returning fish
Comment: *** myDelegate: Invoke
Comment: typeof delegateMyFish: object
Comment: Dump of properties : 
    var delegateMyFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof delegateMyFish
      Actual: object

Pass: delegateMyFish's property
      Actual: getNullAsAnimal

Pass: typeof delegateMyFish["getNullAsAnimal"]
      Actual: function

Pass: delegateMyFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsAnimal"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsMap

Pass: typeof delegateMyFish["getNullAsMap"]
      Actual: function

Pass: delegateMyFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsMap"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsObservableVector

Pass: typeof delegateMyFish["getNullAsObservableVector"]
      Actual: function

Pass: delegateMyFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsObservableVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsPropertyValue

Pass: typeof delegateMyFish["getNullAsPropertyValue"]
      Actual: function

Pass: delegateMyFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsVector

Pass: typeof delegateMyFish["getNullAsVector"]
      Actual: function

Pass: delegateMyFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNumFins

Pass: typeof delegateMyFish["getNumFins"]
      Actual: function

Pass: delegateMyFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNumFins"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneAnimal

Pass: typeof delegateMyFish["getOneAnimal"]
      Actual: function

Pass: delegateMyFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneAnimal"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof delegateMyFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof delegateMyFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof delegateMyFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneMap

Pass: typeof delegateMyFish["getOneMap"]
      Actual: function

Pass: delegateMyFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneMap"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneObservableVector

Pass: typeof delegateMyFish["getOneObservableVector"]
      Actual: function

Pass: delegateMyFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneObservableVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOnePropertyValue

Pass: typeof delegateMyFish["getOnePropertyValue"]
      Actual: function

Pass: delegateMyFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOnePropertyValue"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneVector

Pass: typeof delegateMyFish["getOneVector"]
      Actual: function

Pass: delegateMyFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: marshalIFish

Pass: typeof delegateMyFish["marshalIFish"]
      Actual: function

Pass: delegateMyFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalIFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalIFishToFish

Pass: typeof delegateMyFish["marshalIFishToFish"]
      Actual: function

Pass: delegateMyFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalIFishToFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalILikeToSwim

Pass: typeof delegateMyFish["marshalILikeToSwim"]
      Actual: function

Pass: delegateMyFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalILikeToSwim"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof delegateMyFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: delegateMyFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: name

Pass: typeof delegateMyFish["name"]
      Actual: string

Pass: delegateMyFish's property
      Actual: setNumFins

Pass: typeof delegateMyFish["setNumFins"]
      Actual: function

Pass: delegateMyFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["setNumFins"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: singTheSwimmingSong

Pass: typeof delegateMyFish["singTheSwimmingSong"]
      Actual: function

Pass: delegateMyFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["singTheSwimmingSong"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: toString

Pass: typeof delegateMyFish["toString"]
      Actual: function

Pass: delegateMyFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["toString"].length
      Actual: 0

Pass: number of properties of delegateMyFish
      Actual: 22

Pass: delegateMyFish.name
      Actual: Nemo

Comment: Equality Tests on myFish and delegateMyFish
Pass: myFish == delegateMyFish
      Actual: true

Pass: myFish === delegateMyFish
      Actual: true

Comment: Lifetime tests
Comment: Set my Fish to null
Comment: Perform gc
Comment: Verifying that delegateMyFish still has the expandos
Pass: mySameFish.name
      Actual: Nemo

Comment: *** myDelegate: Exit
Comment: typeof mySameFish: object
Comment: Dump of properties : 
    var mySameFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof mySameFish
      Actual: object

Pass: mySameFish's property
      Actual: getNullAsAnimal

Pass: typeof mySameFish["getNullAsAnimal"]
      Actual: function

Pass: mySameFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsAnimal"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsMap

Pass: typeof mySameFish["getNullAsMap"]
      Actual: function

Pass: mySameFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsMap"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsObservableVector

Pass: typeof mySameFish["getNullAsObservableVector"]
      Actual: function

Pass: mySameFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsObservableVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsPropertyValue

Pass: typeof mySameFish["getNullAsPropertyValue"]
      Actual: function

Pass: mySameFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsVector

Pass: typeof mySameFish["getNullAsVector"]
      Actual: function

Pass: mySameFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNumFins

Pass: typeof mySameFish["getNumFins"]
      Actual: function

Pass: mySameFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNumFins"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneAnimal

Pass: typeof mySameFish["getOneAnimal"]
      Actual: function

Pass: mySameFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneAnimal"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof mySameFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof mySameFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof mySameFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneMap

Pass: typeof mySameFish["getOneMap"]
      Actual: function

Pass: mySameFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneMap"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneObservableVector

Pass: typeof mySameFish["getOneObservableVector"]
      Actual: function

Pass: mySameFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneObservableVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOnePropertyValue

Pass: typeof mySameFish["getOnePropertyValue"]
      Actual: function

Pass: mySameFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOnePropertyValue"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneVector

Pass: typeof mySameFish["getOneVector"]
      Actual: function

Pass: mySameFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: marshalIFish

Pass: typeof mySameFish["marshalIFish"]
      Actual: function

Pass: mySameFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalIFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalIFishToFish

Pass: typeof mySameFish["marshalIFishToFish"]
      Actual: function

Pass: mySameFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalIFishToFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalILikeToSwim

Pass: typeof mySameFish["marshalILikeToSwim"]
      Actual: function

Pass: mySameFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalILikeToSwim"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof mySameFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: mySameFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: name

Pass: typeof mySameFish["name"]
      Actual: string

Pass: mySameFish's property
      Actual: setNumFins

Pass: typeof mySameFish["setNumFins"]
      Actual: function

Pass: mySameFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["setNumFins"].length
      Actual: 1

Pass: mySameFish's property
      Actual: singTheSwimmingSong

Pass: typeof mySameFish["singTheSwimmingSong"]
      Actual: function

Pass: mySameFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["singTheSwimmingSong"].length
      Actual: 0

Pass: mySameFish's property
      Actual: toString

Pass: typeof mySameFish["toString"]
      Actual: function

Pass: mySameFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["toString"].length
      Actual: 0

Pass: number of properties of mySameFish
      Actual: 22

Pass: mySameFish.name
      Actual: Nemo

Comment: Equality Tests on myFish and mySameFish
Pass: Animals.Animal.myIFish == mySameFish
      Actual: true

Pass: Animals.Animal.myIFish === mySameFish
      Actual: true

Comment: Lifetime tests
Comment: Set my Fish to null
Comment: Perform gc
Comment: Verifying that mySameFish still has the expandos
Pass: mySameFish.name
      Actual: Nemo

PASS [Test 7: DelegateWithSimpleInterface]
=================================================

=================================================
Starting [Test 8: DelegateWithSimpleRequiredInterface]
Comment: Create myFish
Comment: typeof myFish: object
Comment: Dump of properties : 
    var myFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myFish
      Actual: object

Pass: myFish's property
      Actual: getNullAsAnimal

Pass: typeof myFish["getNullAsAnimal"]
      Actual: function

Pass: myFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsAnimal"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsMap

Pass: typeof myFish["getNullAsMap"]
      Actual: function

Pass: myFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsMap"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsObservableVector

Pass: typeof myFish["getNullAsObservableVector"]
      Actual: function

Pass: myFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsObservableVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsPropertyValue

Pass: typeof myFish["getNullAsPropertyValue"]
      Actual: function

Pass: myFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: myFish's property
      Actual: getNullAsVector

Pass: typeof myFish["getNullAsVector"]
      Actual: function

Pass: myFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNullAsVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getNumFins

Pass: typeof myFish["getNumFins"]
      Actual: function

Pass: myFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getNumFins"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneAnimal

Pass: typeof myFish["getOneAnimal"]
      Actual: function

Pass: myFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneAnimal"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof myFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: myFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof myFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: myFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof myFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: myFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneMap

Pass: typeof myFish["getOneMap"]
      Actual: function

Pass: myFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneMap"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneObservableVector

Pass: typeof myFish["getOneObservableVector"]
      Actual: function

Pass: myFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneObservableVector"].length
      Actual: 0

Pass: myFish's property
      Actual: getOnePropertyValue

Pass: typeof myFish["getOnePropertyValue"]
      Actual: function

Pass: myFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOnePropertyValue"].length
      Actual: 0

Pass: myFish's property
      Actual: getOneVector

Pass: typeof myFish["getOneVector"]
      Actual: function

Pass: myFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["getOneVector"].length
      Actual: 0

Pass: myFish's property
      Actual: marshalIFish

Pass: typeof myFish["marshalIFish"]
      Actual: function

Pass: myFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalIFish"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalIFishToFish

Pass: typeof myFish["marshalIFishToFish"]
      Actual: function

Pass: myFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalIFishToFish"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalILikeToSwim

Pass: typeof myFish["marshalILikeToSwim"]
      Actual: function

Pass: myFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalILikeToSwim"].length
      Actual: 1

Pass: myFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof myFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: myFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: myFish's property
      Actual: name

Pass: typeof myFish["name"]
      Actual: string

Pass: myFish's property
      Actual: setNumFins

Pass: typeof myFish["setNumFins"]
      Actual: function

Pass: myFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myFish["setNumFins"].length
      Actual: 1

Pass: myFish's property
      Actual: singTheSwimmingSong

Pass: typeof myFish["singTheSwimmingSong"]
      Actual: function

Pass: myFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["singTheSwimmingSong"].length
      Actual: 0

Pass: myFish's property
      Actual: toString

Pass: typeof myFish["toString"]
      Actual: function

Pass: myFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myFish["toString"].length
      Actual: 0

Pass: number of properties of myFish
      Actual: 22

Pass: myFish.name
      Actual: Nemo

Comment: Pass myFish to Method that keeps fish into the ABI
Comment: Call the delegate with the fish : returning null
Comment: *** myDelegate: Invoke
Comment: typeof delegateMyFish: object
Comment: Dump of properties : 
    var delegateMyFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof delegateMyFish
      Actual: object

Pass: delegateMyFish's property
      Actual: getNullAsAnimal

Pass: typeof delegateMyFish["getNullAsAnimal"]
      Actual: function

Pass: delegateMyFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsAnimal"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsMap

Pass: typeof delegateMyFish["getNullAsMap"]
      Actual: function

Pass: delegateMyFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsMap"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsObservableVector

Pass: typeof delegateMyFish["getNullAsObservableVector"]
      Actual: function

Pass: delegateMyFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsObservableVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsPropertyValue

Pass: typeof delegateMyFish["getNullAsPropertyValue"]
      Actual: function

Pass: delegateMyFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsVector

Pass: typeof delegateMyFish["getNullAsVector"]
      Actual: function

Pass: delegateMyFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNumFins

Pass: typeof delegateMyFish["getNumFins"]
      Actual: function

Pass: delegateMyFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNumFins"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneAnimal

Pass: typeof delegateMyFish["getOneAnimal"]
      Actual: function

Pass: delegateMyFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneAnimal"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof delegateMyFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof delegateMyFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof delegateMyFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneMap

Pass: typeof delegateMyFish["getOneMap"]
      Actual: function

Pass: delegateMyFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneMap"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneObservableVector

Pass: typeof delegateMyFish["getOneObservableVector"]
      Actual: function

Pass: delegateMyFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneObservableVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOnePropertyValue

Pass: typeof delegateMyFish["getOnePropertyValue"]
      Actual: function

Pass: delegateMyFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOnePropertyValue"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneVector

Pass: typeof delegateMyFish["getOneVector"]
      Actual: function

Pass: delegateMyFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: marshalIFish

Pass: typeof delegateMyFish["marshalIFish"]
      Actual: function

Pass: delegateMyFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalIFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalIFishToFish

Pass: typeof delegateMyFish["marshalIFishToFish"]
      Actual: function

Pass: delegateMyFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalIFishToFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalILikeToSwim

Pass: typeof delegateMyFish["marshalILikeToSwim"]
      Actual: function

Pass: delegateMyFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalILikeToSwim"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof delegateMyFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: delegateMyFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: name

Pass: typeof delegateMyFish["name"]
      Actual: string

Pass: delegateMyFish's property
      Actual: setNumFins

Pass: typeof delegateMyFish["setNumFins"]
      Actual: function

Pass: delegateMyFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["setNumFins"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: singTheSwimmingSong

Pass: typeof delegateMyFish["singTheSwimmingSong"]
      Actual: function

Pass: delegateMyFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["singTheSwimmingSong"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: toString

Pass: typeof delegateMyFish["toString"]
      Actual: function

Pass: delegateMyFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["toString"].length
      Actual: 0

Pass: number of properties of delegateMyFish
      Actual: 22

Pass: delegateMyFish.name
      Actual: Nemo

Comment: Equality Tests on myFish and delegateMyFish
Pass: myFish == delegateMyFish
      Actual: true

Pass: myFish === delegateMyFish
      Actual: true

Comment: Lifetime tests
Comment: Set my Fish to null
Comment: Perform gc
Comment: Verifying that delegateMyFish still has the expandos
Pass: mySameFish.name
      Actual: Nemo

Comment: *** myDelegate: Exit
Pass: mySameFish
      Actual: null

Comment: Call the delegate with the fish: returning fish
Comment: *** myDelegate: Invoke
Comment: typeof delegateMyFish: object
Comment: Dump of properties : 
    var delegateMyFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof delegateMyFish
      Actual: object

Pass: delegateMyFish's property
      Actual: getNullAsAnimal

Pass: typeof delegateMyFish["getNullAsAnimal"]
      Actual: function

Pass: delegateMyFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsAnimal"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsMap

Pass: typeof delegateMyFish["getNullAsMap"]
      Actual: function

Pass: delegateMyFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsMap"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsObservableVector

Pass: typeof delegateMyFish["getNullAsObservableVector"]
      Actual: function

Pass: delegateMyFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsObservableVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsPropertyValue

Pass: typeof delegateMyFish["getNullAsPropertyValue"]
      Actual: function

Pass: delegateMyFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNullAsVector

Pass: typeof delegateMyFish["getNullAsVector"]
      Actual: function

Pass: delegateMyFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNullAsVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getNumFins

Pass: typeof delegateMyFish["getNumFins"]
      Actual: function

Pass: delegateMyFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getNumFins"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneAnimal

Pass: typeof delegateMyFish["getOneAnimal"]
      Actual: function

Pass: delegateMyFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneAnimal"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof delegateMyFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof delegateMyFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof delegateMyFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: delegateMyFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneMap

Pass: typeof delegateMyFish["getOneMap"]
      Actual: function

Pass: delegateMyFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneMap"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneObservableVector

Pass: typeof delegateMyFish["getOneObservableVector"]
      Actual: function

Pass: delegateMyFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneObservableVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOnePropertyValue

Pass: typeof delegateMyFish["getOnePropertyValue"]
      Actual: function

Pass: delegateMyFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOnePropertyValue"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: getOneVector

Pass: typeof delegateMyFish["getOneVector"]
      Actual: function

Pass: delegateMyFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["getOneVector"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: marshalIFish

Pass: typeof delegateMyFish["marshalIFish"]
      Actual: function

Pass: delegateMyFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalIFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalIFishToFish

Pass: typeof delegateMyFish["marshalIFishToFish"]
      Actual: function

Pass: delegateMyFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalIFishToFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalILikeToSwim

Pass: typeof delegateMyFish["marshalILikeToSwim"]
      Actual: function

Pass: delegateMyFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalILikeToSwim"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof delegateMyFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: delegateMyFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: name

Pass: typeof delegateMyFish["name"]
      Actual: string

Pass: delegateMyFish's property
      Actual: setNumFins

Pass: typeof delegateMyFish["setNumFins"]
      Actual: function

Pass: delegateMyFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateMyFish["setNumFins"].length
      Actual: 1

Pass: delegateMyFish's property
      Actual: singTheSwimmingSong

Pass: typeof delegateMyFish["singTheSwimmingSong"]
      Actual: function

Pass: delegateMyFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["singTheSwimmingSong"].length
      Actual: 0

Pass: delegateMyFish's property
      Actual: toString

Pass: typeof delegateMyFish["toString"]
      Actual: function

Pass: delegateMyFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateMyFish["toString"].length
      Actual: 0

Pass: number of properties of delegateMyFish
      Actual: 22

Pass: delegateMyFish.name
      Actual: Nemo

Comment: Equality Tests on myFish and delegateMyFish
Pass: myFish == delegateMyFish
      Actual: true

Pass: myFish === delegateMyFish
      Actual: true

Comment: Lifetime tests
Comment: Set my Fish to null
Comment: Perform gc
Comment: Verifying that delegateMyFish still has the expandos
Pass: mySameFish.name
      Actual: Nemo

Comment: *** myDelegate: Exit
Comment: typeof mySameFish: object
Comment: Dump of properties : 
    var mySameFishMembers = [
        ['getNullAsAnimal', 'function', 0],
        ['getNullAsMap', 'function', 0],
        ['getNullAsObservableVector', 'function', 0],
        ['getNullAsPropertyValue', 'function', 0],
        ['getNullAsVector', 'function', 0],
        ['getNumFins', 'function', 0],
        ['getOneAnimal', 'function', 0],
        ['getOneEmptyGRCNFail', 'function', 0],
        ['getOneEmptyGRCNInterface', 'function', 0],
        ['getOneEmptyGRCNNull', 'function', 0],
        ['getOneMap', 'function', 0],
        ['getOneObservableVector', 'function', 0],
        ['getOnePropertyValue', 'function', 0],
        ['getOneVector', 'function', 0],
        ['marshalIFish', 'function', 1],
        ['marshalIFishToFish', 'function', 1],
        ['marshalILikeToSwim', 'function', 1],
        ['marshalILikeToSwimToFish', 'function', 1],
        ['name', 'string'],
        ['setNumFins', 'function', 1],
        ['singTheSwimmingSong', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof mySameFish
      Actual: object

Pass: mySameFish's property
      Actual: getNullAsAnimal

Pass: typeof mySameFish["getNullAsAnimal"]
      Actual: function

Pass: mySameFish["getNullAsAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsAnimal"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsMap

Pass: typeof mySameFish["getNullAsMap"]
      Actual: function

Pass: mySameFish["getNullAsMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsMap"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsObservableVector

Pass: typeof mySameFish["getNullAsObservableVector"]
      Actual: function

Pass: mySameFish["getNullAsObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsObservableVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsPropertyValue

Pass: typeof mySameFish["getNullAsPropertyValue"]
      Actual: function

Pass: mySameFish["getNullAsPropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsPropertyValue"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNullAsVector

Pass: typeof mySameFish["getNullAsVector"]
      Actual: function

Pass: mySameFish["getNullAsVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNullAsVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getNumFins

Pass: typeof mySameFish["getNumFins"]
      Actual: function

Pass: mySameFish["getNumFins"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getNumFins"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneAnimal

Pass: typeof mySameFish["getOneAnimal"]
      Actual: function

Pass: mySameFish["getOneAnimal"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneAnimal"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNFail

Pass: typeof mySameFish["getOneEmptyGRCNFail"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNFail"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNFail"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNInterface

Pass: typeof mySameFish["getOneEmptyGRCNInterface"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNInterface"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneEmptyGRCNNull

Pass: typeof mySameFish["getOneEmptyGRCNNull"]
      Actual: function

Pass: mySameFish["getOneEmptyGRCNNull"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneEmptyGRCNNull"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneMap

Pass: typeof mySameFish["getOneMap"]
      Actual: function

Pass: mySameFish["getOneMap"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneMap"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneObservableVector

Pass: typeof mySameFish["getOneObservableVector"]
      Actual: function

Pass: mySameFish["getOneObservableVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneObservableVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOnePropertyValue

Pass: typeof mySameFish["getOnePropertyValue"]
      Actual: function

Pass: mySameFish["getOnePropertyValue"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOnePropertyValue"].length
      Actual: 0

Pass: mySameFish's property
      Actual: getOneVector

Pass: typeof mySameFish["getOneVector"]
      Actual: function

Pass: mySameFish["getOneVector"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["getOneVector"].length
      Actual: 0

Pass: mySameFish's property
      Actual: marshalIFish

Pass: typeof mySameFish["marshalIFish"]
      Actual: function

Pass: mySameFish["marshalIFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalIFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalIFishToFish

Pass: typeof mySameFish["marshalIFishToFish"]
      Actual: function

Pass: mySameFish["marshalIFishToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalIFishToFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalILikeToSwim

Pass: typeof mySameFish["marshalILikeToSwim"]
      Actual: function

Pass: mySameFish["marshalILikeToSwim"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalILikeToSwim"].length
      Actual: 1

Pass: mySameFish's property
      Actual: marshalILikeToSwimToFish

Pass: typeof mySameFish["marshalILikeToSwimToFish"]
      Actual: function

Pass: mySameFish["marshalILikeToSwimToFish"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["marshalILikeToSwimToFish"].length
      Actual: 1

Pass: mySameFish's property
      Actual: name

Pass: typeof mySameFish["name"]
      Actual: string

Pass: mySameFish's property
      Actual: setNumFins

Pass: typeof mySameFish["setNumFins"]
      Actual: function

Pass: mySameFish["setNumFins"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameFish["setNumFins"].length
      Actual: 1

Pass: mySameFish's property
      Actual: singTheSwimmingSong

Pass: typeof mySameFish["singTheSwimmingSong"]
      Actual: function

Pass: mySameFish["singTheSwimmingSong"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["singTheSwimmingSong"].length
      Actual: 0

Pass: mySameFish's property
      Actual: toString

Pass: typeof mySameFish["toString"]
      Actual: function

Pass: mySameFish["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameFish["toString"].length
      Actual: 0

Pass: number of properties of mySameFish
      Actual: 22

Pass: mySameFish.name
      Actual: Nemo

Comment: Equality Tests on myFish and mySameFish
Pass: Animals.Animal.myLikeToSwim == mySameFish
      Actual: true

Pass: Animals.Animal.myLikeToSwim === mySameFish
      Actual: true

Comment: Lifetime tests
Comment: Set my Fish to null
Comment: Perform gc
Comment: Verifying that mySameFish still has the expandos
Pass: mySameFish.name
      Actual: Nemo

PASS [Test 8: DelegateWithSimpleRequiredInterface]
=================================================

=================================================
Starting [Test 9: DelegateWithParameterizedInterface]
Comment: Get first vector as myVector
Comment: typeof myVector: object
Comment: Dump of properties : 
    var myVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['5', 'number'],
        ['6', 'number'],
        ['7', 'number'],
        ['8', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof myVector
      Actual: object

Pass: myVector's property
      Actual: 0

Pass: typeof myVector["0"]
      Actual: number

Pass: myVector["0"]
      Actual: 1

Pass: myVector's property
      Actual: 1

Pass: typeof myVector["1"]
      Actual: number

Pass: myVector["1"]
      Actual: 2

Pass: myVector's property
      Actual: 2

Pass: typeof myVector["2"]
      Actual: number

Pass: myVector["2"]
      Actual: 3

Pass: myVector's property
      Actual: 3

Pass: typeof myVector["3"]
      Actual: number

Pass: myVector["3"]
      Actual: 4

Pass: myVector's property
      Actual: 4

Pass: typeof myVector["4"]
      Actual: number

Pass: myVector["4"]
      Actual: 5

Pass: myVector's property
      Actual: 5

Pass: typeof myVector["5"]
      Actual: number

Pass: myVector["5"]
      Actual: 6

Pass: myVector's property
      Actual: 6

Pass: typeof myVector["6"]
      Actual: number

Pass: myVector["6"]
      Actual: 7

Pass: myVector's property
      Actual: 7

Pass: typeof myVector["7"]
      Actual: number

Pass: myVector["7"]
      Actual: 8

Pass: myVector's property
      Actual: 8

Pass: typeof myVector["8"]
      Actual: number

Pass: myVector["8"]
      Actual: 9

Pass: myVector's property
      Actual: append

Pass: typeof myVector["append"]
      Actual: function

Pass: myVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["append"].length
      Actual: 1

Pass: myVector's property
      Actual: clear

Pass: typeof myVector["clear"]
      Actual: function

Pass: myVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["clear"].length
      Actual: 0

Pass: myVector's property
      Actual: first

Pass: typeof myVector["first"]
      Actual: function

Pass: myVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["first"].length
      Actual: 0

Pass: myVector's property
      Actual: getAt

Pass: typeof myVector["getAt"]
      Actual: function

Pass: myVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["getAt"].length
      Actual: 1

Pass: myVector's property
      Actual: getMany

Pass: typeof myVector["getMany"]
      Actual: function

Pass: myVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector["getMany"].length
      Actual: 2

Pass: myVector's property
      Actual: getView

Pass: typeof myVector["getView"]
      Actual: function

Pass: myVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["getView"].length
      Actual: 0

Pass: myVector's property
      Actual: indexOf

Pass: typeof myVector["indexOf"]
      Actual: function

Pass: myVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["indexOf"].length
      Actual: 1

Pass: myVector's property
      Actual: insertAt

Pass: typeof myVector["insertAt"]
      Actual: function

Pass: myVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector["insertAt"].length
      Actual: 2

Pass: myVector's property
      Actual: removeAt

Pass: typeof myVector["removeAt"]
      Actual: function

Pass: myVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["removeAt"].length
      Actual: 1

Pass: myVector's property
      Actual: removeAtEnd

Pass: typeof myVector["removeAtEnd"]
      Actual: function

Pass: myVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["removeAtEnd"].length
      Actual: 0

Pass: myVector's property
      Actual: replaceAll

Pass: typeof myVector["replaceAll"]
      Actual: function

Pass: myVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["replaceAll"].length
      Actual: 1

Pass: myVector's property
      Actual: setAt

Pass: typeof myVector["setAt"]
      Actual: function

Pass: myVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector["setAt"].length
      Actual: 2

Pass: myVector's property
      Actual: size

Pass: typeof myVector["size"]
      Actual: number

Pass: number of properties of myVector
      Actual: 22

Comment: Pass myVector to Method that keeps vector into the ABI
Comment: Call the delegate with the vector : returning null
Comment: *** myDelegate: Invoke
Comment: typeof delegateVector: object
Comment: Dump of properties : 
    var delegateVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['5', 'number'],
        ['6', 'number'],
        ['7', 'number'],
        ['8', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof delegateVector
      Actual: object

Pass: delegateVector's property
      Actual: 0

Pass: typeof delegateVector["0"]
      Actual: number

Pass: delegateVector["0"]
      Actual: 1

Pass: delegateVector's property
      Actual: 1

Pass: typeof delegateVector["1"]
      Actual: number

Pass: delegateVector["1"]
      Actual: 2

Pass: delegateVector's property
      Actual: 2

Pass: typeof delegateVector["2"]
      Actual: number

Pass: delegateVector["2"]
      Actual: 3

Pass: delegateVector's property
      Actual: 3

Pass: typeof delegateVector["3"]
      Actual: number

Pass: delegateVector["3"]
      Actual: 4

Pass: delegateVector's property
      Actual: 4

Pass: typeof delegateVector["4"]
      Actual: number

Pass: delegateVector["4"]
      Actual: 5

Pass: delegateVector's property
      Actual: 5

Pass: typeof delegateVector["5"]
      Actual: number

Pass: delegateVector["5"]
      Actual: 6

Pass: delegateVector's property
      Actual: 6

Pass: typeof delegateVector["6"]
      Actual: number

Pass: delegateVector["6"]
      Actual: 7

Pass: delegateVector's property
      Actual: 7

Pass: typeof delegateVector["7"]
      Actual: number

Pass: delegateVector["7"]
      Actual: 8

Pass: delegateVector's property
      Actual: 8

Pass: typeof delegateVector["8"]
      Actual: number

Pass: delegateVector["8"]
      Actual: 9

Pass: delegateVector's property
      Actual: append

Pass: typeof delegateVector["append"]
      Actual: function

Pass: delegateVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["append"].length
      Actual: 1

Pass: delegateVector's property
      Actual: clear

Pass: typeof delegateVector["clear"]
      Actual: function

Pass: delegateVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["clear"].length
      Actual: 0

Pass: delegateVector's property
      Actual: first

Pass: typeof delegateVector["first"]
      Actual: function

Pass: delegateVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["first"].length
      Actual: 0

Pass: delegateVector's property
      Actual: getAt

Pass: typeof delegateVector["getAt"]
      Actual: function

Pass: delegateVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["getAt"].length
      Actual: 1

Pass: delegateVector's property
      Actual: getMany

Pass: typeof delegateVector["getMany"]
      Actual: function

Pass: delegateVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["getMany"].length
      Actual: 2

Pass: delegateVector's property
      Actual: getView

Pass: typeof delegateVector["getView"]
      Actual: function

Pass: delegateVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["getView"].length
      Actual: 0

Pass: delegateVector's property
      Actual: indexOf

Pass: typeof delegateVector["indexOf"]
      Actual: function

Pass: delegateVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["indexOf"].length
      Actual: 1

Pass: delegateVector's property
      Actual: insertAt

Pass: typeof delegateVector["insertAt"]
      Actual: function

Pass: delegateVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["insertAt"].length
      Actual: 2

Pass: delegateVector's property
      Actual: removeAt

Pass: typeof delegateVector["removeAt"]
      Actual: function

Pass: delegateVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["removeAt"].length
      Actual: 1

Pass: delegateVector's property
      Actual: removeAtEnd

Pass: typeof delegateVector["removeAtEnd"]
      Actual: function

Pass: delegateVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["removeAtEnd"].length
      Actual: 0

Pass: delegateVector's property
      Actual: replaceAll

Pass: typeof delegateVector["replaceAll"]
      Actual: function

Pass: delegateVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["replaceAll"].length
      Actual: 1

Pass: delegateVector's property
      Actual: setAt

Pass: typeof delegateVector["setAt"]
      Actual: function

Pass: delegateVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["setAt"].length
      Actual: 2

Pass: delegateVector's property
      Actual: size

Pass: typeof delegateVector["size"]
      Actual: number

Pass: number of properties of delegateVector
      Actual: 22

Comment: Equality Tests on myVector and delegateVector
Pass: myVector == delegateVector
      Actual: true

Pass: myVector === delegateVector
      Actual: true

Comment: Lifetime tests
Comment: Set my Vector to null
Comment: Perform gc
Comment: Verifying that delegateVector still has the expandos
Pass: delegateVector.length
      Actual: 9

Comment: *** myDelegate: Exit
Pass: mySameVector
      Actual: null

Comment: Call the delegate with the vector: returning vector
Comment: *** myDelegate: Invoke
Comment: typeof delegateVector: object
Comment: Dump of properties : 
    var delegateVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['5', 'number'],
        ['6', 'number'],
        ['7', 'number'],
        ['8', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof delegateVector
      Actual: object

Pass: delegateVector's property
      Actual: 0

Pass: typeof delegateVector["0"]
      Actual: number

Pass: delegateVector["0"]
      Actual: 1

Pass: delegateVector's property
      Actual: 1

Pass: typeof delegateVector["1"]
      Actual: number

Pass: delegateVector["1"]
      Actual: 2

Pass: delegateVector's property
      Actual: 2

Pass: typeof delegateVector["2"]
      Actual: number

Pass: delegateVector["2"]
      Actual: 3

Pass: delegateVector's property
      Actual: 3

Pass: typeof delegateVector["3"]
      Actual: number

Pass: delegateVector["3"]
      Actual: 4

Pass: delegateVector's property
      Actual: 4

Pass: typeof delegateVector["4"]
      Actual: number

Pass: delegateVector["4"]
      Actual: 5

Pass: delegateVector's property
      Actual: 5

Pass: typeof delegateVector["5"]
      Actual: number

Pass: delegateVector["5"]
      Actual: 6

Pass: delegateVector's property
      Actual: 6

Pass: typeof delegateVector["6"]
      Actual: number

Pass: delegateVector["6"]
      Actual: 7

Pass: delegateVector's property
      Actual: 7

Pass: typeof delegateVector["7"]
      Actual: number

Pass: delegateVector["7"]
      Actual: 8

Pass: delegateVector's property
      Actual: 8

Pass: typeof delegateVector["8"]
      Actual: number

Pass: delegateVector["8"]
      Actual: 9

Pass: delegateVector's property
      Actual: append

Pass: typeof delegateVector["append"]
      Actual: function

Pass: delegateVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["append"].length
      Actual: 1

Pass: delegateVector's property
      Actual: clear

Pass: typeof delegateVector["clear"]
      Actual: function

Pass: delegateVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["clear"].length
      Actual: 0

Pass: delegateVector's property
      Actual: first

Pass: typeof delegateVector["first"]
      Actual: function

Pass: delegateVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["first"].length
      Actual: 0

Pass: delegateVector's property
      Actual: getAt

Pass: typeof delegateVector["getAt"]
      Actual: function

Pass: delegateVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["getAt"].length
      Actual: 1

Pass: delegateVector's property
      Actual: getMany

Pass: typeof delegateVector["getMany"]
      Actual: function

Pass: delegateVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["getMany"].length
      Actual: 2

Pass: delegateVector's property
      Actual: getView

Pass: typeof delegateVector["getView"]
      Actual: function

Pass: delegateVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["getView"].length
      Actual: 0

Pass: delegateVector's property
      Actual: indexOf

Pass: typeof delegateVector["indexOf"]
      Actual: function

Pass: delegateVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["indexOf"].length
      Actual: 1

Pass: delegateVector's property
      Actual: insertAt

Pass: typeof delegateVector["insertAt"]
      Actual: function

Pass: delegateVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["insertAt"].length
      Actual: 2

Pass: delegateVector's property
      Actual: removeAt

Pass: typeof delegateVector["removeAt"]
      Actual: function

Pass: delegateVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["removeAt"].length
      Actual: 1

Pass: delegateVector's property
      Actual: removeAtEnd

Pass: typeof delegateVector["removeAtEnd"]
      Actual: function

Pass: delegateVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["removeAtEnd"].length
      Actual: 0

Pass: delegateVector's property
      Actual: replaceAll

Pass: typeof delegateVector["replaceAll"]
      Actual: function

Pass: delegateVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["replaceAll"].length
      Actual: 1

Pass: delegateVector's property
      Actual: setAt

Pass: typeof delegateVector["setAt"]
      Actual: function

Pass: delegateVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["setAt"].length
      Actual: 2

Pass: delegateVector's property
      Actual: size

Pass: typeof delegateVector["size"]
      Actual: number

Pass: number of properties of delegateVector
      Actual: 22

Comment: Equality Tests on myVector and delegateVector
Pass: myVector == delegateVector
      Actual: true

Pass: myVector === delegateVector
      Actual: true

Comment: Lifetime tests
Comment: Set my Vector to null
Comment: Perform gc
Comment: Verifying that delegateVector still has the expandos
Pass: delegateVector.length
      Actual: 9

Comment: *** myDelegate: Exit
Comment: typeof mySameVector: object
Comment: Dump of properties : 
    var mySameVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['5', 'number'],
        ['6', 'number'],
        ['7', 'number'],
        ['8', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof mySameVector
      Actual: object

Pass: mySameVector's property
      Actual: 0

Pass: typeof mySameVector["0"]
      Actual: number

Pass: mySameVector["0"]
      Actual: 1

Pass: mySameVector's property
      Actual: 1

Pass: typeof mySameVector["1"]
      Actual: number

Pass: mySameVector["1"]
      Actual: 2

Pass: mySameVector's property
      Actual: 2

Pass: typeof mySameVector["2"]
      Actual: number

Pass: mySameVector["2"]
      Actual: 3

Pass: mySameVector's property
      Actual: 3

Pass: typeof mySameVector["3"]
      Actual: number

Pass: mySameVector["3"]
      Actual: 4

Pass: mySameVector's property
      Actual: 4

Pass: typeof mySameVector["4"]
      Actual: number

Pass: mySameVector["4"]
      Actual: 5

Pass: mySameVector's property
      Actual: 5

Pass: typeof mySameVector["5"]
      Actual: number

Pass: mySameVector["5"]
      Actual: 6

Pass: mySameVector's property
      Actual: 6

Pass: typeof mySameVector["6"]
      Actual: number

Pass: mySameVector["6"]
      Actual: 7

Pass: mySameVector's property
      Actual: 7

Pass: typeof mySameVector["7"]
      Actual: number

Pass: mySameVector["7"]
      Actual: 8

Pass: mySameVector's property
      Actual: 8

Pass: typeof mySameVector["8"]
      Actual: number

Pass: mySameVector["8"]
      Actual: 9

Pass: mySameVector's property
      Actual: append

Pass: typeof mySameVector["append"]
      Actual: function

Pass: mySameVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["append"].length
      Actual: 1

Pass: mySameVector's property
      Actual: clear

Pass: typeof mySameVector["clear"]
      Actual: function

Pass: mySameVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["clear"].length
      Actual: 0

Pass: mySameVector's property
      Actual: first

Pass: typeof mySameVector["first"]
      Actual: function

Pass: mySameVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["first"].length
      Actual: 0

Pass: mySameVector's property
      Actual: getAt

Pass: typeof mySameVector["getAt"]
      Actual: function

Pass: mySameVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["getAt"].length
      Actual: 1

Pass: mySameVector's property
      Actual: getMany

Pass: typeof mySameVector["getMany"]
      Actual: function

Pass: mySameVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySameVector["getMany"].length
      Actual: 2

Pass: mySameVector's property
      Actual: getView

Pass: typeof mySameVector["getView"]
      Actual: function

Pass: mySameVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["getView"].length
      Actual: 0

Pass: mySameVector's property
      Actual: indexOf

Pass: typeof mySameVector["indexOf"]
      Actual: function

Pass: mySameVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["indexOf"].length
      Actual: 1

Pass: mySameVector's property
      Actual: insertAt

Pass: typeof mySameVector["insertAt"]
      Actual: function

Pass: mySameVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySameVector["insertAt"].length
      Actual: 2

Pass: mySameVector's property
      Actual: removeAt

Pass: typeof mySameVector["removeAt"]
      Actual: function

Pass: mySameVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["removeAt"].length
      Actual: 1

Pass: mySameVector's property
      Actual: removeAtEnd

Pass: typeof mySameVector["removeAtEnd"]
      Actual: function

Pass: mySameVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["removeAtEnd"].length
      Actual: 0

Pass: mySameVector's property
      Actual: replaceAll

Pass: typeof mySameVector["replaceAll"]
      Actual: function

Pass: mySameVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["replaceAll"].length
      Actual: 1

Pass: mySameVector's property
      Actual: setAt

Pass: typeof mySameVector["setAt"]
      Actual: function

Pass: mySameVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySameVector["setAt"].length
      Actual: 2

Pass: mySameVector's property
      Actual: size

Pass: typeof mySameVector["size"]
      Actual: number

Pass: number of properties of mySameVector
      Actual: 22

Comment: Equality tests on myVector and mySameVector
Pass: myAnimal.myVector == mySameVector
      Actual: true

Pass: myAnimal.myVector === mySameVector
      Actual: true

Comment: Lifetime tests
Comment: Set myVector to null
Comment: Perform gc
Comment: Verifying that mySameVector still has the expandos
Pass: mySameVector.length
      Actual: 9

PASS [Test 9: DelegateWithParameterizedInterface]
=================================================

=================================================
Starting [Test 10: DelegateWithParameterizedRequiredInterface]
Comment: Get first vector as myVector
Comment: typeof myVector: object
Comment: Dump of properties : 
    var myVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['5', 'number'],
        ['6', 'number'],
        ['7', 'number'],
        ['8', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof myVector
      Actual: object

Pass: myVector's property
      Actual: 0

Pass: typeof myVector["0"]
      Actual: number

Pass: myVector["0"]
      Actual: 1

Pass: myVector's property
      Actual: 1

Pass: typeof myVector["1"]
      Actual: number

Pass: myVector["1"]
      Actual: 2

Pass: myVector's property
      Actual: 2

Pass: typeof myVector["2"]
      Actual: number

Pass: myVector["2"]
      Actual: 3

Pass: myVector's property
      Actual: 3

Pass: typeof myVector["3"]
      Actual: number

Pass: myVector["3"]
      Actual: 4

Pass: myVector's property
      Actual: 4

Pass: typeof myVector["4"]
      Actual: number

Pass: myVector["4"]
      Actual: 5

Pass: myVector's property
      Actual: 5

Pass: typeof myVector["5"]
      Actual: number

Pass: myVector["5"]
      Actual: 6

Pass: myVector's property
      Actual: 6

Pass: typeof myVector["6"]
      Actual: number

Pass: myVector["6"]
      Actual: 7

Pass: myVector's property
      Actual: 7

Pass: typeof myVector["7"]
      Actual: number

Pass: myVector["7"]
      Actual: 8

Pass: myVector's property
      Actual: 8

Pass: typeof myVector["8"]
      Actual: number

Pass: myVector["8"]
      Actual: 9

Pass: myVector's property
      Actual: append

Pass: typeof myVector["append"]
      Actual: function

Pass: myVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["append"].length
      Actual: 1

Pass: myVector's property
      Actual: clear

Pass: typeof myVector["clear"]
      Actual: function

Pass: myVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["clear"].length
      Actual: 0

Pass: myVector's property
      Actual: first

Pass: typeof myVector["first"]
      Actual: function

Pass: myVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["first"].length
      Actual: 0

Pass: myVector's property
      Actual: getAt

Pass: typeof myVector["getAt"]
      Actual: function

Pass: myVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["getAt"].length
      Actual: 1

Pass: myVector's property
      Actual: getMany

Pass: typeof myVector["getMany"]
      Actual: function

Pass: myVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector["getMany"].length
      Actual: 2

Pass: myVector's property
      Actual: getView

Pass: typeof myVector["getView"]
      Actual: function

Pass: myVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["getView"].length
      Actual: 0

Pass: myVector's property
      Actual: indexOf

Pass: typeof myVector["indexOf"]
      Actual: function

Pass: myVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["indexOf"].length
      Actual: 1

Pass: myVector's property
      Actual: insertAt

Pass: typeof myVector["insertAt"]
      Actual: function

Pass: myVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector["insertAt"].length
      Actual: 2

Pass: myVector's property
      Actual: removeAt

Pass: typeof myVector["removeAt"]
      Actual: function

Pass: myVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["removeAt"].length
      Actual: 1

Pass: myVector's property
      Actual: removeAtEnd

Pass: typeof myVector["removeAtEnd"]
      Actual: function

Pass: myVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["removeAtEnd"].length
      Actual: 0

Pass: myVector's property
      Actual: replaceAll

Pass: typeof myVector["replaceAll"]
      Actual: function

Pass: myVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["replaceAll"].length
      Actual: 1

Pass: myVector's property
      Actual: setAt

Pass: typeof myVector["setAt"]
      Actual: function

Pass: myVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector["setAt"].length
      Actual: 2

Pass: myVector's property
      Actual: size

Pass: typeof myVector["size"]
      Actual: number

Pass: number of properties of myVector
      Actual: 22

Comment: Pass myVector to Method that keeps vector into the ABI
Comment: Call the delegate with the vector : returning null
Comment: *** myDelegate: Invoke
Comment: typeof delegateVector: object
Comment: Dump of properties : 
    var delegateVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['5', 'number'],
        ['6', 'number'],
        ['7', 'number'],
        ['8', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof delegateVector
      Actual: object

Pass: delegateVector's property
      Actual: 0

Pass: typeof delegateVector["0"]
      Actual: number

Pass: delegateVector["0"]
      Actual: 1

Pass: delegateVector's property
      Actual: 1

Pass: typeof delegateVector["1"]
      Actual: number

Pass: delegateVector["1"]
      Actual: 2

Pass: delegateVector's property
      Actual: 2

Pass: typeof delegateVector["2"]
      Actual: number

Pass: delegateVector["2"]
      Actual: 3

Pass: delegateVector's property
      Actual: 3

Pass: typeof delegateVector["3"]
      Actual: number

Pass: delegateVector["3"]
      Actual: 4

Pass: delegateVector's property
      Actual: 4

Pass: typeof delegateVector["4"]
      Actual: number

Pass: delegateVector["4"]
      Actual: 5

Pass: delegateVector's property
      Actual: 5

Pass: typeof delegateVector["5"]
      Actual: number

Pass: delegateVector["5"]
      Actual: 6

Pass: delegateVector's property
      Actual: 6

Pass: typeof delegateVector["6"]
      Actual: number

Pass: delegateVector["6"]
      Actual: 7

Pass: delegateVector's property
      Actual: 7

Pass: typeof delegateVector["7"]
      Actual: number

Pass: delegateVector["7"]
      Actual: 8

Pass: delegateVector's property
      Actual: 8

Pass: typeof delegateVector["8"]
      Actual: number

Pass: delegateVector["8"]
      Actual: 9

Pass: delegateVector's property
      Actual: append

Pass: typeof delegateVector["append"]
      Actual: function

Pass: delegateVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["append"].length
      Actual: 1

Pass: delegateVector's property
      Actual: clear

Pass: typeof delegateVector["clear"]
      Actual: function

Pass: delegateVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["clear"].length
      Actual: 0

Pass: delegateVector's property
      Actual: first

Pass: typeof delegateVector["first"]
      Actual: function

Pass: delegateVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["first"].length
      Actual: 0

Pass: delegateVector's property
      Actual: getAt

Pass: typeof delegateVector["getAt"]
      Actual: function

Pass: delegateVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["getAt"].length
      Actual: 1

Pass: delegateVector's property
      Actual: getMany

Pass: typeof delegateVector["getMany"]
      Actual: function

Pass: delegateVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["getMany"].length
      Actual: 2

Pass: delegateVector's property
      Actual: getView

Pass: typeof delegateVector["getView"]
      Actual: function

Pass: delegateVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["getView"].length
      Actual: 0

Pass: delegateVector's property
      Actual: indexOf

Pass: typeof delegateVector["indexOf"]
      Actual: function

Pass: delegateVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["indexOf"].length
      Actual: 1

Pass: delegateVector's property
      Actual: insertAt

Pass: typeof delegateVector["insertAt"]
      Actual: function

Pass: delegateVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["insertAt"].length
      Actual: 2

Pass: delegateVector's property
      Actual: removeAt

Pass: typeof delegateVector["removeAt"]
      Actual: function

Pass: delegateVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["removeAt"].length
      Actual: 1

Pass: delegateVector's property
      Actual: removeAtEnd

Pass: typeof delegateVector["removeAtEnd"]
      Actual: function

Pass: delegateVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["removeAtEnd"].length
      Actual: 0

Pass: delegateVector's property
      Actual: replaceAll

Pass: typeof delegateVector["replaceAll"]
      Actual: function

Pass: delegateVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["replaceAll"].length
      Actual: 1

Pass: delegateVector's property
      Actual: setAt

Pass: typeof delegateVector["setAt"]
      Actual: function

Pass: delegateVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["setAt"].length
      Actual: 2

Pass: delegateVector's property
      Actual: size

Pass: typeof delegateVector["size"]
      Actual: number

Pass: number of properties of delegateVector
      Actual: 22

Comment: Equality Tests on myVector and delegateVector
Pass: myVector == delegateVector
      Actual: true

Pass: myVector === delegateVector
      Actual: true

Comment: Lifetime tests
Comment: Set my Vector to null
Comment: Perform gc
Comment: Verifying that delegateVector still has the expandos
Pass: delegateVector.length
      Actual: 9

Comment: *** myDelegate: Exit
Pass: mySameVector
      Actual: null

Comment: Call the delegate with the vector: returning vector
Comment: *** myDelegate: Invoke
Comment: typeof delegateVector: object
Comment: Dump of properties : 
    var delegateVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['5', 'number'],
        ['6', 'number'],
        ['7', 'number'],
        ['8', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof delegateVector
      Actual: object

Pass: delegateVector's property
      Actual: 0

Pass: typeof delegateVector["0"]
      Actual: number

Pass: delegateVector["0"]
      Actual: 1

Pass: delegateVector's property
      Actual: 1

Pass: typeof delegateVector["1"]
      Actual: number

Pass: delegateVector["1"]
      Actual: 2

Pass: delegateVector's property
      Actual: 2

Pass: typeof delegateVector["2"]
      Actual: number

Pass: delegateVector["2"]
      Actual: 3

Pass: delegateVector's property
      Actual: 3

Pass: typeof delegateVector["3"]
      Actual: number

Pass: delegateVector["3"]
      Actual: 4

Pass: delegateVector's property
      Actual: 4

Pass: typeof delegateVector["4"]
      Actual: number

Pass: delegateVector["4"]
      Actual: 5

Pass: delegateVector's property
      Actual: 5

Pass: typeof delegateVector["5"]
      Actual: number

Pass: delegateVector["5"]
      Actual: 6

Pass: delegateVector's property
      Actual: 6

Pass: typeof delegateVector["6"]
      Actual: number

Pass: delegateVector["6"]
      Actual: 7

Pass: delegateVector's property
      Actual: 7

Pass: typeof delegateVector["7"]
      Actual: number

Pass: delegateVector["7"]
      Actual: 8

Pass: delegateVector's property
      Actual: 8

Pass: typeof delegateVector["8"]
      Actual: number

Pass: delegateVector["8"]
      Actual: 9

Pass: delegateVector's property
      Actual: append

Pass: typeof delegateVector["append"]
      Actual: function

Pass: delegateVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["append"].length
      Actual: 1

Pass: delegateVector's property
      Actual: clear

Pass: typeof delegateVector["clear"]
      Actual: function

Pass: delegateVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["clear"].length
      Actual: 0

Pass: delegateVector's property
      Actual: first

Pass: typeof delegateVector["first"]
      Actual: function

Pass: delegateVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["first"].length
      Actual: 0

Pass: delegateVector's property
      Actual: getAt

Pass: typeof delegateVector["getAt"]
      Actual: function

Pass: delegateVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["getAt"].length
      Actual: 1

Pass: delegateVector's property
      Actual: getMany

Pass: typeof delegateVector["getMany"]
      Actual: function

Pass: delegateVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["getMany"].length
      Actual: 2

Pass: delegateVector's property
      Actual: getView

Pass: typeof delegateVector["getView"]
      Actual: function

Pass: delegateVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["getView"].length
      Actual: 0

Pass: delegateVector's property
      Actual: indexOf

Pass: typeof delegateVector["indexOf"]
      Actual: function

Pass: delegateVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["indexOf"].length
      Actual: 1

Pass: delegateVector's property
      Actual: insertAt

Pass: typeof delegateVector["insertAt"]
      Actual: function

Pass: delegateVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["insertAt"].length
      Actual: 2

Pass: delegateVector's property
      Actual: removeAt

Pass: typeof delegateVector["removeAt"]
      Actual: function

Pass: delegateVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["removeAt"].length
      Actual: 1

Pass: delegateVector's property
      Actual: removeAtEnd

Pass: typeof delegateVector["removeAtEnd"]
      Actual: function

Pass: delegateVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["removeAtEnd"].length
      Actual: 0

Pass: delegateVector's property
      Actual: replaceAll

Pass: typeof delegateVector["replaceAll"]
      Actual: function

Pass: delegateVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["replaceAll"].length
      Actual: 1

Pass: delegateVector's property
      Actual: setAt

Pass: typeof delegateVector["setAt"]
      Actual: function

Pass: delegateVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["setAt"].length
      Actual: 2

Pass: delegateVector's property
      Actual: size

Pass: typeof delegateVector["size"]
      Actual: number

Pass: number of properties of delegateVector
      Actual: 22

Comment: Equality Tests on myVector and delegateVector
Pass: myVector == delegateVector
      Actual: true

Pass: myVector === delegateVector
      Actual: true

Comment: Lifetime tests
Comment: Set my Vector to null
Comment: Perform gc
Comment: Verifying that delegateVector still has the expandos
Pass: delegateVector.length
      Actual: 9

Comment: *** myDelegate: Exit
Comment: typeof mySameVector: object
Comment: Dump of properties : 
    var mySameVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['5', 'number'],
        ['6', 'number'],
        ['7', 'number'],
        ['8', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof mySameVector
      Actual: object

Pass: mySameVector's property
      Actual: 0

Pass: typeof mySameVector["0"]
      Actual: number

Pass: mySameVector["0"]
      Actual: 1

Pass: mySameVector's property
      Actual: 1

Pass: typeof mySameVector["1"]
      Actual: number

Pass: mySameVector["1"]
      Actual: 2

Pass: mySameVector's property
      Actual: 2

Pass: typeof mySameVector["2"]
      Actual: number

Pass: mySameVector["2"]
      Actual: 3

Pass: mySameVector's property
      Actual: 3

Pass: typeof mySameVector["3"]
      Actual: number

Pass: mySameVector["3"]
      Actual: 4

Pass: mySameVector's property
      Actual: 4

Pass: typeof mySameVector["4"]
      Actual: number

Pass: mySameVector["4"]
      Actual: 5

Pass: mySameVector's property
      Actual: 5

Pass: typeof mySameVector["5"]
      Actual: number

Pass: mySameVector["5"]
      Actual: 6

Pass: mySameVector's property
      Actual: 6

Pass: typeof mySameVector["6"]
      Actual: number

Pass: mySameVector["6"]
      Actual: 7

Pass: mySameVector's property
      Actual: 7

Pass: typeof mySameVector["7"]
      Actual: number

Pass: mySameVector["7"]
      Actual: 8

Pass: mySameVector's property
      Actual: 8

Pass: typeof mySameVector["8"]
      Actual: number

Pass: mySameVector["8"]
      Actual: 9

Pass: mySameVector's property
      Actual: append

Pass: typeof mySameVector["append"]
      Actual: function

Pass: mySameVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["append"].length
      Actual: 1

Pass: mySameVector's property
      Actual: clear

Pass: typeof mySameVector["clear"]
      Actual: function

Pass: mySameVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["clear"].length
      Actual: 0

Pass: mySameVector's property
      Actual: first

Pass: typeof mySameVector["first"]
      Actual: function

Pass: mySameVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["first"].length
      Actual: 0

Pass: mySameVector's property
      Actual: getAt

Pass: typeof mySameVector["getAt"]
      Actual: function

Pass: mySameVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["getAt"].length
      Actual: 1

Pass: mySameVector's property
      Actual: getMany

Pass: typeof mySameVector["getMany"]
      Actual: function

Pass: mySameVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySameVector["getMany"].length
      Actual: 2

Pass: mySameVector's property
      Actual: getView

Pass: typeof mySameVector["getView"]
      Actual: function

Pass: mySameVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["getView"].length
      Actual: 0

Pass: mySameVector's property
      Actual: indexOf

Pass: typeof mySameVector["indexOf"]
      Actual: function

Pass: mySameVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["indexOf"].length
      Actual: 1

Pass: mySameVector's property
      Actual: insertAt

Pass: typeof mySameVector["insertAt"]
      Actual: function

Pass: mySameVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySameVector["insertAt"].length
      Actual: 2

Pass: mySameVector's property
      Actual: removeAt

Pass: typeof mySameVector["removeAt"]
      Actual: function

Pass: mySameVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["removeAt"].length
      Actual: 1

Pass: mySameVector's property
      Actual: removeAtEnd

Pass: typeof mySameVector["removeAtEnd"]
      Actual: function

Pass: mySameVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["removeAtEnd"].length
      Actual: 0

Pass: mySameVector's property
      Actual: replaceAll

Pass: typeof mySameVector["replaceAll"]
      Actual: function

Pass: mySameVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["replaceAll"].length
      Actual: 1

Pass: mySameVector's property
      Actual: setAt

Pass: typeof mySameVector["setAt"]
      Actual: function

Pass: mySameVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySameVector["setAt"].length
      Actual: 2

Pass: mySameVector's property
      Actual: size

Pass: typeof mySameVector["size"]
      Actual: number

Pass: number of properties of mySameVector
      Actual: 22

Comment: Equality tests on myVector and mySameVector
Pass: myAnimal.myIterable == mySameVector
      Actual: true

Pass: myAnimal.myIterable === mySameVector
      Actual: true

Comment: Lifetime tests
Comment: Set myVector to null
Comment: Perform gc
Comment: Verifying that mySameVector still has the expandos
Pass: mySameVector.length
      Actual: 9

PASS [Test 10: DelegateWithParameterizedRequiredInterface]
=================================================

=================================================
Starting [Test 11: TestWithDino]
Comment: Create myDino
Comment: typeof myDino: object
Comment: Dump of properties : 
    var myDinoMembers = [
        ['Animals.IDino.hasTeeth', 'function', 0],
        ['Animals.IExtinct.hasTeeth', 'function', 0],
        ['canRoar', 'function', 0],
        ['height', 'number'],
        ['isExtinct', 'function', 0],
        ['roar', 'function', 1],
        ['toString', 'function', 0],
    ];
Pass: typeof myDino
      Actual: object

Pass: myDino's property
      Actual: Animals.IDino.hasTeeth

Pass: typeof myDino["Animals.IDino.hasTeeth"]
      Actual: function

Pass: myDino["Animals.IDino.hasTeeth"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myDino["Animals.IDino.hasTeeth"].length
      Actual: 0

Pass: myDino's property
      Actual: Animals.IExtinct.hasTeeth

Pass: typeof myDino["Animals.IExtinct.hasTeeth"]
      Actual: function

Pass: myDino["Animals.IExtinct.hasTeeth"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myDino["Animals.IExtinct.hasTeeth"].length
      Actual: 0

Pass: myDino's property
      Actual: canRoar

Pass: typeof myDino["canRoar"]
      Actual: function

Pass: myDino["canRoar"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myDino["canRoar"].length
      Actual: 0

Pass: myDino's property
      Actual: height

Pass: typeof myDino["height"]
      Actual: number

Pass: myDino's property
      Actual: isExtinct

Pass: typeof myDino["isExtinct"]
      Actual: function

Pass: myDino["isExtinct"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myDino["isExtinct"].length
      Actual: 0

Pass: myDino's property
      Actual: roar

Pass: typeof myDino["roar"]
      Actual: function

Pass: myDino["roar"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myDino["roar"].length
      Actual: 1

Pass: myDino's property
      Actual: toString

Pass: typeof myDino["toString"]
      Actual: function

Pass: myDino["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myDino["toString"].length
      Actual: 0

Pass: number of properties of myDino
      Actual: 7

Comment: Get back same dino
Comment: typeof mySameDino: object
Comment: Dump of properties : 
    var mySameDinoMembers = [
        ['Animals.IDino.hasTeeth', 'function', 0],
        ['Animals.IExtinct.hasTeeth', 'function', 0],
        ['canRoar', 'function', 0],
        ['height', 'number'],
        ['isExtinct', 'function', 0],
        ['roar', 'function', 1],
        ['toString', 'function', 0],
    ];
Pass: typeof mySameDino
      Actual: object

Pass: mySameDino's property
      Actual: Animals.IDino.hasTeeth

Pass: typeof mySameDino["Animals.IDino.hasTeeth"]
      Actual: function

Pass: mySameDino["Animals.IDino.hasTeeth"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameDino["Animals.IDino.hasTeeth"].length
      Actual: 0

Pass: mySameDino's property
      Actual: Animals.IExtinct.hasTeeth

Pass: typeof mySameDino["Animals.IExtinct.hasTeeth"]
      Actual: function

Pass: mySameDino["Animals.IExtinct.hasTeeth"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameDino["Animals.IExtinct.hasTeeth"].length
      Actual: 0

Pass: mySameDino's property
      Actual: canRoar

Pass: typeof mySameDino["canRoar"]
      Actual: function

Pass: mySameDino["canRoar"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameDino["canRoar"].length
      Actual: 0

Pass: mySameDino's property
      Actual: height

Pass: typeof mySameDino["height"]
      Actual: number

Pass: mySameDino's property
      Actual: isExtinct

Pass: typeof mySameDino["isExtinct"]
      Actual: function

Pass: mySameDino["isExtinct"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameDino["isExtinct"].length
      Actual: 0

Pass: mySameDino's property
      Actual: roar

Pass: typeof mySameDino["roar"]
      Actual: function

Pass: mySameDino["roar"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameDino["roar"].length
      Actual: 1

Pass: mySameDino's property
      Actual: toString

Pass: typeof mySameDino["toString"]
      Actual: function

Pass: mySameDino["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameDino["toString"].length
      Actual: 0

Pass: number of properties of mySameDino
      Actual: 7

Comment: Equality tests
Pass: mySameDino == myDino
      Actual: true

Pass: mySameDino === myDino
      Actual: true

Comment: Set extinct and check the equality and expandos
Comment: typeof mySameDino: object
Comment: Dump of properties : 
    var mySameDinoMembers = [
        ['Animals.IDino.hasTeeth', 'function', 0],
        ['Animals.IExtinct.hasTeeth', 'function', 0],
        ['canRoar', 'function', 0],
        ['height', 'number'],
        ['isExtinct', 'function', 0],
        ['roar', 'function', 1],
        ['toString', 'function', 0],
    ];
Pass: typeof mySameDino
      Actual: object

Pass: mySameDino's property
      Actual: Animals.IDino.hasTeeth

Pass: typeof mySameDino["Animals.IDino.hasTeeth"]
      Actual: function

Pass: mySameDino["Animals.IDino.hasTeeth"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameDino["Animals.IDino.hasTeeth"].length
      Actual: 0

Pass: mySameDino's property
      Actual: Animals.IExtinct.hasTeeth

Pass: typeof mySameDino["Animals.IExtinct.hasTeeth"]
      Actual: function

Pass: mySameDino["Animals.IExtinct.hasTeeth"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameDino["Animals.IExtinct.hasTeeth"].length
      Actual: 0

Pass: mySameDino's property
      Actual: canRoar

Pass: typeof mySameDino["canRoar"]
      Actual: function

Pass: mySameDino["canRoar"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameDino["canRoar"].length
      Actual: 0

Pass: mySameDino's property
      Actual: height

Pass: typeof mySameDino["height"]
      Actual: number

Pass: mySameDino's property
      Actual: isExtinct

Pass: typeof mySameDino["isExtinct"]
      Actual: function

Pass: mySameDino["isExtinct"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameDino["isExtinct"].length
      Actual: 0

Pass: mySameDino's property
      Actual: roar

Pass: typeof mySameDino["roar"]
      Actual: function

Pass: mySameDino["roar"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameDino["roar"].length
      Actual: 1

Pass: mySameDino's property
      Actual: toString

Pass: typeof mySameDino["toString"]
      Actual: function

Pass: mySameDino["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameDino["toString"].length
      Actual: 0

Pass: number of properties of mySameDino
      Actual: 7

Pass: mySameDino == myDino
      Actual: true

Pass: mySameDino === myDino
      Actual: true

Comment: Keep only extinct and null out rest, perform gc
Comment: Call the delegate IExtinct
Comment: *** myDelegate : Invoke
Comment: typeof delegateExtinct: object
Comment: Dump of properties : 
    var delegateExtinctMembers = [
        ['Animals.IDino.hasTeeth', 'function', 0],
        ['Animals.IExtinct.hasTeeth', 'function', 0],
        ['canRoar', 'function', 0],
        ['height', 'number'],
        ['isExtinct', 'function', 0],
        ['roar', 'function', 1],
        ['toString', 'function', 0],
    ];
Pass: typeof delegateExtinct
      Actual: object

Pass: delegateExtinct's property
      Actual: Animals.IDino.hasTeeth

Pass: typeof delegateExtinct["Animals.IDino.hasTeeth"]
      Actual: function

Pass: delegateExtinct["Animals.IDino.hasTeeth"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateExtinct["Animals.IDino.hasTeeth"].length
      Actual: 0

Pass: delegateExtinct's property
      Actual: Animals.IExtinct.hasTeeth

Pass: typeof delegateExtinct["Animals.IExtinct.hasTeeth"]
      Actual: function

Pass: delegateExtinct["Animals.IExtinct.hasTeeth"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateExtinct["Animals.IExtinct.hasTeeth"].length
      Actual: 0

Pass: delegateExtinct's property
      Actual: canRoar

Pass: typeof delegateExtinct["canRoar"]
      Actual: function

Pass: delegateExtinct["canRoar"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateExtinct["canRoar"].length
      Actual: 0

Pass: delegateExtinct's property
      Actual: height

Pass: typeof delegateExtinct["height"]
      Actual: number

Pass: delegateExtinct's property
      Actual: isExtinct

Pass: typeof delegateExtinct["isExtinct"]
      Actual: function

Pass: delegateExtinct["isExtinct"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateExtinct["isExtinct"].length
      Actual: 0

Pass: delegateExtinct's property
      Actual: roar

Pass: typeof delegateExtinct["roar"]
      Actual: function

Pass: delegateExtinct["roar"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateExtinct["roar"].length
      Actual: 1

Pass: delegateExtinct's property
      Actual: toString

Pass: typeof delegateExtinct["toString"]
      Actual: function

Pass: delegateExtinct["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateExtinct["toString"].length
      Actual: 0

Pass: number of properties of delegateExtinct
      Actual: 7

Pass: delegateExtinct == Animals.Animal.myExtinct
      Actual: true

Pass: delegateExtinct === Animals.Animal.myExtinct
      Actual: true

Comment: *** myDelegate : Exit
PASS [Test 11: TestWithDino]
=================================================

=================================================
Starting [Test 12: RuntimeClassWithMultipleVectors]
Comment: Create MultipleIVector
Comment: typeof myMultipleIVector: object
Comment: Dump of properties : 
    var myMultipleIVectorMembers = [
        ['Windows.Foundation.Collections.IIterable`1<Animals.IAnimal>.first', 'function', 0],
        ['Windows.Foundation.Collections.IIterable`1<Int32>.first', 'function', 0],
        ['Windows.Foundation.Collections.IIterable`1<String>.first', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.append', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.clear', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getMany', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getView', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.indexOf', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.insertAt', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAt', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAtEnd', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.replaceAll', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.setAt', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.size', 'number'],
        ['Windows.Foundation.Collections.IVector`1<Int32>.append', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Int32>.clear', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<Int32>.getAt', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Int32>.getMany', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<Int32>.getView', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<Int32>.indexOf', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Int32>.insertAt', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<Int32>.removeAt', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Int32>.removeAtEnd', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<Int32>.replaceAll', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Int32>.setAt', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<Int32>.size', 'number'],
        ['Windows.Foundation.Collections.IVector`1<String>.append', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<String>.clear', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<String>.getAt', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<String>.getMany', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<String>.getView', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<String>.indexOf', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<String>.insertAt', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<String>.removeAt', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<String>.removeAtEnd', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<String>.replaceAll', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<String>.setAt', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<String>.size', 'number'],
        ['toString', 'function', 0],
    ];
Pass: typeof myMultipleIVector
      Actual: object

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IIterable`1<Animals.IAnimal>.first

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IIterable`1<Animals.IAnimal>.first"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IIterable`1<Animals.IAnimal>.first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IIterable`1<Animals.IAnimal>.first"].length
      Actual: 0

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IIterable`1<Int32>.first

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IIterable`1<Int32>.first"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IIterable`1<Int32>.first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IIterable`1<Int32>.first"].length
      Actual: 0

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IIterable`1<String>.first

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IIterable`1<String>.first"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IIterable`1<String>.first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IIterable`1<String>.first"].length
      Actual: 0

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.append

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.append"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.append"].length
      Actual: 1

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.clear

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.clear"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.clear"].length
      Actual: 0

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt"].length
      Actual: 1

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getMany

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getMany"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getMany"].length
      Actual: 2

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getView

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getView"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getView"].length
      Actual: 0

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.indexOf

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.indexOf"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.indexOf"].length
      Actual: 1

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.insertAt

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.insertAt"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.insertAt"].length
      Actual: 2

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAt

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAt"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAt"].length
      Actual: 1

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAtEnd

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAtEnd"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAtEnd"].length
      Actual: 0

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.replaceAll

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.replaceAll"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.replaceAll"].length
      Actual: 1

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.setAt

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.setAt"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.setAt"].length
      Actual: 2

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.size

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.size"]
      Actual: number

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.append

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.append"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.append"].length
      Actual: 1

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.clear

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.clear"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.clear"].length
      Actual: 0

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.getAt

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"].length
      Actual: 1

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.getMany

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getMany"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getMany"].length
      Actual: 2

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.getView

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getView"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getView"].length
      Actual: 0

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.indexOf

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.indexOf"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.indexOf"].length
      Actual: 1

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.insertAt

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.insertAt"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.insertAt"].length
      Actual: 2

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.removeAt

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.removeAt"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.removeAt"].length
      Actual: 1

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.removeAtEnd

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.removeAtEnd"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.removeAtEnd"].length
      Actual: 0

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.replaceAll

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.replaceAll"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.replaceAll"].length
      Actual: 1

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.setAt

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.setAt"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.setAt"].length
      Actual: 2

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.size

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.size"]
      Actual: number

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.append

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.append"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.append"].length
      Actual: 1

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.clear

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.clear"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.clear"].length
      Actual: 0

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.getAt

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.getAt"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.getAt"].length
      Actual: 1

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.getMany

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.getMany"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.getMany"].length
      Actual: 2

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.getView

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.getView"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.getView"].length
      Actual: 0

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.indexOf

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.indexOf"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.indexOf"].length
      Actual: 1

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.insertAt

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.insertAt"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.insertAt"].length
      Actual: 2

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.removeAt

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.removeAt"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.removeAt"].length
      Actual: 1

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.removeAtEnd

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.removeAtEnd"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.removeAtEnd"].length
      Actual: 0

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.replaceAll

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.replaceAll"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.replaceAll"].length
      Actual: 1

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.setAt

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.setAt"]
      Actual: function

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.setAt"].length
      Actual: 2

Pass: myMultipleIVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.size

Pass: typeof myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.size"]
      Actual: number

Pass: myMultipleIVector's property
      Actual: toString

Pass: typeof myMultipleIVector["toString"]
      Actual: function

Pass: myMultipleIVector["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myMultipleIVector["toString"].length
      Actual: 0

Pass: number of properties of myMultipleIVector
      Actual: 40

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](0)
      Actual: 1

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](1)
      Actual: 2

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](2)
      Actual: 3

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](3)
      Actual: 4

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](4)
      Actual: 5

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](5)
      Actual: 6

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](6)
      Actual: 7

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](7)
      Actual: 8

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](8)
      Actual: 9

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](0)
      Actual: String1

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](1)
      Actual: String2

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](2)
      Actual: String3

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](3)
      Actual: String4

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt"](0)GetGreeting()
      Actual: Animal1

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt"](1)GetGreeting()
      Actual: Animal2

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt"](2)GetGreeting()
      Actual: Animal3

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Int32>.size"]
      Actual: 9

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<String>.size"]
      Actual: 4

Pass: myMultipleIVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.size"]
      Actual: 3

Comment: Equality tests
Pass: mySameVector == myMultipleIVector
      Actual: true

Pass: mySameVector === myMultipleIVector
      Actual: true

Comment: Set as iterable and call the delegate
Comment: *** myDelegate: Invoke
Comment: typeof delegateVector: object
Comment: Dump of properties : 
    var delegateVectorMembers = [
        ['Windows.Foundation.Collections.IIterable`1<Animals.IAnimal>.first', 'function', 0],
        ['Windows.Foundation.Collections.IIterable`1<Int32>.first', 'function', 0],
        ['Windows.Foundation.Collections.IIterable`1<String>.first', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.append', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.clear', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getMany', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getView', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.indexOf', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.insertAt', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAt', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAtEnd', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.replaceAll', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.setAt', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.size', 'number'],
        ['Windows.Foundation.Collections.IVector`1<Int32>.append', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Int32>.clear', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<Int32>.getAt', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Int32>.getMany', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<Int32>.getView', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<Int32>.indexOf', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Int32>.insertAt', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<Int32>.removeAt', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Int32>.removeAtEnd', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<Int32>.replaceAll', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<Int32>.setAt', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<Int32>.size', 'number'],
        ['Windows.Foundation.Collections.IVector`1<String>.append', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<String>.clear', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<String>.getAt', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<String>.getMany', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<String>.getView', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<String>.indexOf', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<String>.insertAt', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<String>.removeAt', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<String>.removeAtEnd', 'function', 0],
        ['Windows.Foundation.Collections.IVector`1<String>.replaceAll', 'function', 1],
        ['Windows.Foundation.Collections.IVector`1<String>.setAt', 'function', 2],
        ['Windows.Foundation.Collections.IVector`1<String>.size', 'number'],
        ['toString', 'function', 0],
    ];
Pass: typeof delegateVector
      Actual: object

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IIterable`1<Animals.IAnimal>.first

Pass: typeof delegateVector["Windows.Foundation.Collections.IIterable`1<Animals.IAnimal>.first"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IIterable`1<Animals.IAnimal>.first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IIterable`1<Animals.IAnimal>.first"].length
      Actual: 0

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IIterable`1<Int32>.first

Pass: typeof delegateVector["Windows.Foundation.Collections.IIterable`1<Int32>.first"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IIterable`1<Int32>.first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IIterable`1<Int32>.first"].length
      Actual: 0

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IIterable`1<String>.first

Pass: typeof delegateVector["Windows.Foundation.Collections.IIterable`1<String>.first"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IIterable`1<String>.first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IIterable`1<String>.first"].length
      Actual: 0

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.append

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.append"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.append"].length
      Actual: 1

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.clear

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.clear"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.clear"].length
      Actual: 0

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt"].length
      Actual: 1

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getMany

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getMany"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getMany"].length
      Actual: 2

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getView

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getView"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getView"].length
      Actual: 0

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.indexOf

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.indexOf"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.indexOf"].length
      Actual: 1

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.insertAt

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.insertAt"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.insertAt"].length
      Actual: 2

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAt

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAt"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAt"].length
      Actual: 1

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAtEnd

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAtEnd"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.removeAtEnd"].length
      Actual: 0

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.replaceAll

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.replaceAll"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.replaceAll"].length
      Actual: 1

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.setAt

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.setAt"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.setAt"].length
      Actual: 2

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.size

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.size"]
      Actual: number

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.append

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.append"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.append"].length
      Actual: 1

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.clear

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.clear"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.clear"].length
      Actual: 0

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.getAt

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"].length
      Actual: 1

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.getMany

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getMany"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getMany"].length
      Actual: 2

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.getView

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getView"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getView"].length
      Actual: 0

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.indexOf

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.indexOf"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.indexOf"].length
      Actual: 1

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.insertAt

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.insertAt"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.insertAt"].length
      Actual: 2

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.removeAt

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.removeAt"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.removeAt"].length
      Actual: 1

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.removeAtEnd

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.removeAtEnd"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.removeAtEnd"].length
      Actual: 0

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.replaceAll

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.replaceAll"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.replaceAll"].length
      Actual: 1

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.setAt

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.setAt"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.setAt"].length
      Actual: 2

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<Int32>.size

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.size"]
      Actual: number

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.append

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<String>.append"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.append"].length
      Actual: 1

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.clear

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<String>.clear"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.clear"].length
      Actual: 0

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.getAt

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<String>.getAt"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.getAt"].length
      Actual: 1

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.getMany

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<String>.getMany"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.getMany"].length
      Actual: 2

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.getView

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<String>.getView"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.getView"].length
      Actual: 0

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.indexOf

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<String>.indexOf"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.indexOf"].length
      Actual: 1

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.insertAt

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<String>.insertAt"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.insertAt"].length
      Actual: 2

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.removeAt

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<String>.removeAt"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.removeAt"].length
      Actual: 1

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.removeAtEnd

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<String>.removeAtEnd"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.removeAtEnd"].length
      Actual: 0

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.replaceAll

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<String>.replaceAll"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.replaceAll"].length
      Actual: 1

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.setAt

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<String>.setAt"]
      Actual: function

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.setAt"].length
      Actual: 2

Pass: delegateVector's property
      Actual: Windows.Foundation.Collections.IVector`1<String>.size

Pass: typeof delegateVector["Windows.Foundation.Collections.IVector`1<String>.size"]
      Actual: number

Pass: delegateVector's property
      Actual: toString

Pass: typeof delegateVector["toString"]
      Actual: function

Pass: delegateVector["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: delegateVector["toString"].length
      Actual: 0

Pass: number of properties of delegateVector
      Actual: 40

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](0)
      Actual: 1

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](1)
      Actual: 2

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](2)
      Actual: 3

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](3)
      Actual: 4

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](4)
      Actual: 5

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](5)
      Actual: 6

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](6)
      Actual: 7

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](7)
      Actual: 8

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](8)
      Actual: 9

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](0)
      Actual: String1

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](1)
      Actual: String2

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](2)
      Actual: String3

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.getAt"](3)
      Actual: String4

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt"](0)GetGreeting()
      Actual: Animal1

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt"](1)GetGreeting()
      Actual: Animal2

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.getAt"](2)GetGreeting()
      Actual: Animal3

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Int32>.size"]
      Actual: 9

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<String>.size"]
      Actual: 4

Pass: delegateVector["Windows.Foundation.Collections.IVector`1<Animals.IAnimal>.size"]
      Actual: 3

Pass: delegateVector == myMultipleIVector
      Actual: true

Pass: delegateVector === myMultipleIVector
      Actual: true

Comment: *** myDelegate: Exit
PASS [Test 12: RuntimeClassWithMultipleVectors]
=================================================

=================================================
Starting [Test 13: ArraysIntoCollections]
Comment: Get Back array as IVector
Comment: typeof myVector: object
Comment: Dump of properties : 
    var myVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof myVector
      Actual: object

Pass: myVector's property
      Actual: 0

Pass: typeof myVector["0"]
      Actual: number

Pass: myVector["0"]
      Actual: 1

Pass: myVector's property
      Actual: 1

Pass: typeof myVector["1"]
      Actual: number

Pass: myVector["1"]
      Actual: 2

Pass: myVector's property
      Actual: 2

Pass: typeof myVector["2"]
      Actual: number

Pass: myVector["2"]
      Actual: 3

Pass: myVector's property
      Actual: 3

Pass: typeof myVector["3"]
      Actual: number

Pass: myVector["3"]
      Actual: 4

Pass: myVector's property
      Actual: 4

Pass: typeof myVector["4"]
      Actual: number

Pass: myVector["4"]
      Actual: 5

Pass: myVector's property
      Actual: append

Pass: typeof myVector["append"]
      Actual: function

Pass: myVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["append"].length
      Actual: 1

Pass: myVector's property
      Actual: clear

Pass: typeof myVector["clear"]
      Actual: function

Pass: myVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["clear"].length
      Actual: 0

Pass: myVector's property
      Actual: first

Pass: typeof myVector["first"]
      Actual: function

Pass: myVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["first"].length
      Actual: 0

Pass: myVector's property
      Actual: getAt

Pass: typeof myVector["getAt"]
      Actual: function

Pass: myVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["getAt"].length
      Actual: 1

Pass: myVector's property
      Actual: getMany

Pass: typeof myVector["getMany"]
      Actual: function

Pass: myVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector["getMany"].length
      Actual: 2

Pass: myVector's property
      Actual: getView

Pass: typeof myVector["getView"]
      Actual: function

Pass: myVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["getView"].length
      Actual: 0

Pass: myVector's property
      Actual: indexOf

Pass: typeof myVector["indexOf"]
      Actual: function

Pass: myVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["indexOf"].length
      Actual: 1

Pass: myVector's property
      Actual: insertAt

Pass: typeof myVector["insertAt"]
      Actual: function

Pass: myVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector["insertAt"].length
      Actual: 2

Pass: myVector's property
      Actual: removeAt

Pass: typeof myVector["removeAt"]
      Actual: function

Pass: myVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["removeAt"].length
      Actual: 1

Pass: myVector's property
      Actual: removeAtEnd

Pass: typeof myVector["removeAtEnd"]
      Actual: function

Pass: myVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector["removeAtEnd"].length
      Actual: 0

Pass: myVector's property
      Actual: replaceAll

Pass: typeof myVector["replaceAll"]
      Actual: function

Pass: myVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector["replaceAll"].length
      Actual: 1

Pass: myVector's property
      Actual: setAt

Pass: typeof myVector["setAt"]
      Actual: function

Pass: myVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector["setAt"].length
      Actual: 2

Pass: myVector's property
      Actual: size

Pass: typeof myVector["size"]
      Actual: number

Pass: number of properties of myVector
      Actual: 18

Pass: myVector.myArrayExpando
      Actual: undefined

Comment: Get back the same Vector as mySameVector
Comment: typeof mySameVector: object
Comment: Dump of properties : 
    var mySameVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof mySameVector
      Actual: object

Pass: mySameVector's property
      Actual: 0

Pass: typeof mySameVector["0"]
      Actual: number

Pass: mySameVector["0"]
      Actual: 1

Pass: mySameVector's property
      Actual: 1

Pass: typeof mySameVector["1"]
      Actual: number

Pass: mySameVector["1"]
      Actual: 2

Pass: mySameVector's property
      Actual: 2

Pass: typeof mySameVector["2"]
      Actual: number

Pass: mySameVector["2"]
      Actual: 3

Pass: mySameVector's property
      Actual: 3

Pass: typeof mySameVector["3"]
      Actual: number

Pass: mySameVector["3"]
      Actual: 4

Pass: mySameVector's property
      Actual: 4

Pass: typeof mySameVector["4"]
      Actual: number

Pass: mySameVector["4"]
      Actual: 5

Pass: mySameVector's property
      Actual: append

Pass: typeof mySameVector["append"]
      Actual: function

Pass: mySameVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["append"].length
      Actual: 1

Pass: mySameVector's property
      Actual: clear

Pass: typeof mySameVector["clear"]
      Actual: function

Pass: mySameVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["clear"].length
      Actual: 0

Pass: mySameVector's property
      Actual: first

Pass: typeof mySameVector["first"]
      Actual: function

Pass: mySameVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["first"].length
      Actual: 0

Pass: mySameVector's property
      Actual: getAt

Pass: typeof mySameVector["getAt"]
      Actual: function

Pass: mySameVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["getAt"].length
      Actual: 1

Pass: mySameVector's property
      Actual: getMany

Pass: typeof mySameVector["getMany"]
      Actual: function

Pass: mySameVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySameVector["getMany"].length
      Actual: 2

Pass: mySameVector's property
      Actual: getView

Pass: typeof mySameVector["getView"]
      Actual: function

Pass: mySameVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["getView"].length
      Actual: 0

Pass: mySameVector's property
      Actual: indexOf

Pass: typeof mySameVector["indexOf"]
      Actual: function

Pass: mySameVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["indexOf"].length
      Actual: 1

Pass: mySameVector's property
      Actual: insertAt

Pass: typeof mySameVector["insertAt"]
      Actual: function

Pass: mySameVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySameVector["insertAt"].length
      Actual: 2

Pass: mySameVector's property
      Actual: removeAt

Pass: typeof mySameVector["removeAt"]
      Actual: function

Pass: mySameVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["removeAt"].length
      Actual: 1

Pass: mySameVector's property
      Actual: removeAtEnd

Pass: typeof mySameVector["removeAtEnd"]
      Actual: function

Pass: mySameVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: mySameVector["removeAtEnd"].length
      Actual: 0

Pass: mySameVector's property
      Actual: replaceAll

Pass: typeof mySameVector["replaceAll"]
      Actual: function

Pass: mySameVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: mySameVector["replaceAll"].length
      Actual: 1

Pass: mySameVector's property
      Actual: setAt

Pass: typeof mySameVector["setAt"]
      Actual: function

Pass: mySameVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: mySameVector["setAt"].length
      Actual: 2

Pass: mySameVector's property
      Actual: size

Pass: typeof mySameVector["size"]
      Actual: number

Pass: number of properties of mySameVector
      Actual: 18

Comment: Equality tests
Pass: mySameVector == myVector
      Actual: true

Pass: mySameVector === myVector
      Actual: true

Pass: mySameVector.myArrayExpando
      Actual: undefined

Comment: Marshal this Vector into Iterable and see if we get same object
Comment: typeof myAnimal.myIterable: object
Comment: Dump of properties : 
    var myAnimal.myIterableMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof myAnimal.myIterable
      Actual: object

Pass: myAnimal.myIterable's property
      Actual: 0

Pass: typeof myAnimal.myIterable["0"]
      Actual: number

Pass: myAnimal.myIterable["0"]
      Actual: 1

Pass: myAnimal.myIterable's property
      Actual: 1

Pass: typeof myAnimal.myIterable["1"]
      Actual: number

Pass: myAnimal.myIterable["1"]
      Actual: 2

Pass: myAnimal.myIterable's property
      Actual: 2

Pass: typeof myAnimal.myIterable["2"]
      Actual: number

Pass: myAnimal.myIterable["2"]
      Actual: 3

Pass: myAnimal.myIterable's property
      Actual: 3

Pass: typeof myAnimal.myIterable["3"]
      Actual: number

Pass: myAnimal.myIterable["3"]
      Actual: 4

Pass: myAnimal.myIterable's property
      Actual: 4

Pass: typeof myAnimal.myIterable["4"]
      Actual: number

Pass: myAnimal.myIterable["4"]
      Actual: 5

Pass: myAnimal.myIterable's property
      Actual: append

Pass: typeof myAnimal.myIterable["append"]
      Actual: function

Pass: myAnimal.myIterable["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myAnimal.myIterable["append"].length
      Actual: 1

Pass: myAnimal.myIterable's property
      Actual: clear

Pass: typeof myAnimal.myIterable["clear"]
      Actual: function

Pass: myAnimal.myIterable["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myAnimal.myIterable["clear"].length
      Actual: 0

Pass: myAnimal.myIterable's property
      Actual: first

Pass: typeof myAnimal.myIterable["first"]
      Actual: function

Pass: myAnimal.myIterable["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myAnimal.myIterable["first"].length
      Actual: 0

Pass: myAnimal.myIterable's property
      Actual: getAt

Pass: typeof myAnimal.myIterable["getAt"]
      Actual: function

Pass: myAnimal.myIterable["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myAnimal.myIterable["getAt"].length
      Actual: 1

Pass: myAnimal.myIterable's property
      Actual: getMany

Pass: typeof myAnimal.myIterable["getMany"]
      Actual: function

Pass: myAnimal.myIterable["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myAnimal.myIterable["getMany"].length
      Actual: 2

Pass: myAnimal.myIterable's property
      Actual: getView

Pass: typeof myAnimal.myIterable["getView"]
      Actual: function

Pass: myAnimal.myIterable["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myAnimal.myIterable["getView"].length
      Actual: 0

Pass: myAnimal.myIterable's property
      Actual: indexOf

Pass: typeof myAnimal.myIterable["indexOf"]
      Actual: function

Pass: myAnimal.myIterable["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myAnimal.myIterable["indexOf"].length
      Actual: 1

Pass: myAnimal.myIterable's property
      Actual: insertAt

Pass: typeof myAnimal.myIterable["insertAt"]
      Actual: function

Pass: myAnimal.myIterable["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myAnimal.myIterable["insertAt"].length
      Actual: 2

Pass: myAnimal.myIterable's property
      Actual: removeAt

Pass: typeof myAnimal.myIterable["removeAt"]
      Actual: function

Pass: myAnimal.myIterable["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myAnimal.myIterable["removeAt"].length
      Actual: 1

Pass: myAnimal.myIterable's property
      Actual: removeAtEnd

Pass: typeof myAnimal.myIterable["removeAtEnd"]
      Actual: function

Pass: myAnimal.myIterable["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myAnimal.myIterable["removeAtEnd"].length
      Actual: 0

Pass: myAnimal.myIterable's property
      Actual: replaceAll

Pass: typeof myAnimal.myIterable["replaceAll"]
      Actual: function

Pass: myAnimal.myIterable["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myAnimal.myIterable["replaceAll"].length
      Actual: 1

Pass: myAnimal.myIterable's property
      Actual: setAt

Pass: typeof myAnimal.myIterable["setAt"]
      Actual: function

Pass: myAnimal.myIterable["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myAnimal.myIterable["setAt"].length
      Actual: 2

Pass: myAnimal.myIterable's property
      Actual: size

Pass: typeof myAnimal.myIterable["size"]
      Actual: number

Pass: number of properties of myAnimal.myIterable
      Actual: 18

Comment: Test equality of myAnimal.myIterable and myVector
Pass: myAnimal.myIterable == myVector
      Actual: true

Pass: myAnimal.myIterable === myVector
      Actual: true

Pass: myAnimal.myIterable.myArrayExpando
      Actual: undefined

Comment: Call the delegate and see if we can marshal it correctly
Comment: *** myDelegate: Invoke
Comment: typeof deletateVector: object
Comment: Dump of properties : 
    var deletateVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof deletateVector
      Actual: object

Pass: deletateVector's property
      Actual: 0

Pass: typeof deletateVector["0"]
      Actual: number

Pass: deletateVector["0"]
      Actual: 1

Pass: deletateVector's property
      Actual: 1

Pass: typeof deletateVector["1"]
      Actual: number

Pass: deletateVector["1"]
      Actual: 2

Pass: deletateVector's property
      Actual: 2

Pass: typeof deletateVector["2"]
      Actual: number

Pass: deletateVector["2"]
      Actual: 3

Pass: deletateVector's property
      Actual: 3

Pass: typeof deletateVector["3"]
      Actual: number

Pass: deletateVector["3"]
      Actual: 4

Pass: deletateVector's property
      Actual: 4

Pass: typeof deletateVector["4"]
      Actual: number

Pass: deletateVector["4"]
      Actual: 5

Pass: deletateVector's property
      Actual: append

Pass: typeof deletateVector["append"]
      Actual: function

Pass: deletateVector["append"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: deletateVector["append"].length
      Actual: 1

Pass: deletateVector's property
      Actual: clear

Pass: typeof deletateVector["clear"]
      Actual: function

Pass: deletateVector["clear"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: deletateVector["clear"].length
      Actual: 0

Pass: deletateVector's property
      Actual: first

Pass: typeof deletateVector["first"]
      Actual: function

Pass: deletateVector["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: deletateVector["first"].length
      Actual: 0

Pass: deletateVector's property
      Actual: getAt

Pass: typeof deletateVector["getAt"]
      Actual: function

Pass: deletateVector["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: deletateVector["getAt"].length
      Actual: 1

Pass: deletateVector's property
      Actual: getMany

Pass: typeof deletateVector["getMany"]
      Actual: function

Pass: deletateVector["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: deletateVector["getMany"].length
      Actual: 2

Pass: deletateVector's property
      Actual: getView

Pass: typeof deletateVector["getView"]
      Actual: function

Pass: deletateVector["getView"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: deletateVector["getView"].length
      Actual: 0

Pass: deletateVector's property
      Actual: indexOf

Pass: typeof deletateVector["indexOf"]
      Actual: function

Pass: deletateVector["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: deletateVector["indexOf"].length
      Actual: 1

Pass: deletateVector's property
      Actual: insertAt

Pass: typeof deletateVector["insertAt"]
      Actual: function

Pass: deletateVector["insertAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: deletateVector["insertAt"].length
      Actual: 2

Pass: deletateVector's property
      Actual: removeAt

Pass: typeof deletateVector["removeAt"]
      Actual: function

Pass: deletateVector["removeAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: deletateVector["removeAt"].length
      Actual: 1

Pass: deletateVector's property
      Actual: removeAtEnd

Pass: typeof deletateVector["removeAtEnd"]
      Actual: function

Pass: deletateVector["removeAtEnd"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: deletateVector["removeAtEnd"].length
      Actual: 0

Pass: deletateVector's property
      Actual: replaceAll

Pass: typeof deletateVector["replaceAll"]
      Actual: function

Pass: deletateVector["replaceAll"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: deletateVector["replaceAll"].length
      Actual: 1

Pass: deletateVector's property
      Actual: setAt

Pass: typeof deletateVector["setAt"]
      Actual: function

Pass: deletateVector["setAt"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: deletateVector["setAt"].length
      Actual: 2

Pass: deletateVector's property
      Actual: size

Pass: typeof deletateVector["size"]
      Actual: number

Pass: number of properties of deletateVector
      Actual: 18

Comment: Test equality of myAnimal.myIterable and myVector
Pass: deletateVector == myVector
      Actual: true

Pass: deletateVector === myVector
      Actual: true

Pass: deletateVector.myArrayExpando
      Actual: undefined

Comment: *** myDelegate: Exit
Comment: Check the view and iterables are not identical
Comment: typeof myIterator: object
Comment: Dump of properties : 
    var myIteratorMembers = [
        ['current', 'number'],
        ['getMany', 'function', 1],
        ['hasCurrent', 'boolean'],
        ['moveNext', 'function', 0],
        ['toString', 'function', 0],
    ];
Pass: typeof myIterator
      Actual: object

Pass: myIterator's property
      Actual: current

Pass: typeof myIterator["current"]
      Actual: number

Pass: myIterator's property
      Actual: getMany

Pass: typeof myIterator["getMany"]
      Actual: function

Pass: myIterator["getMany"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myIterator["getMany"].length
      Actual: 1

Pass: myIterator's property
      Actual: hasCurrent

Pass: typeof myIterator["hasCurrent"]
      Actual: boolean

Pass: myIterator's property
      Actual: moveNext

Pass: typeof myIterator["moveNext"]
      Actual: function

Pass: myIterator["moveNext"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["moveNext"].length
      Actual: 0

Pass: myIterator's property
      Actual: toString

Pass: typeof myIterator["toString"]
      Actual: function

Pass: myIterator["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myIterator["toString"].length
      Actual: 0

Pass: number of properties of myIterator
      Actual: 5

Comment: Equality and Expando tests on : myIterator and myVector
Pass: myIterator != myVector
      Actual: true

Pass: myIterator !== myVector
      Actual: true

Pass: myIterator.myArrayExpando
      Actual: undefined

Comment: typeof myVectorView: object
Comment: Dump of properties : 
    var myVectorViewMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['indexOf', 'function', 1],
        ['size', 'number'],
    ];
Pass: typeof myVectorView
      Actual: object

Pass: myVectorView's property
      Actual: 0

Pass: typeof myVectorView["0"]
      Actual: number

Pass: myVectorView["0"]
      Actual: 1

Pass: myVectorView's property
      Actual: 1

Pass: typeof myVectorView["1"]
      Actual: number

Pass: myVectorView["1"]
      Actual: 2

Pass: myVectorView's property
      Actual: 2

Pass: typeof myVectorView["2"]
      Actual: number

Pass: myVectorView["2"]
      Actual: 3

Pass: myVectorView's property
      Actual: 3

Pass: typeof myVectorView["3"]
      Actual: number

Pass: myVectorView["3"]
      Actual: 4

Pass: myVectorView's property
      Actual: 4

Pass: typeof myVectorView["4"]
      Actual: number

Pass: myVectorView["4"]
      Actual: 5

Pass: myVectorView's property
      Actual: first

Pass: typeof myVectorView["first"]
      Actual: function

Pass: myVectorView["first"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVectorView["first"].length
      Actual: 0

Pass: myVectorView's property
      Actual: getAt

Pass: typeof myVectorView["getAt"]
      Actual: function

Pass: myVectorView["getAt"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVectorView["getAt"].length
      Actual: 1

Pass: myVectorView's property
      Actual: getMany

Pass: typeof myVectorView["getMany"]
      Actual: function

Pass: myVectorView["getMany"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVectorView["getMany"].length
      Actual: 2

Pass: myVectorView's property
      Actual: indexOf

Pass: typeof myVectorView["indexOf"]
      Actual: function

Pass: myVectorView["indexOf"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVectorView["indexOf"].length
      Actual: 1

Pass: myVectorView's property
      Actual: size

Pass: typeof myVectorView["size"]
      Actual: number

Pass: number of properties of myVectorView
      Actual: 10

Comment: Equality and Expando tests on : myVectorView and myVector
Pass: myVectorView != myVector
      Actual: true

Pass: myVectorView !== myVector
      Actual: true

Pass: myVectorView.myArrayExpando
      Actual: undefined

PASS [Test 13: ArraysIntoCollections]
=================================================

=================================================
Starting [Test 14: Events]
Comment: Create toaster
Comment: typeof toaster: object
Comment: Dump of properties : 
    var toasterMembers = [
        ['addEventListener', 'function', 2],
        ['electricityReporter', 'object'],
        ['getSameToaster', 'function', 0],
        ['indirectMakeToast', 'function', 1],
        ['indirectToaster', 'object'],
        ['invokePreheatCompleteBackgroundEvents', 'function', 1],
        ['invokeRootedHandler', 'function', 2],
        ['makeToast', 'function', 1],
        ['onindirecttoastcompleteevent', 'object'],
        ['onpreheatcompletebackground', 'object'],
        ['onpreheatstart', 'object'],
        ['onrootedtoastcompleteevent', 'object'],
        ['ontoastcompleteevent', 'object'],
        ['ontoaststartevent', 'object'],
        ['preheatInBackground', 'function', 1],
        ['preheatInBackgroundWithSmuggledDelegate', 'function', 1],
        ['removeEventListener', 'function', 2],
        ['rootedHandler', 'object'],
        ['size', 'object'],
        ['toString', 'function', 0],
    ];
Pass: typeof toaster
      Actual: object

Pass: toaster's property
      Actual: addEventListener

Pass: typeof toaster["addEventListener"]
      Actual: function

Pass: toaster["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: toaster["addEventListener"].length
      Actual: 2

Pass: toaster's property
      Actual: electricityReporter

Pass: typeof toaster["electricityReporter"]
      Actual: object

Pass: toaster's property
      Actual: getSameToaster

Pass: typeof toaster["getSameToaster"]
      Actual: function

Pass: toaster["getSameToaster"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: toaster["getSameToaster"].length
      Actual: 0

Pass: toaster's property
      Actual: indirectMakeToast

Pass: typeof toaster["indirectMakeToast"]
      Actual: function

Pass: toaster["indirectMakeToast"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: toaster["indirectMakeToast"].length
      Actual: 1

Pass: toaster's property
      Actual: indirectToaster

Pass: typeof toaster["indirectToaster"]
      Actual: object

Pass: toaster's property
      Actual: invokePreheatCompleteBackgroundEvents

Pass: typeof toaster["invokePreheatCompleteBackgroundEvents"]
      Actual: function

Pass: toaster["invokePreheatCompleteBackgroundEvents"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: toaster["invokePreheatCompleteBackgroundEvents"].length
      Actual: 1

Pass: toaster's property
      Actual: invokeRootedHandler

Pass: typeof toaster["invokeRootedHandler"]
      Actual: function

Pass: toaster["invokeRootedHandler"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: toaster["invokeRootedHandler"].length
      Actual: 2

Pass: toaster's property
      Actual: makeToast

Pass: typeof toaster["makeToast"]
      Actual: function

Pass: toaster["makeToast"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: toaster["makeToast"].length
      Actual: 1

Pass: toaster's property
      Actual: onindirecttoastcompleteevent

Pass: typeof toaster["onindirecttoastcompleteevent"]
      Actual: object

Pass: toaster's property
      Actual: onpreheatcompletebackground

Pass: typeof toaster["onpreheatcompletebackground"]
      Actual: object

Pass: toaster's property
      Actual: onpreheatstart

Pass: typeof toaster["onpreheatstart"]
      Actual: object

Pass: toaster's property
      Actual: onrootedtoastcompleteevent

Pass: typeof toaster["onrootedtoastcompleteevent"]
      Actual: object

Pass: toaster's property
      Actual: ontoastcompleteevent

Pass: typeof toaster["ontoastcompleteevent"]
      Actual: object

Pass: toaster's property
      Actual: ontoaststartevent

Pass: typeof toaster["ontoaststartevent"]
      Actual: object

Pass: toaster's property
      Actual: preheatInBackground

Pass: typeof toaster["preheatInBackground"]
      Actual: function

Pass: toaster["preheatInBackground"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: toaster["preheatInBackground"].length
      Actual: 1

Pass: toaster's property
      Actual: preheatInBackgroundWithSmuggledDelegate

Pass: typeof toaster["preheatInBackgroundWithSmuggledDelegate"]
      Actual: function

Pass: toaster["preheatInBackgroundWithSmuggledDelegate"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: toaster["preheatInBackgroundWithSmuggledDelegate"].length
      Actual: 1

Pass: toaster's property
      Actual: removeEventListener

Pass: typeof toaster["removeEventListener"]
      Actual: function

Pass: toaster["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: toaster["removeEventListener"].length
      Actual: 2

Pass: toaster's property
      Actual: rootedHandler

Pass: typeof toaster["rootedHandler"]
      Actual: object

Pass: toaster's property
      Actual: size

Pass: typeof toaster["size"]
      Actual: object

Pass: toaster's property
      Actual: toString

Pass: typeof toaster["toString"]
      Actual: function

Pass: toaster["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: toaster["toString"].length
      Actual: 0

Pass: number of properties of toaster
      Actual: 20

Comment: Add event listner
Comment: Call makeToast to see event handler is invoked
Comment: *** toastCompleteCallback: Enter
Pass: ev.message
      Actual: Toast Complete Msg

Comment: typeof ev.target: object
Comment: Dump of properties : 
    var ev.targetMembers = [
        ['addEventListener', 'function', 2],
        ['electricityReporter', 'object'],
        ['getSameToaster', 'function', 0],
        ['indirectMakeToast', 'function', 1],
        ['indirectToaster', 'object'],
        ['invokePreheatCompleteBackgroundEvents', 'function', 1],
        ['invokeRootedHandler', 'function', 2],
        ['makeToast', 'function', 1],
        ['onindirecttoastcompleteevent', 'object'],
        ['onpreheatcompletebackground', 'object'],
        ['onpreheatstart', 'object'],
        ['onrootedtoastcompleteevent', 'object'],
        ['ontoastcompleteevent', 'object'],
        ['ontoaststartevent', 'object'],
        ['preheatInBackground', 'function', 1],
        ['preheatInBackgroundWithSmuggledDelegate', 'function', 1],
        ['removeEventListener', 'function', 2],
        ['rootedHandler', 'object'],
        ['size', 'object'],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.target
      Actual: object

Pass: ev.target's property
      Actual: addEventListener

Pass: typeof ev.target["addEventListener"]
      Actual: function

Pass: ev.target["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["addEventListener"].length
      Actual: 2

Pass: ev.target's property
      Actual: electricityReporter

Pass: typeof ev.target["electricityReporter"]
      Actual: object

Pass: ev.target's property
      Actual: getSameToaster

Pass: typeof ev.target["getSameToaster"]
      Actual: function

Pass: ev.target["getSameToaster"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["getSameToaster"].length
      Actual: 0

Pass: ev.target's property
      Actual: indirectMakeToast

Pass: typeof ev.target["indirectMakeToast"]
      Actual: function

Pass: ev.target["indirectMakeToast"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["indirectMakeToast"].length
      Actual: 1

Pass: ev.target's property
      Actual: indirectToaster

Pass: typeof ev.target["indirectToaster"]
      Actual: object

Pass: ev.target's property
      Actual: invokePreheatCompleteBackgroundEvents

Pass: typeof ev.target["invokePreheatCompleteBackgroundEvents"]
      Actual: function

Pass: ev.target["invokePreheatCompleteBackgroundEvents"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["invokePreheatCompleteBackgroundEvents"].length
      Actual: 1

Pass: ev.target's property
      Actual: invokeRootedHandler

Pass: typeof ev.target["invokeRootedHandler"]
      Actual: function

Pass: ev.target["invokeRootedHandler"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["invokeRootedHandler"].length
      Actual: 2

Pass: ev.target's property
      Actual: makeToast

Pass: typeof ev.target["makeToast"]
      Actual: function

Pass: ev.target["makeToast"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["makeToast"].length
      Actual: 1

Pass: ev.target's property
      Actual: onindirecttoastcompleteevent

Pass: typeof ev.target["onindirecttoastcompleteevent"]
      Actual: object

Pass: ev.target's property
      Actual: onpreheatcompletebackground

Pass: typeof ev.target["onpreheatcompletebackground"]
      Actual: object

Pass: ev.target's property
      Actual: onpreheatstart

Pass: typeof ev.target["onpreheatstart"]
      Actual: object

Pass: ev.target's property
      Actual: onrootedtoastcompleteevent

Pass: typeof ev.target["onrootedtoastcompleteevent"]
      Actual: object

Pass: ev.target's property
      Actual: ontoastcompleteevent

Pass: typeof ev.target["ontoastcompleteevent"]
      Actual: object

Pass: ev.target's property
      Actual: ontoaststartevent

Pass: typeof ev.target["ontoaststartevent"]
      Actual: object

Pass: ev.target's property
      Actual: preheatInBackground

Pass: typeof ev.target["preheatInBackground"]
      Actual: function

Pass: ev.target["preheatInBackground"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["preheatInBackground"].length
      Actual: 1

Pass: ev.target's property
      Actual: preheatInBackgroundWithSmuggledDelegate

Pass: typeof ev.target["preheatInBackgroundWithSmuggledDelegate"]
      Actual: function

Pass: ev.target["preheatInBackgroundWithSmuggledDelegate"].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: ev.target["preheatInBackgroundWithSmuggledDelegate"].length
      Actual: 1

Pass: ev.target's property
      Actual: removeEventListener

Pass: typeof ev.target["removeEventListener"]
      Actual: function

Pass: ev.target["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["removeEventListener"].length
      Actual: 2

Pass: ev.target's property
      Actual: rootedHandler

Pass: typeof ev.target["rootedHandler"]
      Actual: object

Pass: ev.target's property
      Actual: size

Pass: typeof ev.target["size"]
      Actual: object

Pass: ev.target's property
      Actual: toString

Pass: typeof ev.target["toString"]
      Actual: function

Pass: ev.target["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["toString"].length
      Actual: 0

Pass: number of properties of ev.target
      Actual: 20

Comment: Test equality of ev.target and toaster
Pass: ev.target == toaster
      Actual: true

Pass: ev.target === toaster
      Actual: true

Comment: Store ev.detail[0] - toast and myToastExpando so that we can verify it outside event
Pass: ev.detail[0].myToastExpando
      Actual: undefined

Comment: typeof ev.detail[0]: object
Comment: Dump of properties : 
    var ev.detail[0]Members = [
        ['message', 'string'],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.detail[0]
      Actual: object

Pass: ev.detail[0]'s property
      Actual: message

Pass: typeof ev.detail[0]["message"]
      Actual: string

Pass: ev.detail[0]'s property
      Actual: toString

Pass: typeof ev.detail[0]["toString"]
      Actual: function

Pass: ev.detail[0]["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.detail[0]["toString"].length
      Actual: 0

Pass: number of properties of ev.detail[0]
      Actual: 2

Comment: Equality of ev and ev.detail[0]
Pass: ev !== ev.detail[0]
      Actual: true

Pass: ev != ev.detail[0]
      Actual: true

Pass: ev.myToastExpando
      Actual: undefined

Comment: typeof ev: object
Comment: Dump of properties : 
    var evMembers = [
        ['target', 'object'],
        ['detail', 'object'],
        ['type', 'string'],
        ['message', 'string'],
        ['toString', 'function', 0],
    ];
Pass: typeof ev
      Actual: object

Pass: ev's property
      Actual: target

Pass: typeof ev["target"]
      Actual: object

Pass: ev's property
      Actual: detail

Pass: typeof ev["detail"]
      Actual: object

Pass: ev's property
      Actual: type

Pass: typeof ev["type"]
      Actual: string

Pass: ev's property
      Actual: message

Pass: typeof ev["message"]
      Actual: string

Pass: ev's property
      Actual: toString

Pass: typeof ev["toString"]
      Actual: function

Pass: ev["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev["toString"].length
      Actual: 0

Pass: number of properties of ev
      Actual: 5

Comment: *** toastCompleteCallback: Exit
Pass: toast.message
      Actual: Toast Complete Msg

Comment: typeof toast: object
Comment: Dump of properties : 
    var toastMembers = [
        ['message', 'string'],
        ['toString', 'function', 0],
    ];
Pass: typeof toast
      Actual: object

Pass: toast's property
      Actual: message

Pass: typeof toast["message"]
      Actual: string

Pass: toast's property
      Actual: toString

Pass: typeof toast["toString"]
      Actual: function

Pass: toast["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: toast["toString"].length
      Actual: 0

Pass: number of properties of toast
      Actual: 2

Comment: Test equality of toasterInDelegate and toaster
Pass: toast == myToastInDelegate
      Actual: true

Pass: toast === myToastInDelegate
      Actual: true

Comment: Get back same toaster
Pass: sameToaster == toaster
      Actual: true

Comment: Remove event listner using sameToaster
Comment: Call makeToast to see event is actually removed and eventhandler is not invoked
PASS [Test 14: Events]
=================================================

=================================================
Starting [Test 15: EventsOnInterfaceOnlyWinRTObjects]
Comment: Create toaster
Comment: Get Electricityreporter and set the expando
Pass: electricityReporter.applianceName
      Actual: Toaster

Comment: typeof electricityReporter: object
Comment: Dump of properties : 
    var electricityReporterMembers = [
        ['addEventListener', 'function', 2],
        ['applianceName', 'string'],
        ['getSameElectricityReporter', 'function', 0],
        ['onapplianceswitchoffevent', 'object'],
        ['onapplianceswitchonevent', 'object'],
        ['removeEventListener', 'function', 2],
        ['toString', 'function', 0],
    ];
Pass: typeof electricityReporter
      Actual: object

Pass: electricityReporter's property
      Actual: addEventListener

Pass: typeof electricityReporter["addEventListener"]
      Actual: function

Pass: electricityReporter["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: electricityReporter["addEventListener"].length
      Actual: 2

Pass: electricityReporter's property
      Actual: applianceName

Pass: typeof electricityReporter["applianceName"]
      Actual: string

Pass: electricityReporter's property
      Actual: getSameElectricityReporter

Pass: typeof electricityReporter["getSameElectricityReporter"]
      Actual: function

Pass: electricityReporter["getSameElectricityReporter"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: electricityReporter["getSameElectricityReporter"].length
      Actual: 0

Pass: electricityReporter's property
      Actual: onapplianceswitchoffevent

Pass: typeof electricityReporter["onapplianceswitchoffevent"]
      Actual: object

Pass: electricityReporter's property
      Actual: onapplianceswitchonevent

Pass: typeof electricityReporter["onapplianceswitchonevent"]
      Actual: object

Pass: electricityReporter's property
      Actual: removeEventListener

Pass: typeof electricityReporter["removeEventListener"]
      Actual: function

Pass: electricityReporter["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: electricityReporter["removeEventListener"].length
      Actual: 2

Pass: electricityReporter's property
      Actual: toString

Pass: typeof electricityReporter["toString"]
      Actual: function

Pass: electricityReporter["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: electricityReporter["toString"].length
      Actual: 0

Pass: number of properties of electricityReporter
      Actual: 7

Comment: Registering switch on and off events
Comment: Calling toaster.makeToast
Comment: *** OnSwitchOn : Invoke
Pass: ev.target.applianceName
      Actual: Toaster

Pass: ev
      Actual: This is my toaster msg

Comment: typeof ev.target: object
Comment: Dump of properties : 
    var ev.targetMembers = [
        ['addEventListener', 'function', 2],
        ['applianceName', 'string'],
        ['getSameElectricityReporter', 'function', 0],
        ['onapplianceswitchoffevent', 'object'],
        ['onapplianceswitchonevent', 'object'],
        ['removeEventListener', 'function', 2],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.target
      Actual: object

Pass: ev.target's property
      Actual: addEventListener

Pass: typeof ev.target["addEventListener"]
      Actual: function

Pass: ev.target["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["addEventListener"].length
      Actual: 2

Pass: ev.target's property
      Actual: applianceName

Pass: typeof ev.target["applianceName"]
      Actual: string

Pass: ev.target's property
      Actual: getSameElectricityReporter

Pass: typeof ev.target["getSameElectricityReporter"]
      Actual: function

Pass: ev.target["getSameElectricityReporter"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["getSameElectricityReporter"].length
      Actual: 0

Pass: ev.target's property
      Actual: onapplianceswitchoffevent

Pass: typeof ev.target["onapplianceswitchoffevent"]
      Actual: object

Pass: ev.target's property
      Actual: onapplianceswitchonevent

Pass: typeof ev.target["onapplianceswitchonevent"]
      Actual: object

Pass: ev.target's property
      Actual: removeEventListener

Pass: typeof ev.target["removeEventListener"]
      Actual: function

Pass: ev.target["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["removeEventListener"].length
      Actual: 2

Pass: ev.target's property
      Actual: toString

Pass: typeof ev.target["toString"]
      Actual: function

Pass: ev.target["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["toString"].length
      Actual: 0

Pass: number of properties of ev.target
      Actual: 7

Comment: Test equality of sender and electricityReporterr
Pass: ev.target == electricityReporter
      Actual: true

Pass: ev.target === electricityReporter
      Actual: true

Comment: Test non equality for ev and event details
Pass: ev == ev.detail[0]
      Actual: true

Pass: ev !== ev.detail[0]
      Actual: true

Pass: ev.detail[0]
      Actual: This is my toaster msg

Comment: Store sender to check in switchoff event
Comment: *** OnSwitchOn : Exit
Comment: *** OnSwitchOff : Enter
Pass: ev.target.applianceName
      Actual: Toaster

Pass: ev.detail[0]
      Actual: This is my toaster msg

Pass: ev.detail[1]
      Actual: 5

Comment: typeof ev.target: object
Comment: Dump of properties : 
    var ev.targetMembers = [
        ['addEventListener', 'function', 2],
        ['applianceName', 'string'],
        ['getSameElectricityReporter', 'function', 0],
        ['onapplianceswitchoffevent', 'object'],
        ['onapplianceswitchonevent', 'object'],
        ['removeEventListener', 'function', 2],
        ['toString', 'function', 0],
    ];
Pass: typeof ev.target
      Actual: object

Pass: ev.target's property
      Actual: addEventListener

Pass: typeof ev.target["addEventListener"]
      Actual: function

Pass: ev.target["addEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["addEventListener"].length
      Actual: 2

Pass: ev.target's property
      Actual: applianceName

Pass: typeof ev.target["applianceName"]
      Actual: string

Pass: ev.target's property
      Actual: getSameElectricityReporter

Pass: typeof ev.target["getSameElectricityReporter"]
      Actual: function

Pass: ev.target["getSameElectricityReporter"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["getSameElectricityReporter"].length
      Actual: 0

Pass: ev.target's property
      Actual: onapplianceswitchoffevent

Pass: typeof ev.target["onapplianceswitchoffevent"]
      Actual: object

Pass: ev.target's property
      Actual: onapplianceswitchonevent

Pass: typeof ev.target["onapplianceswitchonevent"]
      Actual: object

Pass: ev.target's property
      Actual: removeEventListener

Pass: typeof ev.target["removeEventListener"]
      Actual: function

Pass: ev.target["removeEventListener"].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: ev.target["removeEventListener"].length
      Actual: 2

Pass: ev.target's property
      Actual: toString

Pass: typeof ev.target["toString"]
      Actual: function

Pass: ev.target["toString"].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: ev.target["toString"].length
      Actual: 0

Pass: number of properties of ev.target
      Actual: 7

Comment: Test equality of sender, switchOnSender and electricityReporterr
Pass: ev.target == electricityReporter
      Actual: true

Pass: ev.target === electricityReporter
      Actual: true

Pass: ev.target == electricityReporter
      Actual: true

Pass: ev.target === electricityReporter
      Actual: true

Comment: Test non equality for ev and event details
Pass: ev == ev.detail[0]
      Actual: true

Pass: ev !== ev.detail[0]
      Actual: true

Pass: ev.detail[0]
      Actual: This is my toaster msg

Comment: *** OnSwitchOff : Exit
Comment: Get back same electricity reporter
Pass: sameElectricityReporter == electricityReporter
      Actual: true

Comment: Unregister switch on and off events using sameElectricityReporter
Comment: Call makeToast to see event is actually removed and eventhandlers are not invoked
PASS [Test 15: EventsOnInterfaceOnlyWinRTObjects]
=================================================

=================================================
Starting [Test 16: InspectableInCollections]
Comment: Create Fish
Comment: Create Dino
Comment: Get Vector
Comment: Create MultipleIVector
Comment: Add all these objects into array and pass it as IVector and get back as IVector
Comment: Verify array contents
Pass: myInspectableVector.length
      Actual: 5

Pass: myInspectableVector[0] === myArray[0]
      Actual: true

Pass: myInspectableVector[1] === myArray[1]
      Actual: true

Pass: myInspectableVector[2] === myArray[2]
      Actual: true

Pass: myInspectableVector[3] === myArray[3]
      Actual: true

Pass: myInspectableVector[4] === myArray[4]
      Actual: true

Pass: myInspectableVector[0] === myFish
      Actual: true

Pass: myInspectableVector[1] === myDino
      Actual: true

Pass: myInspectableVector[2] === myVector
      Actual: true

Pass: myInspectableVector[3] === myMultipleIVector
      Actual: true

Pass: myInspectableVector[4] === myFish
      Actual: true

Pass: myInspectableVector[4] === myInspectableVector[0]
      Actual: true

PASS [Test 16: InspectableInCollections]
=================================================

Passed: 16
Failed: 0
