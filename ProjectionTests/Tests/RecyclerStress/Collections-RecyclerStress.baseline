Recycler Stress - Collections.js
Comment: animalFactory = Animals.Animal
Comment: myAnimal = new animalFactory(1)
Comment: 
function IsLessThan50(x)
{
    if (x < 50)
    {
        return true;
    }
    return false;
}
Comment: 
function IsLessThan70(x)
{
    if (x < 70)
    {
        return true;
    }
    return false;
}
Comment: 
function IsLessThan101(x)
{
    if (x < 101)
    {
        return true;
    }
    return false;
}
Comment: 
function IsGreaterThan100(x)
{
    if (x > 100)
    {
        return true;
    }
    return false;
}

=================================================
Starting [Test 1: MarshalVectorOut]
Comment: myVector = myAnimal.getVector()
Comment: typeof myVector: object
Comment: Dump of properties : 
    var myVectorMembers = [
        ['0', 'number'],
        ['1', 'number'],
        ['2', 'number'],
        ['3', 'number'],
        ['4', 'number'],
        ['5', 'number'],
        ['6', 'number'],
        ['7', 'number'],
        ['8', 'number'],
        ['append', 'function', 1],
        ['clear', 'function', 0],
        ['first', 'function', 0],
        ['getAt', 'function', 1],
        ['getMany', 'function', 2],
        ['getView', 'function', 0],
        ['indexOf', 'function', 1],
        ['insertAt', 'function', 2],
        ['removeAt', 'function', 1],
        ['removeAtEnd', 'function', 0],
        ['replaceAll', 'function', 1],
        ['setAt', 'function', 2],
        ['size', 'number'],
    ];
Pass: typeof myVector
      Actual: object

Pass: myVector : property 0
      Actual: 0

Pass: typeof myVector[0]
      Actual: number

Pass: myVector : property 1
      Actual: 1

Pass: typeof myVector[1]
      Actual: number

Pass: myVector : property 2
      Actual: 2

Pass: typeof myVector[2]
      Actual: number

Pass: myVector : property 3
      Actual: 3

Pass: typeof myVector[3]
      Actual: number

Pass: myVector : property 4
      Actual: 4

Pass: typeof myVector[4]
      Actual: number

Pass: myVector : property 5
      Actual: 5

Pass: typeof myVector[5]
      Actual: number

Pass: myVector : property 6
      Actual: 6

Pass: typeof myVector[6]
      Actual: number

Pass: myVector : property 7
      Actual: 7

Pass: typeof myVector[7]
      Actual: number

Pass: myVector : property 8
      Actual: 8

Pass: typeof myVector[8]
      Actual: number

Pass: myVector : property append
      Actual: append

Pass: typeof myVector[append]
      Actual: function

Pass: myVector[append].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector[append].length
      Actual: 1

Pass: myVector : property clear
      Actual: clear

Pass: typeof myVector[clear]
      Actual: function

Pass: myVector[clear].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector[clear].length
      Actual: 0

Pass: myVector : property first
      Actual: first

Pass: typeof myVector[first]
      Actual: function

Pass: myVector[first].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector[first].length
      Actual: 0

Pass: myVector : property getAt
      Actual: getAt

Pass: typeof myVector[getAt]
      Actual: function

Pass: myVector[getAt].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector[getAt].length
      Actual: 1

Pass: myVector : property getMany
      Actual: getMany

Pass: typeof myVector[getMany]
      Actual: function

Pass: myVector[getMany].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector[getMany].length
      Actual: 2

Pass: myVector : property getView
      Actual: getView

Pass: typeof myVector[getView]
      Actual: function

Pass: myVector[getView].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector[getView].length
      Actual: 0

Pass: myVector : property indexOf
      Actual: indexOf

Pass: typeof myVector[indexOf]
      Actual: function

Pass: myVector[indexOf].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector[indexOf].length
      Actual: 1

Pass: myVector : property insertAt
      Actual: insertAt

Pass: typeof myVector[insertAt]
      Actual: function

Pass: myVector[insertAt].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector[insertAt].length
      Actual: 2

Pass: myVector : property removeAt
      Actual: removeAt

Pass: typeof myVector[removeAt]
      Actual: function

Pass: myVector[removeAt].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector[removeAt].length
      Actual: 1

Pass: myVector : property removeAtEnd
      Actual: removeAtEnd

Pass: typeof myVector[removeAtEnd]
      Actual: function

Pass: myVector[removeAtEnd].length
      Actual: 0

Comment: Setting length of function to be 10
Pass: myVector[removeAtEnd].length
      Actual: 0

Pass: myVector : property replaceAll
      Actual: replaceAll

Pass: typeof myVector[replaceAll]
      Actual: function

Pass: myVector[replaceAll].length
      Actual: 1

Comment: Setting length of function to be 10
Pass: myVector[replaceAll].length
      Actual: 1

Pass: myVector : property setAt
      Actual: setAt

Pass: typeof myVector[setAt]
      Actual: function

Pass: myVector[setAt].length
      Actual: 2

Comment: Setting length of function to be 10
Pass: myVector[setAt].length
      Actual: 2

Pass: myVector : property size
      Actual: size

Pass: typeof myVector[size]
      Actual: number

Pass: number of members of myVector
      Actual: 22

PASS [Test 1: MarshalVectorOut]
=================================================

=================================================
Starting [Test 2: VectorArray_Index_length]
Comment: myVector = myAnimal.getVector()
Comment: myVector[9]: 1,2,3,4,5,6,7,8,9
Comment: myArray[9]: 1,2,3,4,5,6,7,8,9
Pass: myVector.length
      Actual: 9

Pass: myVector
      Actual: 1,2,3,4,5,6,7,8,9

Comment: myVector[2] = 78;
Comment: myVector[9]: 1,2,78,4,5,6,7,8,9
Comment: myArray[9]: 1,2,78,4,5,6,7,8,9
Pass: myVector.length
      Actual: 9

Pass: myVector
      Actual: 1,2,78,4,5,6,7,8,9

Comment: myVector.length = 5;
Comment: myVector[5]: 1,2,78,4,5
Comment: myArray[5]: 1,2,78,4,5
Pass: myVector.length
      Actual: 5

Pass: myVector
      Actual: 1,2,78,4,5

PASS [Test 2: VectorArray_Index_length]
=================================================

=================================================
Starting [Test 3: VectorAsArray_Push_Pop]
Comment: myVector = myAnimal.getVector()
Comment: Applying Array [] to myVector
Comment: myVector[0]: 
Comment: var n = myVector.pop()
Pass: n
      Actual: undefined

Comment: myVector[0]: 
Comment: myArray[0]: 
Pass: myVector.length
      Actual: 0

Pass: myVector
      Actual: 

Pass: myVector.push(11)
      Actual: 1

Pass: myVector.push(22)
      Actual: 2

Pass: myVector.push(33)
      Actual: 3

Pass: myVector.push(44)
      Actual: 4

Pass: myVector.push(55)
      Actual: 5

Pass: myVector.push(66)
      Actual: 6

Pass: myVector.push(77)
      Actual: 7

Comment: myVector[7]: 11,22,33,44,55,66,77
Comment: myArray[7]: 11,22,33,44,55,66,77
Pass: myVector.length
      Actual: 7

Pass: myVector
      Actual: 11,22,33,44,55,66,77

PASS [Test 3: VectorAsArray_Push_Pop]
=================================================

=================================================
Starting [Test 4: VectorAsArray_Shift_Unshift]
Comment: myVector = myAnimal.getVector()
Comment: Applying Array [11,22,33,44,55,66,77,11,22,33,44,55,66,100] to myVector
Comment: myVector[14]: 11,22,33,44,55,66,77,11,22,33,44,55,66,100
Comment: myVector.shift()
Pass: e.toString()
      Actual: TypeError: Object doesn't support this action

Pass: Expected exception was caught
      Actual: true

Comment: myVector[14]: 22,33,44,55,66,77,11,22,33,44,55,66,100,100
Comment: myArray[14]: 22,33,44,55,66,77,11,22,33,44,55,66,100,100
Pass: myVector.length
      Actual: 14

Pass: myVector
      Actual: 22,33,44,55,66,77,11,22,33,44,55,66,100,100

Pass: myVector.unshift()
      Actual: 14

Comment: myVector[14]: 22,33,44,55,66,77,11,22,33,44,55,66,100,100
Comment: myArray[14]: 22,33,44,55,66,77,11,22,33,44,55,66,100,100
Pass: myVector.length
      Actual: 14

Pass: myVector
      Actual: 22,33,44,55,66,77,11,22,33,44,55,66,100,100

PASS [Test 4: VectorAsArray_Shift_Unshift]
=================================================

=================================================
Starting [Test 5: VectorAsArray_Slice]
Comment: myVector = myAnimal.getVector()
Comment: Applying Array [0,22,33,44,55,66,77,11,22,33,44,55,66,100,100] to myVector
Comment: myVector[15]: 0,22,33,44,55,66,77,11,22,33,44,55,66,100,100
Pass: myVector.slice()
      Actual: 0,22,33,44,55,66,77,11,22,33,44,55,66,100,100

Comment: myVector[15]: 0,22,33,44,55,66,77,11,22,33,44,55,66,100,100
Comment: myArray[15]: 0,22,33,44,55,66,77,11,22,33,44,55,66,100,100
Pass: myVector.length
      Actual: 15

Pass: myVector
      Actual: 0,22,33,44,55,66,77,11,22,33,44,55,66,100,100

PASS [Test 5: VectorAsArray_Slice]
=================================================

=================================================
Starting [Test 6: VectorAsArray_Splice]
Comment: myVector = myAnimal.getVector()
Comment: Applying Array [0,22,33,44,55,66,77,11,22,33,44,55,66,100,100] to myVector
Comment: myVector[15]: 0,22,33,44,55,66,77,11,22,33,44,55,66,100,100
Pass: myVector.splice()
      Actual: 

Comment: myVector[15]: 0,22,33,44,55,66,77,11,22,33,44,55,66,100,100
Comment: myArray[15]: 0,22,33,44,55,66,77,11,22,33,44,55,66,100,100
Pass: myVector.length
      Actual: 15

Pass: myVector
      Actual: 0,22,33,44,55,66,77,11,22,33,44,55,66,100,100

PASS [Test 6: VectorAsArray_Splice]
=================================================

=================================================
Starting [Test 7: VectorAsArray_Every]
Comment: myVector = myAnimal.getVector()
Comment: Applying Array [0,22,14,98,54,55,11,22,33,44,55,66,100,100,100,100] to myVector
Comment: myVector[16]: 0,22,14,98,54,55,11,22,33,44,55,66,100,100,100,100
Pass: myVector.every(IsLessThan70)
      Actual: false

Pass: myVector.every(IsLessThan101)
      Actual: true

PASS [Test 7: VectorAsArray_Every]
=================================================

=================================================
Starting [Test 8: VectorAsArray_Reverse_Sort]
Comment: myVector = myAnimal.getVector()
Comment: Applying Array [0,22,14,98,54,55,11,22,33,44,55,66,100,100,100,100] to myVector
Comment: myVector[16]: 0,22,14,98,54,55,11,22,33,44,55,66,100,100,100,100
Comment: var a = myVector.sort();
Pass: a === myVector
      Actual: true

Comment: myVector[16]: 0,100,100,100,100,11,14,22,22,33,44,54,55,55,66,98
Comment: myArray[16]: 0,100,100,100,100,11,14,22,22,33,44,54,55,55,66,98
Pass: myVector.length
      Actual: 16

Pass: myVector
      Actual: 0,100,100,100,100,11,14,22,22,33,44,54,55,55,66,98

Comment: a = myVector.reverse();
Pass: a === myVector
      Actual: true

Comment: myVector[16]: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0
Comment: myArray[16]: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0
Pass: myVector.length
      Actual: 16

Pass: myVector
      Actual: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0

PASS [Test 8: VectorAsArray_Reverse_Sort]
=================================================

=================================================
Starting [Test 9: VectorAsArray_Concat]
Comment: myVector = myAnimal.getVector()
Comment: Applying Array [98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0] to myVector
Comment: myVector[16]: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0
Pass: myVector.concat([1,2,3])
      Actual: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0,1,2,3

Comment: myVector[16]: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0
Comment: myArray[16]: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0
Pass: myVector.length
      Actual: 16

Pass: myVector
      Actual: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0

PASS [Test 9: VectorAsArray_Concat]
=================================================

=================================================
Starting [Test 10: VectorAsArray_Join]
Comment: myVector = myAnimal.getVector()
Comment: Applying Array [98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0] to myVector
Comment: myVector[16]: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0
Pass: myVector.join(' , ')
      Actual: 98 , 66 , 55 , 55 , 54 , 44 , 33 , 22 , 22 , 14 , 11 , 100 , 100 , 100 , 100 , 0

Comment: myVector[16]: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0
Comment: myArray[16]: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0
Pass: myVector.length
      Actual: 16

Pass: myVector
      Actual: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0

PASS [Test 10: VectorAsArray_Join]
=================================================

=================================================
Starting [Test 11: VectorAsArray_IndexOf]
Comment: myVector = myAnimal.getVector()
Comment: Applying Array [98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0] to myVector
Comment: myVector[16]: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0
Pass: Array.prototype.indexOf.call(myVector, 55)
      Actual: 2

Pass: myVector.indexOf(55)
      Actual: 2

PASS [Test 11: VectorAsArray_IndexOf]
=================================================

=================================================
Starting [Test 12: VectorArray_IsArray_Apply]
Comment: myVector = myAnimal.getVector()
Comment: Applying Array [98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0] to myVector
Comment: myVector[16]: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0
Pass: Array.isArray(myVector)
      Actual: false

Pass: Array.apply(this, myVector)
      Actual: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0

Comment: myVector[16]: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0
Comment: myArray[16]: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0
Pass: myVector.length
      Actual: 16

Pass: myVector
      Actual: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0

PASS [Test 12: VectorArray_IsArray_Apply]
=================================================

=================================================
Starting [Test 13: VectorArray_PropertyOperations]
Comment: myVector = myAnimal.getVector()
Comment: Applying Array [98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0] to myVector
Comment: myVector[16]: 98,66,55,55,54,44,33,22,22,14,11,100,100,100,100,0
Comment: Enumerating over: myVector
Comment: 	0
Comment: 	1
Comment: 	2
Comment: 	3
Comment: 	4
Comment: 	5
Comment: 	6
Comment: 	7
Comment: 	8
Comment: 	9
Comment: 	10
Comment: 	11
Comment: 	12
Comment: 	13
Comment: 	14
Comment: 	15
Comment: 	append
Comment: 	clear
Comment: 	first
Comment: 	getAt
Comment: 	getMany
Comment: 	getView
Comment: 	indexOf
Comment: 	insertAt
Comment: 	removeAt
Comment: 	removeAtEnd
Comment: 	replaceAll
Comment: 	setAt
Comment: 	size
Pass: Enumerate children
      Actual: true

Comment: Checking if object has property: 3
Pass: Object has property: 3
      Actual: true

Comment: Checking if object has property: 18
Pass: Object has property: 18
      Actual: false

Comment: Attempting to set property (6) to: [88]
Pass: Able to write to property: 6
      Actual: true

Comment: Attempting to set property (18) to: [11]
Pass: Able to write to property: 18
      Actual: false

Comment: Attempting to set property (16) to: [111]
Pass: Able to write to property: 16
      Actual: true

Comment: Attempting to add property: 4
Comment: got exception when calling addAndCheckProperty: TypeError: Cannot redefine non-configurable property '4'
Pass: Able to add property: 4
      Actual: false

Comment: Attempting to add property: 17
Comment: got exception when calling addAndCheckProperty: TypeError: Cannot define property '17': object is not extensible
Pass: Able to add property: 17
      Actual: false

Comment: Attempting to add property: 20
Comment: got exception when calling addAndCheckProperty: TypeError: Cannot define property '20': object is not extensible
Pass: Able to add property: 20
      Actual: false

Comment: Attempting to delete property: 4
Pass: Object has property [4]
      Actual: true

Pass: Able to delete property: 4
      Actual: false

Comment: Attempting to delete property: 10
Pass: Object has property [10]
      Actual: true

Pass: Able to delete property: 10
      Actual: false

Comment: Attempting to add property: FavoriteRecipe
Comment: got exception when calling addAndCheckProperty: TypeError: Cannot define property 'FavoriteRecipe': object is not extensible
Pass: Able to add property: FavoriteRecipe
      Actual: false

Comment: Attempting to set property (FavoriteRecipe) to: [Almond Cake]
Pass: Able to write to property: FavoriteRecipe
      Actual: false

PASS [Test 13: VectorArray_PropertyOperations]
=================================================

Passed: 13
Failed: 0
