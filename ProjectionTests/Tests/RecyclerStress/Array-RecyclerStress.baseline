Recycler Stress - Array.js

=================================================
Starting [Test 1: Pass, Fill, ReceiveArray]
Comment: var myArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];
Pass: Number of array Items and Vector Items
      Actual: 9

Pass: myVector[0] and myArray[0]
      Actual: 1

Pass: myVector[1] and myArray[1]
      Actual: 2

Pass: myVector[2] and myArray[2]
      Actual: 3

Pass: myVector[3] and myArray[3]
      Actual: 4

Pass: myVector[4] and myArray[4]
      Actual: 5

Pass: myVector[5] and myArray[5]
      Actual: 6

Pass: myVector[6] and myArray[6]
      Actual: 7

Pass: myVector[7] and myArray[7]
      Actual: 8

Pass: myVector[8] and myArray[8]
      Actual: 9

Pass: Number of array Items and Vector Items
      Actual: 9

Pass: myVector[0] and myArray[0]
      Actual: 1

Pass: myVector[1] and myArray[1]
      Actual: 2

Pass: myVector[2] and myArray[2]
      Actual: 3

Pass: myVector[3] and myArray[3]
      Actual: 4

Pass: myVector[4] and myArray[4]
      Actual: 5

Pass: myVector[5] and myArray[5]
      Actual: 6

Pass: myVector[6] and myArray[6]
      Actual: 7

Pass: myVector[7] and myArray[7]
      Actual: 8

Pass: myVector[8] and myArray[8]
      Actual: 9

Pass: typeof myResult
      Actual: object

Pass: myResult.value
      Actual: value

Pass: typeof myResult.value
      Actual: object

Pass: myResult.outVector
      Actual: outVector

Pass: typeof myResult.outVector
      Actual: object

Pass: number of members
      Actual: 2

Pass: Number of array Items and Vector Items
      Actual: 9

Pass: myResult.value[0] and myResult.outVector[0]
      Actual: 1

Pass: myResult.value[1] and myResult.outVector[1]
      Actual: 2

Pass: myResult.value[2] and myResult.outVector[2]
      Actual: 3

Pass: myResult.value[3] and myResult.outVector[3]
      Actual: 4

Pass: myResult.value[4] and myResult.outVector[4]
      Actual: 5

Pass: myResult.value[5] and myResult.outVector[5]
      Actual: 6

Pass: myResult.value[6] and myResult.outVector[6]
      Actual: 7

Pass: myResult.value[7] and myResult.outVector[7]
      Actual: 8

Pass: myResult.value[8] and myResult.outVector[8]
      Actual: 9

Pass: Number of array Items and Vector Items
      Actual: 9

Pass: myVector[0] and myArrayProjection[0]
      Actual: 1

Pass: myVector[1] and myArrayProjection[1]
      Actual: 2

Pass: myVector[2] and myArrayProjection[2]
      Actual: 3

Pass: myVector[3] and myArrayProjection[3]
      Actual: 4

Pass: myVector[4] and myArrayProjection[4]
      Actual: 5

Pass: myVector[5] and myArrayProjection[5]
      Actual: 6

Pass: myVector[6] and myArrayProjection[6]
      Actual: 7

Pass: myVector[7] and myArrayProjection[7]
      Actual: 8

Pass: myVector[8] and myArrayProjection[8]
      Actual: 9

Pass: Number of array Items and Vector Items
      Actual: 9

Pass: myVector[0] and myArrayProjection[0]
      Actual: 1

Pass: myVector[1] and myArrayProjection[1]
      Actual: 2

Pass: myVector[2] and myArrayProjection[2]
      Actual: 3

Pass: myVector[3] and myArrayProjection[3]
      Actual: 4

Pass: myVector[4] and myArrayProjection[4]
      Actual: 300

Pass: myVector[5] and myArrayProjection[5]
      Actual: 6

Pass: myVector[6] and myArrayProjection[6]
      Actual: 7

Pass: myVector[7] and myArrayProjection[7]
      Actual: 8

Pass: myVector[8] and myArrayProjection[8]
      Actual: 9

Pass: myVector = myAnimal.passArrayHSTRING(myArrayProjection); returned (TypeError: Type mismatch)
      Actual: true

Pass: myVector = myAnimal.fillArrayHSTRING(myArrayProjection); returned (TypeError: Type mismatch)
      Actual: true

PASS [Test 1: Pass, Fill, ReceiveArray]
=================================================

=================================================
Starting [Test 2: ProjectOutByRefArrayNull_Basic]
Pass: myResult.value
      Actual: null

PASS [Test 2: ProjectOutByRefArrayNull_Basic]
=================================================

=================================================
Starting [Test 3: Delegate_MarshalInArray_Basic]
Comment: *** delegatePassArray Delegate
Pass: Number of array Items and Vector Items
      Actual: 9

Pass: intArray[0] and intVector[0]
      Actual: 1

Pass: intArray[1] and intVector[1]
      Actual: 2

Pass: intArray[2] and intVector[2]
      Actual: 3

Pass: intArray[3] and intVector[3]
      Actual: 4

Pass: intArray[4] and intVector[4]
      Actual: 5

Pass: intArray[5] and intVector[5]
      Actual: 6

Pass: intArray[6] and intVector[6]
      Actual: 7

Pass: intArray[7] and intVector[7]
      Actual: 8

Pass: intArray[8] and intVector[8]
      Actual: 9

Pass: Number of array Items and Vector Items
      Actual: 9

Pass: myVector[0] and intArray[0]
      Actual: 1

Pass: myVector[1] and intArray[1]
      Actual: 2

Pass: myVector[2] and intArray[2]
      Actual: 3

Pass: myVector[3] and intArray[3]
      Actual: 4

Pass: myVector[4] and intArray[4]
      Actual: 5

Pass: myVector[5] and intArray[5]
      Actual: 6

Pass: myVector[6] and intArray[6]
      Actual: 7

Pass: myVector[7] and intArray[7]
      Actual: 8

Pass: myVector[8] and intArray[8]
      Actual: 9

Pass: Number of array Items and Vector Items
      Actual: 9

Pass: myVector[0] and intArray[0]
      Actual: 1

Pass: myVector[1] and intArray[1]
      Actual: 2

Pass: myVector[2] and intArray[2]
      Actual: 3

Pass: myVector[3] and intArray[3]
      Actual: 4

Pass: myVector[4] and intArray[4]
      Actual: 300

Pass: myVector[5] and intArray[5]
      Actual: 6

Pass: myVector[6] and intArray[6]
      Actual: 7

Pass: myVector[7] and intArray[7]
      Actual: 8

Pass: myVector[8] and intArray[8]
      Actual: 9

Pass: myVector = myAnimal.passArrayHSTRING(intArray); returned (TypeError: Type mismatch)
      Actual: true

Pass: myVector = myAnimal.fillArrayHSTRING(intArray); returned (TypeError: Type mismatch)
      Actual: true

Pass: myArray
      Actual: 1,2,3,4,5,6,7,8,9

PASS [Test 3: Delegate_MarshalInArray_Basic]
=================================================

=================================================
Starting [Test 4: Delegate_ProjectOutArrayByValue]
Comment: *** delegateFillArray Delegate
Pass: Number of array Items and Vector Items
      Actual: 9

Pass: myVector[0] and intArray[0]
      Actual: 1

Pass: myVector[1] and intArray[1]
      Actual: 2

Pass: myVector[2] and intArray[2]
      Actual: 3

Pass: myVector[3] and intArray[3]
      Actual: 4

Pass: myVector[4] and intArray[4]
      Actual: 5

Pass: myVector[5] and intArray[5]
      Actual: 6

Pass: myVector[6] and intArray[6]
      Actual: 7

Pass: myVector[7] and intArray[7]
      Actual: 8

Pass: myVector[8] and intArray[8]
      Actual: 9

Pass: Number of array Items and Vector Items
      Actual: 9

Pass: myVector[0] and intArray[0]
      Actual: 1

Pass: myVector[1] and intArray[1]
      Actual: 2

Pass: myVector[2] and intArray[2]
      Actual: 3

Pass: myVector[3] and intArray[3]
      Actual: 4

Pass: myVector[4] and intArray[4]
      Actual: 300

Pass: myVector[5] and intArray[5]
      Actual: 6

Pass: myVector[6] and intArray[6]
      Actual: 7

Pass: myVector[7] and intArray[7]
      Actual: 8

Pass: myVector[8] and intArray[8]
      Actual: 9

Pass: myVector = myAnimal.passArrayHSTRING(intArray); returned (TypeError: Type mismatch)
      Actual: true

Pass: myVector = myAnimal.fillArrayHSTRING(intArray); returned (TypeError: Type mismatch)
      Actual: true

Comment: intArray[7] = 45;
Pass: myArray
      Actual: 1,2,3,4,5,6,7,8,9

Pass: Number of array Items and Vector Items
      Actual: 9

Pass: delegateFillArray.intArray[0] and myResult.outVector[0]
      Actual: 1

Pass: delegateFillArray.intArray[1] and myResult.outVector[1]
      Actual: 2

Pass: delegateFillArray.intArray[2] and myResult.outVector[2]
      Actual: 3

Pass: delegateFillArray.intArray[3] and myResult.outVector[3]
      Actual: 4

Pass: delegateFillArray.intArray[4] and myResult.outVector[4]
      Actual: 300

Pass: delegateFillArray.intArray[5] and myResult.outVector[5]
      Actual: 6

Pass: delegateFillArray.intArray[6] and myResult.outVector[6]
      Actual: 7

Pass: delegateFillArray.intArray[7] and myResult.outVector[7]
      Actual: 45

Pass: delegateFillArray.intArray[8] and myResult.outVector[8]
      Actual: 9

PASS [Test 4: Delegate_ProjectOutArrayByValue]
=================================================

=================================================
Starting [Test 5: Delegate_ProjectOutArrayByRef_Array]
Comment: *** delegateReceiveArray Delegate
Pass: delegateReceiveArray.myArray
      Actual: 1,2,3,4,5,6,7,8,9,10

Pass: Number of array Items and Vector Items
      Actual: 10

Pass: myResult.outVector[0] and delegateReceiveArray.myArray[0]
      Actual: 1

Pass: myResult.outVector[1] and delegateReceiveArray.myArray[1]
      Actual: 2

Pass: myResult.outVector[2] and delegateReceiveArray.myArray[2]
      Actual: 3

Pass: myResult.outVector[3] and delegateReceiveArray.myArray[3]
      Actual: 4

Pass: myResult.outVector[4] and delegateReceiveArray.myArray[4]
      Actual: 5

Pass: myResult.outVector[5] and delegateReceiveArray.myArray[5]
      Actual: 6

Pass: myResult.outVector[6] and delegateReceiveArray.myArray[6]
      Actual: 7

Pass: myResult.outVector[7] and delegateReceiveArray.myArray[7]
      Actual: 8

Pass: myResult.outVector[8] and delegateReceiveArray.myArray[8]
      Actual: 9

Pass: myResult.outVector[9] and delegateReceiveArray.myArray[9]
      Actual: 10

Pass: myResult.value[5] != 1234
      Actual: true

Pass: myResult.value[5] != 1234
      Actual: true

PASS [Test 5: Delegate_ProjectOutArrayByRef_Array]
=================================================

=================================================
Starting [Test 6: Delegate_ProjectOutArrayByRef_ArrayProjection]
Comment: *** delegateReceiveArray Delegate
Pass: Number of array Items and Vector Items
      Actual: 9

Pass: delegateReceiveArray.myArray[0] and delegateReceiveArray.myArrayProjection[0]
      Actual: 1

Pass: delegateReceiveArray.myArray[1] and delegateReceiveArray.myArrayProjection[1]
      Actual: 2

Pass: delegateReceiveArray.myArray[2] and delegateReceiveArray.myArrayProjection[2]
      Actual: 3

Pass: delegateReceiveArray.myArray[3] and delegateReceiveArray.myArrayProjection[3]
      Actual: 999

Pass: delegateReceiveArray.myArray[4] and delegateReceiveArray.myArrayProjection[4]
      Actual: 5

Pass: delegateReceiveArray.myArray[5] and delegateReceiveArray.myArrayProjection[5]
      Actual: 6

Pass: delegateReceiveArray.myArray[6] and delegateReceiveArray.myArrayProjection[6]
      Actual: 7

Pass: delegateReceiveArray.myArray[7] and delegateReceiveArray.myArrayProjection[7]
      Actual: 8

Pass: delegateReceiveArray.myArray[8] and delegateReceiveArray.myArrayProjection[8]
      Actual: 9

Pass: Number of array Items and Vector Items
      Actual: 9

Pass: myResult.outVector[0] and delegateReceiveArray.myArrayProjection[0]
      Actual: 1

Pass: myResult.outVector[1] and delegateReceiveArray.myArrayProjection[1]
      Actual: 2

Pass: myResult.outVector[2] and delegateReceiveArray.myArrayProjection[2]
      Actual: 3

Pass: myResult.outVector[3] and delegateReceiveArray.myArrayProjection[3]
      Actual: 999

Pass: myResult.outVector[4] and delegateReceiveArray.myArrayProjection[4]
      Actual: 5

Pass: myResult.outVector[5] and delegateReceiveArray.myArrayProjection[5]
      Actual: 6

Pass: myResult.outVector[6] and delegateReceiveArray.myArrayProjection[6]
      Actual: 7

Pass: myResult.outVector[7] and delegateReceiveArray.myArrayProjection[7]
      Actual: 8

Pass: myResult.outVector[8] and delegateReceiveArray.myArrayProjection[8]
      Actual: 9

Pass: myResult.value[5] != 1234
      Actual: true

Pass: delegateReceiveArray.myArray[5] != 1234
      Actual: true

Pass: myResult.value[5] != 1234
      Actual: true

PASS [Test 6: Delegate_ProjectOutArrayByRef_ArrayProjection]
=================================================

=================================================
Starting [Test 7: Receive a big complex struct]
Pass: bigComplexStructArray.length
      Actual: 5

Pass: bigComplexStructArray[0].toString()
      Actual: [object Animals.BigComplexStruct]

Pass: bigComplexStructArray[0].field0
      Actual: 0

Pass: bigComplexStructArray[0].field1.toString()
      Actual: [object Animals.PackedByte]

Pass: bigComplexStructArray[0].field1.field0
      Actual: 50

Pass: bigComplexStructArray[0].field2
      Actual: 200

Pass: bigComplexStructArray[0].field3.toString()
      Actual: [object Animals.PackedBoolean4]

Pass: bigComplexStructArray[0].field3.field0
      Actual: false

Pass: bigComplexStructArray[0].field3.field1
      Actual: true

Pass: bigComplexStructArray[0].field3.field2
      Actual: false

Pass: bigComplexStructArray[0].field3.field3
      Actual: true

Pass: bigComplexStructArray[0].field3.toString()
      Actual: [object Animals.SmallComplexStruct]

Pass: bigComplexStructArray[0].field4.field0
      Actual: 180

Pass: bigComplexStructArray[0].field4.field1.toString()
      Actual: [object Animals.PackedByte]

Pass: bigComplexStructArray[0].field4.field1.field0
      Actual: 150

Pass: bigComplexStructArray[0].field4.field2
      Actual: 190

Pass: bigComplexStructArray[0].field5.toString()
      Actual: [object Animals.SmallComplexStruct]

Pass: bigComplexStructArray[0].field5.field0
      Actual: 80

Pass: bigComplexStructArray[0].field5.field1.toString()
      Actual: [object Animals.PackedByte]

Pass: bigComplexStructArray[0].field5.field1.field0
      Actual: 50

Pass: bigComplexStructArray[0].field5.field2
      Actual: 90

Pass: bigComplexStructArray[0].field6
      Actual: 7

Pass: bigComplexStructArray[0].field7
      Actual: 2000

Pass: bigComplexStructArray[1].toString()
      Actual: [object Animals.BigComplexStruct]

Pass: bigComplexStructArray[1].field0
      Actual: 1

Pass: bigComplexStructArray[1].field1.toString()
      Actual: [object Animals.PackedByte]

Pass: bigComplexStructArray[1].field1.field0
      Actual: 51

Pass: bigComplexStructArray[1].field2
      Actual: 201

Pass: bigComplexStructArray[1].field3.toString()
      Actual: [object Animals.PackedBoolean4]

Pass: bigComplexStructArray[1].field3.field0
      Actual: false

Pass: bigComplexStructArray[1].field3.field1
      Actual: true

Pass: bigComplexStructArray[1].field3.field2
      Actual: false

Pass: bigComplexStructArray[1].field3.field3
      Actual: true

Pass: bigComplexStructArray[1].field3.toString()
      Actual: [object Animals.SmallComplexStruct]

Pass: bigComplexStructArray[1].field4.field0
      Actual: 181

Pass: bigComplexStructArray[1].field4.field1.toString()
      Actual: [object Animals.PackedByte]

Pass: bigComplexStructArray[1].field4.field1.field0
      Actual: 151

Pass: bigComplexStructArray[1].field4.field2
      Actual: 191

Pass: bigComplexStructArray[1].field5.toString()
      Actual: [object Animals.SmallComplexStruct]

Pass: bigComplexStructArray[1].field5.field0
      Actual: 81

Pass: bigComplexStructArray[1].field5.field1.toString()
      Actual: [object Animals.PackedByte]

Pass: bigComplexStructArray[1].field5.field1.field0
      Actual: 51

Pass: bigComplexStructArray[1].field5.field2
      Actual: 91

Pass: bigComplexStructArray[1].field6
      Actual: 8

Pass: bigComplexStructArray[1].field7
      Actual: 2001

Pass: bigComplexStructArray[2].toString()
      Actual: [object Animals.BigComplexStruct]

Pass: bigComplexStructArray[2].field0
      Actual: 2

Pass: bigComplexStructArray[2].field1.toString()
      Actual: [object Animals.PackedByte]

Pass: bigComplexStructArray[2].field1.field0
      Actual: 52

Pass: bigComplexStructArray[2].field2
      Actual: 202

Pass: bigComplexStructArray[2].field3.toString()
      Actual: [object Animals.PackedBoolean4]

Pass: bigComplexStructArray[2].field3.field0
      Actual: false

Pass: bigComplexStructArray[2].field3.field1
      Actual: true

Pass: bigComplexStructArray[2].field3.field2
      Actual: false

Pass: bigComplexStructArray[2].field3.field3
      Actual: true

Pass: bigComplexStructArray[2].field3.toString()
      Actual: [object Animals.SmallComplexStruct]

Pass: bigComplexStructArray[2].field4.field0
      Actual: 182

Pass: bigComplexStructArray[2].field4.field1.toString()
      Actual: [object Animals.PackedByte]

Pass: bigComplexStructArray[2].field4.field1.field0
      Actual: 152

Pass: bigComplexStructArray[2].field4.field2
      Actual: 192

Pass: bigComplexStructArray[2].field5.toString()
      Actual: [object Animals.SmallComplexStruct]

Pass: bigComplexStructArray[2].field5.field0
      Actual: 82

Pass: bigComplexStructArray[2].field5.field1.toString()
      Actual: [object Animals.PackedByte]

Pass: bigComplexStructArray[2].field5.field1.field0
      Actual: 52

Pass: bigComplexStructArray[2].field5.field2
      Actual: 92

Pass: bigComplexStructArray[2].field6
      Actual: 9

Pass: bigComplexStructArray[2].field7
      Actual: 2002

Pass: bigComplexStructArray[3].toString()
      Actual: [object Animals.BigComplexStruct]

Pass: bigComplexStructArray[3].field0
      Actual: 3

Pass: bigComplexStructArray[3].field1.toString()
      Actual: [object Animals.PackedByte]

Pass: bigComplexStructArray[3].field1.field0
      Actual: 53

Pass: bigComplexStructArray[3].field2
      Actual: 203

Pass: bigComplexStructArray[3].field3.toString()
      Actual: [object Animals.PackedBoolean4]

Pass: bigComplexStructArray[3].field3.field0
      Actual: false

Pass: bigComplexStructArray[3].field3.field1
      Actual: true

Pass: bigComplexStructArray[3].field3.field2
      Actual: false

Pass: bigComplexStructArray[3].field3.field3
      Actual: true

Pass: bigComplexStructArray[3].field3.toString()
      Actual: [object Animals.SmallComplexStruct]

Pass: bigComplexStructArray[3].field4.field0
      Actual: 183

Pass: bigComplexStructArray[3].field4.field1.toString()
      Actual: [object Animals.PackedByte]

Pass: bigComplexStructArray[3].field4.field1.field0
      Actual: 153

Pass: bigComplexStructArray[3].field4.field2
      Actual: 193

Pass: bigComplexStructArray[3].field5.toString()
      Actual: [object Animals.SmallComplexStruct]

Pass: bigComplexStructArray[3].field5.field0
      Actual: 83

Pass: bigComplexStructArray[3].field5.field1.toString()
      Actual: [object Animals.PackedByte]

Pass: bigComplexStructArray[3].field5.field1.field0
      Actual: 53

Pass: bigComplexStructArray[3].field5.field2
      Actual: 93

Pass: bigComplexStructArray[3].field6
      Actual: 10

Pass: bigComplexStructArray[3].field7
      Actual: 2003

Pass: bigComplexStructArray[4].toString()
      Actual: [object Animals.BigComplexStruct]

Pass: bigComplexStructArray[4].field0
      Actual: 4

Pass: bigComplexStructArray[4].field1.toString()
      Actual: [object Animals.PackedByte]

Pass: bigComplexStructArray[4].field1.field0
      Actual: 54

Pass: bigComplexStructArray[4].field2
      Actual: 204

Pass: bigComplexStructArray[4].field3.toString()
      Actual: [object Animals.PackedBoolean4]

Pass: bigComplexStructArray[4].field3.field0
      Actual: false

Pass: bigComplexStructArray[4].field3.field1
      Actual: true

Pass: bigComplexStructArray[4].field3.field2
      Actual: false

Pass: bigComplexStructArray[4].field3.field3
      Actual: true

Pass: bigComplexStructArray[4].field3.toString()
      Actual: [object Animals.SmallComplexStruct]

Pass: bigComplexStructArray[4].field4.field0
      Actual: 184

Pass: bigComplexStructArray[4].field4.field1.toString()
      Actual: [object Animals.PackedByte]

Pass: bigComplexStructArray[4].field4.field1.field0
      Actual: 154

Pass: bigComplexStructArray[4].field4.field2
      Actual: 194

Pass: bigComplexStructArray[4].field5.toString()
      Actual: [object Animals.SmallComplexStruct]

Pass: bigComplexStructArray[4].field5.field0
      Actual: 84

Pass: bigComplexStructArray[4].field5.field1.toString()
      Actual: [object Animals.PackedByte]

Pass: bigComplexStructArray[4].field5.field1.field0
      Actual: 54

Pass: bigComplexStructArray[4].field5.field2
      Actual: 94

Pass: bigComplexStructArray[4].field6
      Actual: 11

Pass: bigComplexStructArray[4].field7
      Actual: 2004

PASS [Test 7: Receive a big complex struct]
=================================================

Passed: 7
Failed: 0
