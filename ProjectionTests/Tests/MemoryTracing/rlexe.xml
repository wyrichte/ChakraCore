<?xml version="1.0"?>
<regress-exe>
<!-- SimpleEvents.js temporarily disabled on v5 AMD64 due to fluctuating baselines. See TFS Task 713351 -->
    <test>
        <default>
            <files>SimpleEvents.js</files>
            <baseline>SimpleEvents.baseline</baseline>
            <compile-flags>-TraceWin8Allocations</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_native,exclude_snap,exclude_amd64</tags>
        </default>
    </test>

    <test>
        <default>
            <files>SimpleEvents.js</files>
            <baseline>SimpleEvents.baseline</baseline>
            <compile-flags>-RecyclerStress -TraceWin8Allocations</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_native,exclude_nostress,exclude_snap</tags>
        </default>
    </test>
    
<!-- EventsClosure.js temporarily disabled on v5 AMD64 due to fluctuating baselines. See TFS Task 713351 -->
    <test>
        <default>
            <files>EventsClosure.js</files>
            <baseline>EventsClosure.baseline</baseline>
            <compile-flags>-TraceWin8Allocations</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_native,exclude_snap,exclude_amd64</tags>
        </default>
    </test>

    <test>
        <default>
            <files>SimpleEvents.js</files>
            <baseline>SimpleEvents.baseline</baseline>
            <compile-flags>-TraceWin8Allocations</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_interpreted,exclude_snap,exclude_amd64,exclude_arm</tags>
        </default>
    </test>

    <test>
        <default>
            <files>SimpleEvents.js</files>
            <baseline>SimpleEvents.baseline</baseline>
            <compile-flags>-RecyclerStress -TraceWin8Allocations</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_interpreted,exclude_amd64,exclude_arm,exclude_nostress,exclude_snap</tags>
        </default>
    </test>

<!-- EventsClosure.js temporarily disabled on v5 AMD64 due to fluctuating baselines. See TFS Task 713351 -->
    <test>
        <default>
            <files>EventsClosure.js</files>
            <baseline>EventsClosure.baseline</baseline>
            <compile-flags>-TraceWin8Allocations</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_interpreted,exclude_snap,exclude_amd64</tags>
        </default>
    </test>

    <test>
        <default>
            <files>EventsClosure.js</files>
            <baseline>EventsClosure.baseline</baseline>
            <compile-flags>-RecyclerStress -TraceWin8Allocations</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_nostress,exclude_snap,exclude_amd64</tags>
        </default>
    </test>
    
<!-- JsObjectsInsideWinrtWrapper.js temporarily disabled on v5 AMD64 due to fluctuating baselines. See TFS Task 713351 -->
    <test>
        <default>
            <files>JsObjectsInsideWinrtWrapper.js</files>
            <baseline>JsObjectsInsideWinrtWrapper.baseline</baseline>
            <compile-flags>-TraceWin8Allocations</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_amd64</tags>
        </default>
    </test>

    <test>
        <default>
            <files>JsObjectsInsideWinrtWrapper.js</files>
            <baseline>JsObjectsInsideWinrtWrapper.baseline</baseline>
            <compile-flags>-RecyclerStress -TraceWin8Allocations</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_nostress,exclude_snap,exclude_amd64</tags>
        </default>
    </test>

<!-- Promise.js temporarily disabled on v5 AMD64 due to fluctuating baselines. See TFS Task 713351 -->
    <test>
        <default>
            <files>Promise.js</files>
            <baseline>Promise.baseline</baseline>
            <compile-flags>-TraceWin8Allocations -CheckMemoryLeak-</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_amd64</tags>
        </default>
    </test>

    <test>
        <default>
            <files>Promise.js</files>
            <baseline>Promise.baseline</baseline>
            <compile-flags>-RecyclerStress -TraceWin8Allocations -CheckMemoryLeak-</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_native,exclude_nostress,exclude_snap,exclude_amd64</tags>
        </default>
    </test>

    <test>
        <default>
            <files>Promise.js</files>
            <baseline>Promise.baseline</baseline>
            <compile-flags>-RecyclerStress -TraceWin8Allocations -CheckMemoryLeak-</compile-flags>
            <!-- On x86chk and armchk in native mode the test produces a bit different but still correct output -->
            <tags>exclude_win7,exclude_fre,exclude_interpreted,exclude_x86,exclude_arm,exclude_nostress,exclude_snap</tags>
        </default>
    </test>

    <test>
        <default>
            <files>Promise.js</files>
            <baseline>Promise.x86.native.recyclerstress.baseline</baseline>
            <compile-flags>-RecyclerStress -TraceWin8Allocations -CheckMemoryLeak-</compile-flags>
            <!-- On x86chk in native mode  the test produces a bit different but still correct output -->
            <tags>exclude_win7,exclude_fre,exclude_interpreted,exclude_amd64,exclude_arm,exclude_nostress,exclude_snap</tags>
        </default>
    </test>

    <test>
        <default>
            <files>Promise.js</files>
            <baseline>Promise.arm.native.recyclerstress.baseline</baseline>
            <compile-flags>-RecyclerStress -TraceWin8Allocations -CheckMemoryLeak-</compile-flags>
            <!-- On x86chk in native mode  the test produces a bit different but still correct output -->
            <tags>exclude_win7,exclude_fre,exclude_interpreted,exclude_x86,exclude_amd64,exclude_nostress,exclude_snap</tags>
        </default>
    </test>
    
<!-- Array.js temporarily disabled on v5 AMD64 due to fluctuating baselines. See TFS Task 713351. -->
    <test>
        <default>
            <files>Array.js</files>
            <baseline>Array.es5.baseline</baseline>
            <compile-flags>-TraceWin8Allocations -ES6- -KhronosInterop-</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_amd64</tags>
        </default>
    </test>

    <test>
        <default>
            <files>Array.js</files>
            <baseline>Array.baseline</baseline>
            <compile-flags>-TraceWin8Allocations</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_amd64</tags>
        </default>
    </test>

    <test>
        <default>
            <files>Array.js</files>
            <baseline>Array.es5.baseline</baseline>
            <compile-flags>-RecyclerStress -TraceWin8Allocations -ES6- -KhronosInterop-</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_nostress,exclude_snap,exclude_amd64</tags>
        </default>
    </test>

    <test>
        <default>
            <files>msReleaseWinRTObject.js</files>
            <baseline>msReleaseWinRTObject.baseline</baseline>
            <compile-flags>-TraceWin8Allocations -TraceWin8DeallocationsImmediate</compile-flags>

            <!-- On ARM in interpreted mode the test produces a bit different but still correct output -->
            <tags>exclude_win7,exclude_fre,exclude_interpreted</tags>
        </default>
    </test>

    <test>
        <default>
            <files>EventsClosure.NoWeakDelegate.js</files>
            <baseline>EventsClosure.NoWeakDelegate.baseline</baseline>
            <compile-flags>-TraceWin8Allocations</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_native,exclude_amd64</tags>
        </default>
    </test>

    <test>
        <default>
            <files>EventsClosure.NoWeakDelegate.js</files>
            <baseline>EventsClosure.NoWeakDelegate.baseline</baseline>
            <compile-flags>-TraceWin8Allocations</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_interpreted,exclude_amd64</tags>
        </default>
    </test>

    <test>
        <default>
            <files>EventsClosure.NoWeakDelegate.js</files>
            <baseline>EventsClosure.NoWeakDelegate.baseline</baseline>
            <compile-flags>-RecyclerStress -TraceWin8Allocations</compile-flags>
            <tags>exclude_win7,exclude_fre,exclude_snap,exclude_amd64,exclude_nostress</tags>
        </default>
    </test>
</regress-exe>
