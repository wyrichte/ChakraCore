<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PlatformToolset>v120</PlatformToolset>
    <UseUnicrt>false</UseUnicrt>
    <UrtVer>4.5</UrtVer>
    <Use_Asmmeta>false</Use_Asmmeta>
  </PropertyGroup>
  <Import Project="$(NTMAKEENV)\Microsoft.Build.Settings" />
  <!-- Override Configuration from Microsoft.Build.Settings -->
  <PropertyGroup>
    <Configuration Condition="'$(_BuildType)' == 'fre' and '$(FreTest)' != 'true'">fre</Configuration>
    <Configuration Condition="'$(_BuildType)' == 'fre' and '$(FreTest)' == 'true'">fretest</Configuration>
    <Configuration Condition="'$(_BuildType)' == 'chk' and '$(FreTest)' != 'true'">chk</Configuration>
    <Configuration Condition="'$(_BuildType)' == 'chk' and '$(FreTest)' == 'true'">Invalid</Configuration>
  </PropertyGroup>
  <PropertyGroup Condition="'$(AllowChkTest)' == 'true' and '$(_BuildType)' == 'chk' and '$(FreTest)' == 'true'">
    <Configuration>chk</Configuration>
    <FreTest />
  </PropertyGroup>
  <PropertyGroup>   
    <RazzleJscriptObjectRoot>$(ObjectRoot)\inetcore\jscript</RazzleJscriptObjectRoot>
    <RazzleJscriptObjectDirectory Condition="'$(FreTest)' != 'true'">release\$(ObjectDirectory)</RazzleJscriptObjectDirectory>
    <RazzleJscriptObjectDirectory Condition="'$(FreTest)' == 'true'">test\$(ObjectDirectory)</RazzleJscriptObjectDirectory>

    <ManifestsInboxIncludeDirectory>$(ObjectRoot)\inetcore\manifests\inbox\$(ObjectDirectory)</ManifestsInboxIncludeDirectory>
    <ChakraManifestsIncludeDirectory>$(RazzleJscriptObjectRoot)\core\manifests\$(ObjectDirectory)</ChakraManifestsIncludeDirectory>
    <ChakraParserIntDir>$(RazzleJscriptObjectRoot)\core\lib\parser\$(RazzleJscriptObjectDirectory)</ChakraParserIntDir>
    <JscriptInfoIntDir>$(RazzleJscriptObjectRoot)\private\bin\chakra\test\$(ObjectDirectory)</JscriptInfoIntDir>
    
    <!-- Libraries -->
    <ChakraCommonCodexLib>$(RazzleJscriptObjectRoot)\core\lib\common\codex\$(ObjectDirectory)Chakra.Common.Codex.lib</ChakraCommonCodexLib>
    <ChakraCommonCoreLib>$(RazzleJscriptObjectRoot)\core\lib\common\core\$(RazzleJscriptObjectDirectory)Chakra.Common.Core.lib</ChakraCommonCoreLib>
    <ChakraCommonDataStructureLib>$(RazzleJscriptObjectRoot)\core\lib\common\datastructures\$(RazzleJscriptObjectDirectory)Chakra.Common.DataStructures.lib</ChakraCommonDataStructureLib>
    <ChakraCommonCommonLib>$(RazzleJscriptObjectRoot)\core\lib\common\common\$(RazzleJscriptObjectDirectory)Chakra.Common.Common.lib</ChakraCommonCommonLib>
    <ChakraCommonMemoryLib>$(RazzleJscriptObjectRoot)\core\lib\common\memory\$(RazzleJscriptObjectDirectory)Chakra.Common.Memory.lib</ChakraCommonMemoryLib>
    <ChakraRuntimeLanguageLib>$(RazzleJscriptObjectRoot)\core\lib\runtime\language\$(RazzleJscriptObjectDirectory)Chakra.Runtime.Language.lib</ChakraRuntimeLanguageLib>
    
    <ChakraCommonMinLibs>$(ChakraCommonMemoryLib)</ChakraCommonMinLibs>
    <ChakraCommonMinLibs>$(ChakraCommonMinLibs);$(ChakraCommonCoreLib)</ChakraCommonMinLibs>
    <ChakraCommonMinLibs>$(ChakraCommonMinLibs);$(ChakraCommonDataStructureLib)</ChakraCommonMinLibs>
    <ChakraCommonMinLibs>$(ChakraCommonMinLibs);$(RazzleJscriptObjectRoot)\core\lib\common\exceptions\$(RazzleJscriptObjectDirectory)Chakra.Common.Exceptions.lib</ChakraCommonMinLibs>

    <ChakraCommonLibs>$(ChakraCommonMinLibs)</ChakraCommonLibs>
    <ChakraCommonLibs>$(ChakraCommonLibs);$(ChakraCommonCommonLib)</ChakraCommonLibs>
    <ChakraCommonLibs>$(ChakraCommonLibs);$(RazzleJscriptObjectRoot)\core\lib\common\util\$(RazzleJscriptObjectDirectory)Chakra.Common.Util.lib</ChakraCommonLibs>
    <ChakraCommonLibs>$(ChakraCommonLibs);$(ChakraCommonCodexLib)</ChakraCommonLibs>

    <ChakraRuntimeLibs>$(RazzleJscriptObjectRoot)\core\lib\runtime\bytecode\$(RazzleJscriptObjectDirectory)Chakra.Runtime.Bytecode.lib</ChakraRuntimeLibs>
    <ChakraRuntimeLibs>$(ChakraRuntimeLibs);$(ChakraRuntimeLanguageLib)</ChakraRuntimeLibs>
    
    <ChakraRuntimeLibs>$(ChakraRuntimeLibs);$(RazzleJscriptObjectRoot)\core\lib\runtime\library\$(RazzleJscriptObjectDirectory)Chakra.Runtime.Library.lib</ChakraRuntimeLibs>
    <ChakraRuntimeLibs>$(ChakraRuntimeLibs);$(RazzleJscriptObjectRoot)\core\lib\runtime\math\$(RazzleJscriptObjectDirectory)Chakra.Runtime.Math.lib</ChakraRuntimeLibs>
    <ChakraRuntimeLibs>$(ChakraRuntimeLibs);$(RazzleJscriptObjectRoot)\core\lib\runtime\types\$(RazzleJscriptObjectDirectory)Chakra.Runtime.Types.lib</ChakraRuntimeLibs>   

    <ChakraParserLibs>$(ChakraParserIntDir)Chakra.Parser.lib</ChakraParserLibs>

    <ChakraBackendLibs>$(RazzleJscriptObjectRoot)\core\lib\backend\$(RazzleJscriptObjectDirectory)Chakra.Backend.lib</ChakraBackendLibs>

    <ChakraWinRTLibs>$(RazzleJscriptObjectRoot)\private\lib\winrt\$(RazzleJscriptObjectDirectory)Chakra.WinRT.lib</ChakraWinRTLibs>
    <ChakraTelemetryLibs>$(RazzleJscriptObjectRoot)\private\lib\telemetry\$(RazzleJscriptObjectDirectory)Chakra.Telemetry.lib</ChakraTelemetryLibs>
    <ChakraMemProtectHeapLibs>$(RazzleJscriptObjectRoot)\private\lib\memprotectheap\$(RazzleJscriptObjectDirectory)Chakra.MemProtectHeap.lib</ChakraMemProtectHeapLibs>
    
    <ChakraLibs>$(ChakraCommonLibs);$(ChakraRuntimeLibs);$(ChakraParserLibs);$(ChakraBackendLibs);$(ChakraWinRTLibs);$(ChakraTelemetryLibs);$(ChakraMemProtectHeapLibs)</ChakraLibs>


    <!-- MSBuild doesn't like MachineARM64 yet and Microsoft.CppCommon.targets strangly use ImpLibAdditionaOptions instead of ImpLib.AdditionalOptions -->
    <ImpLibAdditionalOptions Condition="'$(Platform)'=='Arm64'">/machine:arm64 $(ImpLibAdditionalOptions)</ImpLibAdditionalOptions>
  </PropertyGroup>
</Project>