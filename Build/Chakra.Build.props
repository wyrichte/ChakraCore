<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(ChakraCoreBuildDirectory)Common.Build.props" />
  <PropertyGroup>
    <!-- location of the nothrownew lib -->
    <NoThrowNewLib>$(InternalSdkLibPath)\nothrownew.lib</NoThrowNewLib>

    <!-- CFG is enabled for all architectures -->
    <CFG Condition="'$(CFG)'==''">true</CFG>

    <!-- ========= From tools\makefile.def ========= -->
    <!-- DLOAD handler -->
    <DelayImpLib Condition="'$(NtTargetVersion)'=='$(NtTargetVersion_Win7)'">$(MinWinPrivSdkLibPath)\dloadwin7helper.lib</DelayImpLib>
    <DelayImpLib Condition="'$(NtTargetVersion)'!='$(NtTargetVersion_Win7)'">$(SdkLibPath)\dloadhelper.lib;$(MinWinPrivSdkLibPath)\$(MinWinTargetVersionStr)\api-ms-win-core-delayload-l1.lib</DelayImpLib>

    <ApiSetTargetVersion_1_0>0x0100</ApiSetTargetVersion_1_0>
    <ApiSetTargetVersion_1_1>0x0101</ApiSetTargetVersion_1_1>
    <ApiSetTargetVersion_1_2>0x0102</ApiSetTargetVersion_1_2>
    <ApiSetTargetVersion_1_4>0x0104</ApiSetTargetVersion_1_4>

    <MinCoreTargetVersion_1_0>0x0100</MinCoreTargetVersion_1_0>
    <MinCoreTargetVersion_1_3>0x0103</MinCoreTargetVersion_1_3>

    <MinWinTargetVersion_1_0>0x0100</MinWinTargetVersion_1_0>
    <MinWinTargetVersion_1_1>0x0101</MinWinTargetVersion_1_1>
    <MinWinTargetVersion_1_4>0x0104</MinWinTargetVersion_1_4>

    <OneCoreTargetVersion_1_0>0x0100</OneCoreTargetVersion_1_0>
    <OneCoreTargetVersion_1_1>0x0101</OneCoreTargetVersion_1_1>
    <OneCoreTargetVersion_1_3>0x0103</OneCoreTargetVersion_1_3>
    <OneCoreTargetVersion_1_6>0x0106</OneCoreTargetVersion_1_6>


    <!-- ========= From tools\makefile.api ========= -->
    <ApiSetTargetVersion Condition="'$(NtTargetVersion)'=='$(NtTargetVersion_Win7)'">$(ApiSetTargetVersion_1_0)</ApiSetTargetVersion>
    <ApiSetTargetVersion Condition="'$(NtTargetVersion)'=='$(NtTargetVersion_Win8)'">$(ApiSetTargetVersion_1_1)</ApiSetTargetVersion>
    <ApiSetTargetVersion Condition="'$(NtTargetVersion)'=='$(NtTargetVersion_WinBlue)'">$(ApiSetTargetVersion_1_2)</ApiSetTargetVersion>
    <ApiSetTargetVersion Condition="'$(NtTargetVersion)'=='$(NtTargetVersion_Win10)'">$(ApiSetTargetVersion_1_4)</ApiSetTargetVersion>

    <MinWinTargetVersion Condition="'$(ApiSetTargetVersion)'=='$(ApiSetTargetVersion_1_0)'">$(MinWinTargetVersion_1_0)</MinWinTargetVersion>
    <MinWinTargetVersion Condition="'$(ApiSetTargetVersion)'=='$(ApiSetTargetVersion_1_1)'">$(MinWinTargetVersion_1_1)</MinWinTargetVersion>
    <MinWinTargetVersion Condition="'$(ApiSetTargetVersion)'=='$(ApiSetTargetVersion_1_2)'">$(MinWinTargetVersion_1_1)</MinWinTargetVersion>
    <MinWinTargetVersion Condition="'$(ApiSetTargetVersion)'=='$(ApiSetTargetVersion_1_4)'">$(MinWinTargetVersion_1_4)</MinWinTargetVersion>

    <MinWinTargetVersionStr Condition="'$(MinWinTargetVersion)'=='$(MinWinTargetVersion_1_0)'">1.0</MinWinTargetVersionStr>
    <MinWinTargetVersionStr Condition="'$(MinWinTargetVersion)'=='$(MinWinTargetVersion_1_1)'">1.1</MinWinTargetVersionStr>
    <MinWinTargetVersionStr Condition="'$(MinWinTargetVersion)'=='$(MinWinTargetVersion_1_4)'">1.4</MinWinTargetVersionStr>

    <MinCoreTargetVersion Condition="'$(ApiSetTargetVersion)'&lt;='$(ApiSetTargetVersion_1_1)'">$(MinCoreTargetVersion_1_0)</MinCoreTargetVersion>
    <MinCoreTargetVersion Condition="'$(ApiSetTargetVersion)'&lt;='$(ApiSetTargetVersion_1_2)'">$(MinCoreTargetVersion_1_0)</MinCoreTargetVersion>
    <MinCoreTargetVersion Condition="'$(ApiSetTargetVersion)'=='$(ApiSetTargetVersion_1_4)'">$(MinCoreTargetVersion_1_3)</MinCoreTargetVersion>

    <MinCoreTargetVersionStr Condition="'$(MinCoreTargetVersion)'=='$(MinCoreTargetVersion_1_0)'">1.0</MinCoreTargetVersionStr>
    <MinCoreTargetVersionStr Condition="'$(MinCoreTargetVersion)'=='$(MinCoreTargetVersion_1_3)'">1.3</MinCoreTargetVersionStr>

    <OneCoreTargetVersion Condition="'$(ApiSetTargetVersion)'&lt;='$(ApiSetTargetVersion_1_1)'">$(OneCoreTargetVersion_1_0)</OneCoreTargetVersion>
    <OneCoreTargetVersion Condition="'$(ApiSetTargetVersion)'&lt;='$(ApiSetTargetVersion_1_2)'">$(OneCoreTargetVersion_1_1)</OneCoreTargetVersion>
    <OneCoreTargetVersion Condition="'$(ApiSetTargetVersion)'=='$(ApiSetTargetVersion_1_4)'">$(OneCoreTargetVersion_1_6)</OneCoreTargetVersion>

    <OneCoreTargetVersionStr Condition="'$(OneCoreTargetVersion)'=='$(OneCoreTargetVersion_1_0)'">1.0</OneCoreTargetVersionStr>
    <OneCoreTargetVersionStr Condition="'$(OneCoreTargetVersion)'=='$(OneCoreTargetVersion_1_1)'">1.1</OneCoreTargetVersionStr>
    <OneCoreTargetVersionStr Condition="'$(OneCoreTargetVersion)'=='$(OneCoreTargetVersion_1_3)'">1.3</OneCoreTargetVersionStr>
    <OneCoreTargetVersionStr Condition="'$(OneCoreTargetVersion)'=='$(OneCoreTargetVersion_1_6)'">1.6</OneCoreTargetVersionStr>

    <WindowsVersionStr Condition="'$(ApiSetTargetVersion)'&lt;='$(ApiSetTargetVersion_1_1)'">6.2</WindowsVersionStr>
    <WindowsVersionStr Condition="'$(ApiSetTargetVersion)'&lt;='$(ApiSetTargetVersion_1_2)'">6.3</WindowsVersionStr>
    <WindowsVersionStr Condition="'$(ApiSetTargetVersion)'=='$(ApiSetTargetVersion_1_4)'">10.0</WindowsVersionStr>


    <!-- ========= From tools\makefile.def ========= -->
    <DelayImpLib Condition="'$(NtTargetVersion)'=='$(NtTargetVersion_Win7)'">$(MinWinPrivSdkLibPath)\dloadwin7helper.lib</DelayImpLib>
    <DelayImpLib Condition="'$(NtTargetVersion)'!='$(NtTargetVersion_Win7)'">$(SdkLibPath)\dloadhelper.lib;$(MinWinPrivSdkLibPath)\$(MinWinTargetVersionStr)\api-ms-win-core-delayload-l1.lib</DelayImpLib>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <!-- ========= For IESettings.h ========= -->
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories);$(PublicInternalPath)\inetcore\inc</AdditionalIncludeDirectories>

      <!-- ========= For GlobalMSRCSettings.h ========= -->
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories);$(BaseDataPath)\MSRC</AdditionalIncludeDirectories>

      <!-- ========= For CULHeapAllocHelpers.h (referenced in IESettings.h) ========= -->
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories);$(PublicInternalPath)\shell\inc</AdditionalIncludeDirectories>

      <!-- ========= For holdplaceholder.h (referenced in jnhelpermethod.cpp) ========= -->
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories);$(ChakraRootDirectory)private\lib\placeholder</AdditionalIncludeDirectories>

      <!-- ========= From inetcore\project.mk =========-->
      <PreprocessorDefinitions>%(PreprocessorDefinitions);CULDEBUG_USE_NTASSERT</PreprocessorDefinitions>

      <!-- ========= From tools\makefile.def ========= -->
      <!-- Removing the flag implicitNoexcept causes unreferenced error on __std_terminate.
      As per the wiki https://osgwiki.com/wiki/Windows_C%2B%2B_Toolset_Status#The_-Zc:implicitNoexcept-_Compiler_Switch
      we have to wait until the fix for it to come to our branch to remove that flag -->
      <AdditionalOptions>%(AdditionalOptions) -Zc:sizedDealloc- -Zc:implicitNoexcept-</AdditionalOptions>
      <AdditionalOptions>%(AdditionalOptions) /d2AllowCompatibleILVersions /d2Zi+</AdditionalOptions>
      <!-- Disable __DATE__ and __TIME__ macro on fre to prevent screwing up servicing -->
      <AdditionalOptions Condition="'$(OptimizedBuild)'=='true'">%(AdditionalOptions) /d1nodatetime</AdditionalOptions>
      <!-- Fix amd64chk build break error C1128: number of sections exceeded object file format limit: compile with /bigobj -->
      <AdditionalOptions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalOptions) /bigobj</AdditionalOptions>

      <!-- this is the default in the headers anyways, here just to be explicit -->
      <PreprocessorDefinitions>%(PreprocessorDefinitions);_USE_DECLSPECS_FOR_SAL=1</PreprocessorDefinitions>

      <!-- ========= From tools\<platform>mk.inc -->
      <!-- Force no_registry search for type libraries (we have #import mscorlib.tlb) -->
      <AdditionalOptions>%(AdditionalOptions) /d1import_no_registry</AdditionalOptions>

      <!-- ========= From tools\armmk.inc ========= -->
      <AdditionalOptions Condition="'$(Platform)'=='ARM'">%(AdditionalOptions) /arch:VFPv3-D16 /Gs4096</AdditionalOptions>

      <!-- ========= From inetcore\jscript\project.mk ========= -->
      <PreprocessorDefinitions>%(PreprocessorDefinitions);NTBUILD;NO_SHLWAPI_ISOS</PreprocessorDefinitions>
      <AdditionalOptions Condition="'$(Platform)'=='Win32'">%(AdditionalOptions) /d2noftol3</AdditionalOptions>
      <AdditionalOptions Condition="'$(Platform)'=='x64'">%(AdditionalOptions) /homeparams</AdditionalOptions>
      <EnableEnhancedInstructionSet Condition="'$(Platform)'=='Win32'">NoExtensions</EnableEnhancedInstructionSet>

      <!-- ========= Microsoft.Build.Cpp.Default.props ========= -->
      <!-- These are already defined in Microsoft.Build.Cpp.Default.props, have it here too so that the non-Razzle build will be the same -->
      <!-- /Zc:wchar_t- -->
      <TreatWChar_tAsBuiltInType>false</TreatWChar_tAsBuiltInType>

      <!-- ========= Microsoft.Cl.Common.props defaults ========= -->
      <!-- No /RTC -->
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <SmallerTypeCheck>false</SmallerTypeCheck>

      <!-- /Zl -->
      <OmitDefaultLibName>true</OmitDefaultLibName>

      <!-- Enable Minimal rebuild inside VS, we can expand it if it is worth while (minmial rebuild has PCH problem with optimized build -->
      <MinimalRebuild>false</MinimalRebuild>
      <MinimalRebuild Condition="'$(BuildingInsideVisualStudio)'=='true' AND '$(Configuration)' == 'Debug'">true</MinimalRebuild>

      <AdditionalIncludeDirectories>
        %(AdditionalIncludeDirectories);
        $(ChakraRootDirectory)private\lib\Telemetry;
        $(ChakraRootDirectory)private\lib\MemProtectHeap;
        $(ChakraRootDirectory)tools\external\inc;
      </AdditionalIncludeDirectories>

      <!-- REVIEW: These are warning are introduced when moving to Dev12_LKG tools, may want to clean these up -->
      <DisableSpecificWarnings>
        %(DisableSpecificWarnings);
        4458;     <!-- declaration of '' hides class memeber -->
      </DisableSpecificWarnings>

    </ClCompile>

    <Link>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>

      <!-- ======== From makefile.def ======== -->
      <!-- REVIEW: NOOPTIDATA is undocumented, prevent .idata to be merged into .text-->
      <AdditionalOptions>%(AdditionalOptions) /NOVCFEATURE /NOOPTIDATA /SECTION:.idata,R</AdditionalOptions>
      <AdditionalOptions Condition="'$(Platform)'!='x64'">%(AdditionalOptions) /merge:.rdata=.text</AdditionalOptions>
      <!--# merge .orpc sections with .text. .orpc is used by older versions of the VS
          # debugger to automatically step over marshalling code. -->
      <AdditionalOptions>%(AdditionalOptions) /merge:.orpc=.text</AdditionalOptions>
      <Version>$(LinkerAppVersion)</Version>
      <AdditionalOptions>%(AdditionalOptions) /osversion:$(LinkerOSVersion)</AdditionalOptions>

      <!-- Clear all the library and we build our own lib list -->
      <AdditionalDependencies />
      <!-- CRT -->
      <AdditionalDependencies>
        $(AdditionalDependencies);
        $(SdkLibPath)\msvcrt.lib;
        $(InternalSdkLibPath)\ucrtshims_msvcrt.lib
      </AdditionalDependencies>

      <!-- Incremental LTCG crashes the razzle version of the compiler a lot, disable for now -->
      <LinkTimeCodeGeneration Condition="'%(LinkTimeCodeGeneration)'=='UseFastLinkTimeCodeGeneration'">UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
    </Link>
    <ImpLib>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <TreatLinkerWarningAsErrors>true</TreatLinkerWarningAsErrors>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>
        $(AdditionalDependencies);
        $(SdkLibPath)\msvcrt.lib;
        $(InternalSdkLibPath)\ucrtshims_msvcrt.lib
      </AdditionalDependencies>
    </ImpLib>
  </ItemDefinitionGroup>

  <!-- CFG - From tools\managed\Customizations\Razzle\Microsoft.Build.CFG.props -->
  <ItemDefinitionGroup Condition="'$(CFG)'=='true'">
    <ClCompile>
      <AdditionalOptions>%(AdditionalOptions) /guard:cf</AdditionalOptions>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);_CONTROL_FLOW_GUARD=1;_CONTROL_FLOW_GUARD_SVCTAB=1</PreprocessorDefinitions>

      <!-- /guard:cf, which also turn on /d2guardgsforcfg, which cause binary size regressions, explicitly turn it off -->
      <AdditionalOptions>%(AdditionalOptions) /d2guardgsforcfg-</AdditionalOptions>
      <AdditionalOptions Condition="'$(Platform)'=='Win32'">/d2guardcheckesp2 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalOptions Condition="'$(Platform)'!='ARM' and '$(Platform)'!='Arm64'">%(AdditionalOptions) /d2psvcallopt150000</AdditionalOptions>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);_CONTROL_FLOW_GUARD=1;_CONTROL_FLOW_GUARD_SVCTAB=1</PreprocessorDefinitions>
    </ResourceCompile>
    <MASM>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);_CONTROL_FLOW_GUARD=1;_CONTROL_FLOW_GUARD_SVCTAB=1</PreprocessorDefinitions>
    </MASM>
    <ARMASM>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);_CONTROL_FLOW_GUARD=1;_CONTROL_FLOW_GUARD_SVCTAB=1</PreprocessorDefinitions>
    </ARMASM>
    <Link>
      <AdditionalOptions>%(AdditionalOptions) /guard:cf</AdditionalOptions>
      <!-- /guard:cf also turns on /d2guardgsforcfg, which cause binary size regressions, explicitly turn it off -->
      <AdditionalOptions>%(AdditionalOptions) /d2:-guardgsforcfg-</AdditionalOptions>
    </Link>
  </ItemDefinitionGroup>

  <Import Condition="'$(ProjectName)' == 'wabt'" Project="$(MSBuiltThisFileDirectory)..\private\lib\wabt\wabt.Build.props" />

  <!-- Manifest dependency -->
  <ItemDefinitionGroup Condition="'$(ProjectName)' != 'Manifests'">
    <ClCompile>
      <AdditionalIncludeDirectories>
        %(AdditionalIncludeDirectories);
        $(ChakraManifestsIncludeDirectory);
        $(InstrumentationManifestIncludeDirectory)
      </AdditionalIncludeDirectories>
    </ClCompile>
    <ResourceCompile>
      <AdditionalIncludeDirectories>
        %(AdditionalIncludeDirectories);
        $(ChakraManifestsIncludeDirectory);
        $(InstrumentationManifestIncludeDirectory)
      </AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ProjectReference Condition="'$(MSBuildProjectName)' != 'Publish' AND '$(BuildRazzleDependencies)'=='true'" Include="$(MSBuildThisDirectory)\..\publish\Publish.vcxproj">
      <Project>{1876e800-ad77-48c4-a2f7-e5265f24ac35}</Project>
    </ProjectReference>
    <ProjectReference Condition="'$(MSBuildProjectName)' != 'Manifests'" Include="$(MsBuildThisFileDirectory)..\private\Manifests\Manifests.vcxproj">
      <Project>{bcc5c029-2f2c-4eaa-8e60-664d72766936}</Project>
    </ProjectReference>
  </ItemGroup>

  <!-- Link dependencies for projects that link with Chakra libraries -->
  <PropertyGroup>
    <ChakraCommonLinkDependencies>
        $(OneCoreSdkLibPath)\$(OneCoreTargetVersionStr)\onecore.lib;
        $(MinCoreSdkLibPath)\mincore_fw.lib;
        $(SdkLibPath)\ntdll.lib;
        <!-- For FindAtom/AddAtom/DeleteAttom, and in non-fre build perf counters and Crypt* and IsMessageBoxWPresent dependency -->
        $(MinCorePrivSdkLibPath)\$(MinCoreTargetVersionStr)\mincore_private.lib;
    </ChakraCommonLinkDependencies>
    <RLCommonLinkDependencies>
      $(SdkLibPath)\onecore_downlevel.lib
    </RLCommonLinkDependencies>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OptimizedBuild)'!='true'">
    <ChakraCommonLinkDependencies>
        $(ChakraCommonLinkDependencies);
        $(SdkLibPath)\dbghelp.lib;

        <!-- For IsMessageBoxWPresent -->
        $(MinCorePrivSdkLibPath)\$(MinCoreTargetVersionStr)\ext-ms-win-ntuser-dialogbox-l1.lib
    </ChakraCommonLinkDependencies>
  </PropertyGroup>

  <Import Condition="'$(BuildingWithBuildExe)'=='true'" Project="Chakra.Build.Razzle.props" />
  <Import Condition="'$(BuildingWithBuildExe)'!='true'" Project="Chakra.Build.Solution.props" />
</Project>
