<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <BuildingGitRepo>true</BuildingGitRepo>
    <BuildingGitRepo Condition="'$(PUBLIC_ROOT)'!=''">false</BuildingGitRepo>

    <UseUniCrt Condition="'$(UseUniCrt)' == '' and '$(_CHAKRA_UCRT_BUILD)' != ''">true</UseUniCrt>
    <UseUniCrt Condition="'$(_CHAKRA_UCRT_BUILD)' == ''">false</UseUniCrt>
    <DebugUCRT />
    <DebugUCRT Condition="'$(Configuration)'!='Release' and '$(Configuration)'!='Test'">d</DebugUCRT>
    <StlVersion Condition="'$(UseUniCrt)' == 'true'">StlVerCurrent</StlVersion>
    <UseStl Condition="'$(UseUniCrt)' == 'true'">true</UseStl>
    <UseStl Condition="'$(UseStl)' == '' and '$(UseUniCrt)' == 'false'">false</UseStl>
    <StlUnicrtAllowed Condition="'$(UseUniCrt)' == 'true'">true</StlUnicrtAllowed>
    <!-- Use Program-mode uCRT -->
    <_UcrtUseProgramModeGlobalState Condition="'$(UseUniCrt)' == 'true'">true</_UcrtUseProgramModeGlobalState>
  </PropertyGroup>

  <ItemDefinitionGroup>
    <ClCompile>
      <!-- Workaround for core dependency on IE MSRC macros. Remove when we no longer need GlobalMSRCSettings, and do not allow to make it to OSS. -->
      <ForcedIncludeFiles>GlobalMSRCSettings.h</ForcedIncludeFiles>
    </ClCompile>
  </ItemDefinitionGroup>

  <Import Condition="'$(BuildingWithBuildExe)'=='true'" Project="Chakra.Build.Razzle.Default.props" />
  <ImportGroup Condition="'$(BuildingWithBuildExe)'!='true'">
    <Import Project="$(ChakraCoreBuildDirectory)Common.Build.Default.props" />

    <!-- Git only pre-configurations-->
    <Import Condition="'$(BuildingGitRepo)'=='true'" Project="Chakra.Build.Git.Default.props" />

    <!-- Import for both Git build and solution with razzle build -->
    <Import Project="Chakra.Build.Solution.Default.props" />
  </ImportGroup>
  <PropertyGroup>
    <!-- Disable building Wabt in ChakraFull until issues are resolved -->
    <BuildWabt>false</BuildWabt>
  </PropertyGroup>
  <!-- razzle solution build will use fake dependencies -->
  <PropertyGroup Condition="'$(BuildingWithBuildExe)'!='true' AND '$(BuildingGitRepo)'!='true'">
    <BuildRazzleDependencies>true</BuildRazzleDependencies>
  </PropertyGroup>
  <!-- For dev build -->
  <PropertyGroup Condition="'$(ChakraVersionBuildCommit)'==''" >
    <ChakraVersionBuildCommit>$(COMPUTERNAME)($(UserName))</ChakraVersionBuildCommit>
  </PropertyGroup>
  <!-- Common build settings -->
  <PropertyGroup>
    <NtTargetVersion>$(NtTargetVersion_WinBlue)</NtTargetVersion>
  </PropertyGroup>
  <!-- Release builds should target RS2 -->
  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <NtTargetVersion >$(NtTargetVersion_Win10)</NtTargetVersion>
    <NTDDIVersion>0x0A000003</NTDDIVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ChakraICU)'==''">
    <ChakraICU>windows</ChakraICU>
    <IcuVersionMajor>61</IcuVersionMajor>
  </PropertyGroup>

</Project>
