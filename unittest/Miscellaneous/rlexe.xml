<?xml version="1.0" encoding="utf-8"?>
<regress-exe>
<!-- ByteCode Header verification tests begin -->
  <test>
    <default>
      <files>../../private/lib/Projection/InJavascript/Promise.js</files>
      <baseline>../../private/lib/Projection/InJavascript/Promise.js.bc.32b.h</baseline>
      <compile-flags>-GenerateLibraryByteCodeHeader -Intl</compile-flags>
      <!-- OS# 15765741:  [RS4] Disabled ByteCode Header verification test as it uses relative paths that don't exist on the DRT VM. -->
      <tags>exclude_dynapogo,exclude_amd64,exclude_drt,exclude_forceserialized</tags>
      <eol-normalization />
    </default>
  </test>
  <test>
    <default>
      <files>../../private/lib/Projection/InJavascript/Promise.js</files>
      <baseline>../../private/lib/Projection/InJavascript/Promise.js.bc.64b.h</baseline>
      <compile-flags>-GenerateLibraryByteCodeHeader -Intl</compile-flags>
      <!-- OS# 15765741:  [RS4] Disabled ByteCode Header verification test as it uses relative paths that don't exist on the DRT VM. -->
      <tags>exclude_dynapogo,exclude_x86,exclude_drt,exclude_forceserialized</tags>
      <eol-normalization />
    </default>
  </test>
<!-- ByteCode Header verification tests end -->
  <test>
    <default>
      <files>ByteCodeVerification.js</files>
      <baseline>ByteCodeVerification.baseline</baseline>
      <compile-flags>-ByteCodeVerification ByteCodeVerification.baseline</compile-flags>
      <tags>exclude_fre,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>DebugGetTypeHandlerName.js</files>
      <baseline>DebugGetTypeHandlerName.baseline</baseline>
      <tags>exclude_fre,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>DebugGetArrayType.js</files>
      <baseline>DebugGetArrayType.baseline</baseline>
      <tags>exclude_fre,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>propertyStringCacheBug.html</files>
      <!--This html test uses WebWorker and running into DOM leak (CWorkerGlobalScope keeps pinned). Pinged Trident.-->
      <compile-flags>-CheckMemoryLeak-</compile-flags>
      <tags>exclude_fre</tags>
    </default>
  </test>
  <test>
    <default>
      <files>wscriptfunc.js</files>
      <baseline>wscriptfunc.baseline</baseline>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>evalCSP.js</files>
      <baseline>evalCSP.baseline</baseline>
      <compile-flags>-ES7AsyncAwait -EvalRestriction -maxInterpretCount:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>neuterApi.js</files>
      <baseline>neuterApi.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>neuterApi_1.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>typeinfotest.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>etwtest.js</files>
      <baseline />
      <compile-flags>-testEtwDll:NativeUnitTests.dll</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>AllocUnder3gb.js</files>
      <baseline>AllocUnder3gb_LowLimit.baseline</baseline>
      <compile-flags>-AllocPolicyLimit:400 -EnableFatalErrorOnOOM-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>AllocUnder3gb.js</files>
      <compile-flags>-AllocPolicyLimit:1000</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>AllocUnder3gb.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>AllocAbove3gb.js</files>
      <compile-flags>-EnableFatalErrorOnOOM-</compile-flags>
      <baseline>AllocAbove3gb_unlimited.baseline</baseline>
      <tags>exclude_arm,exclude_x86</tags>
    </default>
  </test>
</regress-exe>
