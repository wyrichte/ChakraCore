<?xml version="1.0" encoding="utf-8"?>
<regress-exe>
  <test>
    <default>
      <files>richards.js</files>
      <compile-flags>-debuglaunch -Intl- -DeferLoadingAvailableSource</compile-flags>
      <tags>Slow,Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>functionDebuggerTest.js</files>
      <compile-flags>-debuglaunch -auto -es6functionnamefull -dbgbaseline:functionDebuggerTest.debugger.baseline -Intl-  -DeferLoadingAvailableSource</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>simpletest.js</files>
      <compile-flags>-debuglaunch -auto -dbgbaseline:simpletest.debugger.baseline -Intl-  -DeferLoadingAvailableSource</compile-flags>
      <baseline>simpletest.baseline</baseline>
      <tags>fail_mutators,Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>simpletest.js</files>
      <compile-flags>-jsrt -debuglaunch -auto -dbgbaseline:simpletest.debugger.jsrt.baseline -Intl- -DeferLoadingAvailableSource</compile-flags>
      <baseline>simpletest.baseline</baseline>
      <tags>fail_mutators,Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testForNoAOObject.js</files>
      <compile-flags>-debuglaunch -auto -es6functionnamefull -dbgbaseline:testForNoAOObject.debugger.baseline -Intl- -DeferLoadingAvailableSource</compile-flags>
      <baseline>testForNoAOObject.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testForNoAOObject.js</files>
      <compile-flags>-jsrt -debuglaunch -es6functionnamefull -auto -dbgbaseline:testForNoAOObject.debugger.jsrt.baseline -DeferLoadingAvailableSource</compile-flags>
      <baseline>testForNoAOObject.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>targeted.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:targeted.js.dbg.baseline -Intl- -ES6- -DeferLoadingAvailableSource</compile-flags>
      <baseline>targeted.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>targeted.js</files>
      <compile-flags>-jsrt -debuglaunch -targeted -dbgbaseline:targeted.js.dbg.jsrt.baseline -Intl- -ES6- -DeferLoadingAvailableSource</compile-flags>
      <baseline>targeted.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicattach1.js</files>
      <compile-flags>-dbgbaseline:testdynamicattach1.js.dbg.baseline -Intl- -DeferLoadingAvailableSource</compile-flags>
      <baseline>testdynamicattach1.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicattach1.js</files>
      <command>jdtest.exe -dbgbaseline:testdynamicattach1.js.dbg.baseline -auto -dynamicattach jshost</command>
      <compile-flags>-Intl- -DeferLoadingAvailableSource</compile-flags>
      <baseline>testdynamicattach1.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicattach1.js</files>
      <compile-flags>-automaticsourcerundown -dbgbaseline:testdynamicattach1.js.dbg.baseline -Intl- -DeferLoadingAvailableSource</compile-flags>
      <baseline>testdynamicattach1.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicattach1.js</files>
      <compile-flags>-jsrt -dbgbaseline:testdynamicattach1.js.dbg.jsrt.baseline -Intl- -DeferLoadingAvailableSource</compile-flags>
      <baseline>testdynamicattach1.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicattach1.js</files>
      <compile-flags>-jsrt -automaticsourcerundown -dbgbaseline:testdynamicattach1.js.dbg.jsrt.baseline -Intl- -DeferLoadingAvailableSource</compile-flags>
      <baseline>testdynamicattach1.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicattach1.js</files>
      <compile-flags>-hostmanagedsource -dbgbaseline:testdynamicattach1.js.dbg.baseline -Intl- -DeferLoadingAvailableSource</compile-flags>
      <baseline>testdynamicattach1_1.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicattach1.js</files>
      <compile-flags>-hostmanagedsource -automaticsourcerundown -dbgbaseline:testdynamicattach1.js.dbg.baseline -Intl- -DeferLoadingAvailableSource</compile-flags>
      <baseline>testdynamicattach1_1.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>protoTest.js</files>
      <compile-flags>-debuglaunch -auto -Intl- -dbgbaseline:protoTest.js.dbg.baseline -DeferLoadingAvailableSource</compile-flags>
      <baseline>protoTest.baseline</baseline>
      <tags>fail_mutators,exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>protoTest2.js</files>
      <compile-flags>-targeted -debuglaunch -dbgbaseline:protoTest2.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>protoTest2.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:protoTest2.js.dbg.baseline jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl- -DeferLoadingAvailableSource</compile-flags>
      <tags>exclude_jsrt,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>breakpoints.js</files>
      <command>jdtest.exe -dbgbaseline:breakpoints.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl- -DeferLoadingAvailableSource</compile-flags>
      <tags>exclude_jsrt,exclude_dynapogo,exclude_amd64</tags>
    </default>
  </test>
  <test>
    <default>
      <files>breakpoints.js</files>
      <compile-flags>-targeted -dbgbaseline:breakpoints.js.dbg.baseline -debuglaunch -Intl-</compile-flags>
      <tags>exclude_jsrt,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>array_protoTest.js</files>
      <compile-flags>-debuglaunch -Intl- -targeted -dbgbaseline:array_prototest.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>setnextstatement.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:setnextstatement.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>setnextstatement2.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:setnextstatement2.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicattach2.js</files>
      <compile-flags>-es6functionnamefull -dbgbaseline:testdynamicattach2.js.dbg.baseline -Intl-</compile-flags>
      <baseline>testdynamicattach2.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>attachWithDeferParse.js</files>
      <compile-flags>-force:deferparse -es6functionnamefull -targeted -dbgbaseline:attachWithDeferParse.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>deferParseDetach.js</files>
      <compile-flags>-force:deferparse -targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>deferParseDetach2.js</files>
      <compile-flags>-force:deferparse -targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>catchInspection.js</files>
      <compile-flags>-debuglaunch -es6functionnamefull -targeted -dbgbaseline:catchInspection.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>catchInspection.js</files>
      <command>jdtest.exe -dbgbaseline:catchInspection.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -es6functionnamefull -Intl- -DeferLoadingAvailableSource</compile-flags>
      <tags>exclude_jsrt,exclude_dynapogo,Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>evaluate.js</files>
      <compile-flags>-targeted -debuglaunch -dbgbaseline:evaluate.js.dbg.baseline -InspectMaxStringLength:100 -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>evaluate.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:evaluate.js.hybrid.dbg.baseline -InspectMaxStringLength:100 jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>exclude_jsrt,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>intlib.js</files>
      <baseline>intlib.baseline</baseline>
      <compile-flags>-targeted -debuglaunch -dbgbaseline:intlib.js.dbg.baseline -Intl -LibraryStackFrame</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>intlib.js</files>
      <baseline>intlib.baseline</baseline>
      <compile-flags>-targeted -debuglaunch -dbgbaseline:intlib.js.legacy_debugger.dbg.baseline -Intl -LibraryStackFrame -NoLibraryStackFrameDebugger</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>intlib.js</files>
      <baseline>intlib.hybrid.baseline</baseline>
      <command>jdtest.exe -targeted -dbgbaseline:intlib.js.hybrid.dbg.baseline jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl -LibraryStackFrame</compile-flags>
      <tags>exclude_jsrt,exclude_dynapogo,Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_os_4032860.js</files>
      <tags>BugFix</tags>
    </default>
  </test>
  <test>
    <default>
      <files>indexprop.js</files>
      <compile-flags>-targeted -debuglaunch -dbgbaseline:indexprop.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>indexprop.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:indexprop.js.dbg.baseline jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>exclude_jsrt,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>funcSource.js</files>
      <compile-flags>-targeted -Intl- -inspectmaxstringlength:100 -debuglaunch -dbgbaseline:funcSource.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>funcSource.js</files>
      <command>jdtest.exe -targeted -inspectmaxstringlength:100 -dbgbaseline:funcSource.js.dbg.baseline jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>funcExprName.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:funcExprName.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>attachAfterException.js</files>
      <compile-flags>-targeted -dbgbaseline:attachAfterException.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>attachAfterException.js</files>
      <compile-flags>-targeted -automaticsourcerundown -dbgbaseline:attachAfterException.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>attachdetach-delaycapture.js</files>
      <compile-flags>-dbgbaseline:attachdetach-delaycapture.js.dbg.baseline</compile-flags>
      <tags>BugFix</tags>
    </default>
  </test>
  <test>
    <default>
      <files>globalFuncVars.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:globalFuncVars.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>simplePropCheck.js</files>
      <compile-flags>-automaticsourcerundown -dbgbaseline:simplePropCheck.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>Error.Constructor.js</files>
      <compile-flags>-force:deferparse -targeted -dbgbaseline:Error.Constructor.js.dbg.baseline</compile-flags>
      <baseline>Error.Constructor.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>Error.Constructor.js</files>
      <compile-flags>-force:deferparse -targeted -automaticsourcerundown -dbgbaseline:Error.Constructor.js.dbg.baseline</compile-flags>
      <baseline>Error.Constructor.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>localsScopeChain.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:localsScopeChain.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>localsScopeChain.js</files>
      <command>jdtest.exe -dbgbaseline:localsScopeChain.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>exclude_jsrt,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>fullNameNonLiteralPropertyTest.js</files>
      <compile-flags>-dbgbaseline:fullNameNonLiteralPropertyTest.es6.js.dbg.baseline -InspectMaxStringLength:100 -Intl- -debuglaunch -targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>fullNameNonLiteralPropertyTest.js</files>
      <compile-flags>-dbgbaseline:fullNameNonLiteralPropertyTest.js.dbg.baseline -InspectMaxStringLength:100 -Intl- -debuglaunch -targeted -es6-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>fullNameNegativePropertyTest.js</files>
      <compile-flags>-dbgbaseline:fullNameNegativePropertyTest.js.dbg.baseline -InspectMaxStringLength:100 -Intl- -debuglaunch -targeted -es6-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>fullNameNegativePropertyTest.js</files>
      <compile-flags>-dbgbaseline:fullNameNegativePropertyTest.es6.js.dbg.baseline -InspectMaxStringLength:100 -Intl- -debuglaunch -targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>fullNameGlobalsTest.js</files>
      <compile-flags>-dbgbaseline:fullNameGlobalsTest.js.dbg.baseline -InspectMaxStringLength:100 -Intl- -debuglaunch -targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>fullNameMapTest.js</files>
      <compile-flags>-ES6Species -dbgbaseline:fullNameMapTest.js.dbg.baseline -InspectMaxStringLength:100 -Intl- -debuglaunch -targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>fullNameMethodsTest.js</files>
      <compile-flags>-dbgbaseline:fullNameMethodsTest.js.dbg.baseline -InspectMaxStringLength:100 -Intl- -debuglaunch -targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>fullNameMethodsTest.js</files>
      <command>jdtest.exe -dbgbaseline:fullNameMethodsTest.js.dbg.baseline -InspectMaxStringLength:100 -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>exclude_jsrt,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>fullNameScopeTest.js</files>
      <compile-flags>-dbgbaseline:fullNameScopeTest.js.dbg.baseline -InspectMaxStringLength:100 -Intl- -debuglaunch -targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>fullNameSetTest.js</files>
      <compile-flags>-ES6Species -dbgbaseline:fullNameSetTest.js.dbg.baseline -InspectMaxStringLength:100 -Intl- -debuglaunch -targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>fullNameWeakMapTest.js</files>
      <compile-flags>-dbgbaseline:fullNameWeakMapTest.js.dbg.baseline -InspectMaxStringLength:100 -Intl- -debuglaunch -targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>fullNameWeakSetTest.js</files>
      <compile-flags>-dbgbaseline:fullNameWeakSetTest.js.dbg.baseline -InspectMaxStringLength:100 -Intl- -debuglaunch -targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSlotArrayCaptureAttach.js</files>
      <compile-flags>-targeted -InspectMaxStringLength:33 -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSlotArrayCapture.js</files>
      <compile-flags>-InspectMaxStringLength:33 -debuglaunch -targeted -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <!-- issue with the hybrid debugger. Will fix in a subsequent change.
  <test>
    <default>
      <files>blockScopeSlotArrayCapture.js</files>
      <command>jdtest.exe -targeted -InspectMaxStringLength:33 jshost</command>
      <compile-flags> -debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
   -->
  <test>
    <default>
      <files>blockScopeActivationObjectCapture.js</files>
      <command>jdtest.exe -targeted -InspectMaxStringLength:33 jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeActivationObjectCapture.js</files>
      <compile-flags>-InspectMaxStringLength:33 -debuglaunch -targeted -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeActivationObjectAsSlotArray.js</files>
      <command>jdtest.exe -targeted -InspectMaxStringLength:150 -dbgbaseline:blockScopeActivationObjectAsSlotArray.js.hybrid.dbg.baseline jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeActivationObjectAsSlotArray.js</files>
      <compile-flags>-InspectMaxStringLength:150 -debuglaunch -targeted -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeBasicLetConstTest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeBasicLetConstTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <!--
  <test>
    <default>
      <files>blockScopeBasicLetConstTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeBasicLetConstTest.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-Intl- -debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
   Disabled for Arguments[Symbol.iterator] workItem -Falotfi -->
  <test>
    <default>
      <files>blockScopeBasicScopingTest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeBasicScopingTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeBasicScopingTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeBasicScopingTest.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeNestedFunctionTest.js</files>
      <compile-flags>-InspectMaxStringLength:33 -debuglaunch -targeted -dbgbaseline:blockScopeNestedFunctionTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeNestedFunctionTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeNestedFunctionTest.js.dbg.baseline -targeted -InspectMaxStringLength:33 jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeForTest.bug183991.js</files>
      <compile-flags>-InspectMaxStringLength:33 -debuglaunch -targeted -dbgbaseline:blockScopeForTest.bug183991.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeForTest.bug183991.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeForTest.bug183991.js.dbg.baseline -targeted -InspectMaxStringLength:33 jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeDeadZoneTest.js</files>
      <compile-flags>-InspectMaxStringLength:33 -debuglaunch -targeted -dbgbaseline:blockScopeDeadZoneTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeDeadZoneTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeDeadZoneTest.js.dbg.baseline -targeted -InspectMaxStringLength:33 jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeEvalTest.js</files>
      <compile-flags>-InspectMaxStringLength:33 -debuglaunch -targeted -dbgbaseline:blockScopeEvalTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeEvalTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeEvalTest.js.dbg.baseline -targeted -InspectMaxStringLength:33 jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators,exclude_nonrazzle</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeGlobalTest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeGlobalTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeGlobalTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeGlobalTest.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeForTest.js</files>
      <compile-flags>-InspectMaxStringLength:33 -debuglaunch -targeted -dbgbaseline:blockScopeForTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeForTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeForTest.js.dbg.baseline -targeted -InspectMaxStringLength:33 jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeWithTest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeWithTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeWithTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeWithTest.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSwitchTest.js</files>
      <compile-flags>-InspectMaxStringLength:33 -debuglaunch -targeted -dbgbaseline:blockScopeSwitchTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSwitchTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeSwitchTest.js.dbg.baseline -targeted -InspectMaxStringLength:33 jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeActivationObjectDeadZoneTest.js</files>
      <compile-flags>-InspectMaxStringLength:33 -debuglaunch -targeted -dbgbaseline:blockScopeActivationObjectDeadZoneTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeActivationObjectDeadZoneTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeActivationObjectDeadZoneTest.js.dbg.baseline -targeted -InspectMaxStringLength:33 jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeRegSlotDeadZoneTest.js</files>
      <compile-flags>-InspectMaxStringLength:33 -debuglaunch -targeted -dbgbaseline:blockScopeRegSlotDeadZoneTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeRegSlotDeadZoneTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeRegSlotDeadZoneTest.js.dbg.baseline -targeted -InspectMaxStringLength:33 jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators,exclude_nonrazzle</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSlotArrayDeadZoneTest.js</files>
      <compile-flags>-InspectMaxStringLength:33 -debuglaunch -targeted -dbgbaseline:blockScopeSlotArrayDeadZoneTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSlotArrayDeadZoneTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeSlotArrayDeadZoneTest.js.dbg.baseline -targeted -InspectMaxStringLength:33 jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeGlobalDeadZoneTest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeGlobalDeadZoneTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeGlobalDeadZoneTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeGlobalDeadZoneTest.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeGlobalBlockTest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeGlobalBlockTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeGlobalBlockTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeGlobalBlockTest.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators,exclude_nonrazzle</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSlotArrayTest.js</files>
      <compile-flags>-targeted -dbgbaseline:blockScopeSlotArrayTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSlotArrayTest.js</files>
      <compile-flags>-targeted -forceserialized -dbgbaseline:blockScopeSlotArrayTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSlotArraySiblingTest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSlotArraySiblingTest.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeGlobalSlotArrayTest.bug222631.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeGlobalSlotArrayTest.bug222631.js.dbg.baseline -Intl- </compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeGlobalSlotArrayTest.bug222631.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeGlobalSlotArrayTest.bug222631.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators,exclude_nonrazzle</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSibling.bug263635.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSibling.bug263635.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSiblingScopeTrackedInNonDebugMode.bug321751.js</files>
      <compile-flags>-targeted -dbgbaseline:blockScopeSiblingScopeTrackedInNonDebugMode.bug321751.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSiblingScopeTrackedInNonDebugMode.bug321751.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeSiblingScopeTrackedInNonDebugMode.bug321751.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeFunctionDeclarationRegSlotTest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeFunctionDeclarationRegSlotTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeFunctionDeclarationRegSlotTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeFunctionDeclarationRegSlotTest.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeFunctionDeclarationSlotArrayTest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeFunctionDeclarationSlotArrayTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeFunctionDeclarationSlotArrayTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeFunctionDeclarationSlotArrayTest.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeFunctionDeclarationActivationObjectTest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeFunctionDeclarationActivationObjectTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeFunctionDeclarationActivationObjectTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeFunctionDeclarationActivationObjectTest.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeFunctionDeclarationGlobalTest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeFunctionDeclarationGlobalTest.js.dbg.baseline -Intl- -InspectMaxStringLength:100</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeFunctionDeclarationGlobalTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeFunctionDeclarationGlobalTest.js.dbg.baseline -InspectMaxStringLength:100 -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeFunctionDeclarationGlobalShadowingTest.bug305562.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeFunctionDeclarationGlobalShadowingTest.bug305562.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeFunctionDeclarationGlobalShadowingTest.bug305562.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeFunctionDeclarationGlobalShadowingTest.bug305562.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeFunctionDeclarationGlobalShadowingTest.bug308191.js</files>
      <compile-flags>-debuglaunch -targeted -InspectMaxStringLength:33 -dbgbaseline:blockScopeFunctionDeclarationGlobalShadowingTest.bug308191.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeFunctionRedeclarationTest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeFunctionRedeclarationTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeFunctionRedeclaration_blue523098.js</files>
      <compile-flags>-debuglaunch -targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeConstAttributesAreReadOnlyInExpressionEval.bug411503.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeConstAttributesAreReadOnlyInExpressionEval.bug411503.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeConstAttributesAreReadOnlyInLocals.bug411503.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeConstAttributesAreReadOnlyInLocals.bug411503.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeNonDebugMetadataTracking.bug463066.js</files>
      <compile-flags>-Debug -dbgbaseline:blockScopeNonDebugMetadataTracking.bug463066.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>disablebp.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:disablebp.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>disablebp.js</files>
      <command>jdtest.exe -dbgbaseline:disablebp.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators,exclude_nonrazzle</tags>
    </default>
  </test>
  <test>
    <default>
      <files>disablebp2.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:disablebp2.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>disablebp2.js</files>
      <command>jdtest.exe -dbgbaseline:disablebp2.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators,exclude_nonrazzle</tags>
    </default>
  </test>
  <test>
    <default>
      <files>setframe.js</files>
      <compile-flags>-EnableJitInDiagMode -debuglaunch -targeted -dbgbaseline:setframe.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>setframe.js</files>
      <command>jdtest.exe -dbgbaseline:setframe.js.dbg.baseline.hybrid -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>mapSetWeakmap.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:mapSetWeakmap.js.dbg.baseline -Intl- -es6classes</compile-flags>
      <tags>fail_mutators,Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>mapSetWeakmap.js</files>
      <command>jdtest.exe -dbgbaseline:mapSetWeakmap.js.dbg.hybrid.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl- -es6classes</compile-flags>
      <tags>fail_mutators,Slow,Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>proxy.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:proxy.js.dbg.baseline -args summary -endargs</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>proxy.js</files>
      <command>jdtest.exe -dbgbaseline:proxy.js.dbg.hybrid.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-  -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>proxy1.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:proxy1.js.dbg.baseline -args summary -endargs</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicattach2.js</files>
      <compile-flags>-forceserialized -es6functionnamefull -dbgbaseline:testdynamicattach2.js.dbg.baseline -Intl-</compile-flags>
      <baseline>testdynamicattach2.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicattach2.js</files>
      <compile-flags>-forceserialized -es6functionnamefull -automaticsourcerundown -dbgbaseline:testdynamicattach2.js.dbg.baseline -Intl-</compile-flags>
      <baseline>testdynamicattach2.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>funcExprCrash_150491.js</files>
      <compile-flags>-force:deferparse -targeted -dbgbaseline:funcExprCrash_150491.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>attachWithDeferParse.js</files>
      <compile-flags>-forceserialized -es6functionnamefull -force:deferparse -targeted -dbgbaseline:attachWithDeferParse.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>attachWithDeferParse.js</files>
      <compile-flags>-forceserialized -es6functionnamefull -force:deferparse -targeted -automaticsourcerundown -dbgbaseline:attachWithDeferParse.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicattach2.js</files>
      <compile-flags>-serialized:tda21 -es6functionnamefull -dbgbaseline:testdynamicattach2.js.dbg.baseline -Intl-</compile-flags>
      <baseline>testdynamicattach2.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicattach2.js</files>
      <compile-flags>-serialized:tda22 -es6functionnamefull -automaticsourcerundown -dbgbaseline:testdynamicattach2.js.dbg.baseline -Intl-</compile-flags>
      <baseline>testdynamicattach2.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>JIT_locals_1.js</files>
      <compile-flags>-EnableJitInDiagMode -es6functionnamefull -debuglaunch -DumpLocalsOnDebuggerBp -bailout:14 -bailout:23 -bailout:34 -dbgbaseline:JIT_locals_1.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_arm,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>JIT_locals_1.js</files>
      <compile-flags>-debuglaunch -es6functionnamefull -forceNative -off:simpleJit -DumpLocalsOnDebuggerBp -bailout:14 -bailout:23 -bailout:34 -dbgbaseline:JIT_locals_1.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_arm,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>JIT_localsAtNativeFrame1.js</files>
      <compile-flags>-forceNative -off:simpleJit -EnableJitInDiagMode -debuglaunch -targeted -dbgbaseline:JIT_localsAtNativeFrame1.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_arm,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>JIT_localsAtNativeFrame2.js</files>
      <compile-flags>-forceNative -off:simpleJit -EnableJitInDiagMode -debuglaunch -targeted -dbgbaseline:JIT_localsAtNativeFrame2.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_arm,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>syntaxError.js</files>
      <compile-flags>-debuglaunch</compile-flags>
      <baseline>syntaxError.baseline</baseline>
      <tags>exclude_dynapogo,fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>FastF12_AsyncBreak.js</files>
      <compile-flags>-DebugLaunch -break -forceNative -off:simpleJit -EnableJitInDiagMode -trace:bailout -Intl-</compile-flags>
      <baseline>FastF12_AsyncBreak.baseline</baseline>
      <tags>exclude_dynapogo,exclude_nonative,fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>FastF12_Breakpoint.js</files>
      <compile-flags>-targeted -forceNative -off:simpleJit -EnableJitInDiagMode -trace:bailout -Intl-</compile-flags>
      <baseline>FastF12_Breakpoint.baseline</baseline>
      <tags>exclude_dynapogo,exclude_nonative,fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>FastF12_Breakpoint.js</files>
      <compile-flags>-targeted -forceNative -off:simpleJit -EnableJitInDiagMode -automaticsourcerundown -trace:bailout -Intl-</compile-flags>
      <baseline>FastF12_Breakpoint.baseline</baseline>
      <tags>exclude_dynapogo,exclude_nonative,fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>FastF12_debuggerStmt.js</files>
      <compile-flags>-ForceDiagnosticsMode -forceNative -off:simpleJit -EnableJitInDiagMode -trace:bailout -Intl-</compile-flags>
      <baseline>FastF12_debuggerStmt.baseline</baseline>
      <tags>exclude_dynapogo,exclude_nonative,fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>FastF12_IgnoreException.js</files>
      <compile-flags>-DebugLaunch -targeted -forceNative -off:simpleJit -EnableJitInDiagMode -trace:bailout -Intl</compile-flags>
      <baseline>FastF12_IgnoreException.baseline</baseline>
      <tags>exclude_dynapogo,exclude_nonative,fail_mutators,exclude_winglob</tags>
    </default>
  </test>
  <test>
    <default>
      <files>FastF12_IgnoreException_Attach.js</files>
      <compile-flags>-targeted -forceNative -off:simpleJit</compile-flags>
      <baseline>FastF12_IgnoreException_Attach.baseline</baseline>
      <tags>exclude_dynapogo,exclude_nonative,fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>FastF12_FirstChanceException_SetNext.js</files>
      <compile-flags>-DebugLaunch -targeted -forceNative -off:simpleJit -EnableJitInDiagMode</compile-flags>
      <baseline>FastF12_FirstChanceException_SetNext.baseline</baseline>
      <tags>exclude_dynapogo,exclude_nonative,fail_mutators,exclude_winglob</tags>
    </default>
  </test>
  <test>
    <default>
      <files>IgnoreException_ForIn.js</files>
      <compile-flags>-DebugLaunch -targeted -dbgbaseline:IgnoreException_ForIn.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>IgnoreException_SetNext_ForIn.js</files>
      <compile-flags>-DebugLaunch -targeted -dbgbaseline:IgnoreException_SetNext_ForIn.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>IgnoreException_ForOf.js</files>
      <compile-flags>-DebugLaunch -targeted -dbgbaseline:IgnoreException_ForOf.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>IgnoreException_SetNext_ForOf.js</files>
      <compile-flags>-DebugLaunch -targeted -dbgbaseline:IgnoreException_SetNext_ForOf.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug594394.js</files>
      <compile-flags>-DebugLaunch -targeted -dbgbaseline:bug594394.js.dbg.baseline</compile-flags>
      <baseline>bug594394.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>IgnoreException_SetNext_IfElse.js</files>
      <compile-flags>-DebugLaunch -targeted</compile-flags>
      <baseline>IgnoreException_SetNext_IfElse.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>IgnorException_Resume.js</files>
      <compile-flags>-DebugLaunch -targeted -forceNative -off:simpleJit</compile-flags>
      <baseline>IgnorException_Resume.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>IgnorException_Resume_MaxInterpret.js</files>
      <compile-flags>-DebugLaunch -targeted -MaxInterpretCount:1 -off:simpleJit</compile-flags>
      <baseline>IgnorException_Resume_MaxInterpret.baseline</baseline>
      <tags>exclude_dynapogo,fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>IgnoreException_CallNonFunc.js</files>
      <compile-flags>-DebugLaunch -targeted -dbgbaseline:IgnoreException_CallNonFunc.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>IgnoreException_CallNonFunc.js</files>
      <baseline>IgnoreException_CallNonFunc.nonDebugger.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <!--<test>
    <default>
      <files>SetNextStatement4.js</files>
      <compile-flags>-DebugLaunch -targeted</compile-flags>
      <baseline>SetNextStatement4.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>-->
  <test>
    <default>
      <files>SetNextStatement5.js</files>
      <compile-flags>-DebugLaunch -targeted</compile-flags>
      <baseline>SetNextStatement5.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>FastF12_BOBranch.js</files>
      <compile-flags>-debuglaunch -targeted -maxinterpretcount:1 -off:simpleJit</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>sourceRundownBasicTest.js</files>
      <compile-flags>-dbgbaseline:sourceRundownBasicTest.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>sourceRundownAttachDetachTest.js</files>
      <compile-flags>-targeted -dbgbaseline:sourceRundownAttachDetachTest.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debuggerExceptionHandling.js</files>
      <compile-flags>-debuglaunch -targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debuggerExceptionHandling.js</files>
      <command>jdtest.exe -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debuggerExceptionHandling2.js</files>
      <compile-flags>-debuglaunch -targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debuggerExceptionHandling2.js</files>
      <command>jdtest.exe -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debuggerExceptionHandling3.js</files>
      <compile-flags>-debuglaunch -targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>settimeout.js</files>
      <compile-flags>-targeted -Intl-</compile-flags>
      <baseline>settimeout.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>settimeout.js</files>
      <compile-flags>-targeted -jsrt -dbgbaseline:settimeout.js.jsrt.dbg.baseline -Intl-</compile-flags>
      <baseline>settimeout.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debuggerExceptionHandling3.js</files>
      <command>jdtest.exe -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <!-- verify negzero representation in debugger -->
  <test>
    <default>
      <files>negzerotest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:negzerotest.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>negzerotest.js</files>
      <command>jdtest.exe -dbgbaseline:negzerotest.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <!-- verify ArrayBuffer representation in debugger -->
  <test>
    <default>
      <files>arraybuffer.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:arraybuffer.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>arraybuffer.js</files>
      <command>jdtest.exe -dbgbaseline:arraybuffer.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -EnableJitInHybridDebugging</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <!-- JUST MY CODE -->
  <!-- simple try-catch-finally flags -->
  <test>
    <default>
      <files>try.js</files>
      <compile-flags>-noNative -debuglaunch -targeted -dbgbaseline:try.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>try.js</files>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch -targeted -dbgbaseline:try.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>try.js</files>
      <command>jdtest.exe -dbgbaseline:try.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-noNative -debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>try.js</files>
      <command>jdtest.exe -dbgbaseline:try.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>catch.js</files>
      <compile-flags>-noNative -debuglaunch -targeted -dbgbaseline:catch.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>catch.js</files>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch -targeted -dbgbaseline:catch.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>catch.js</files>
      <command>jdtest.exe -dbgbaseline:catch.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-noNative -debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonrazzle</tags>
    </default>
  </test>
  <test>
    <default>
      <files>catch.js</files>
      <command>jdtest.exe -dbgbaseline:catch.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>finally.js</files>
      <compile-flags>-noNative -debuglaunch -targeted -dbgbaseline:finally.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>finally.js</files>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch -targeted -dbgbaseline:finally.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>finally.js</files>
      <command>jdtest.exe -dbgbaseline:finally.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-noNative -debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>finally.js</files>
      <command>jdtest.exe -dbgbaseline:finally.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <!-- forced interpreted runs -->
  <test>
    <default>
      <files>justMyCode.singleDocument.js</files>
      <compile-flags>-noNative -targeted -dbgbaseline:justMyCode.singleDocument.js.dbg.baseline</compile-flags>
      <baseline>justMyCode.singleDocument.baseline</baseline>
      <tags>exclude_dynapogo,fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.twoDocuments.main.js</files>
      <compile-flags>-noNative -targeted -dbgbaseline:justMyCode.twoDocuments.main.js.dbg.baseline</compile-flags>
      <baseline>justMyCode.twoDocuments.main.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.try.singleDocument.js</files>
      <compile-flags>-noNative -targeted -dbgbaseline:justMyCode.try.singleDocument.js.dbg.baseline</compile-flags>
      <baseline>justMyCode.try.singleDocument.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.try.twoDocuments.main.js</files>
      <compile-flags>-noNative -debuglaunch -targeted -dbgbaseline:justMyCode.try.twoDocuments.main.js.dbg.baseline</compile-flags>
      <baseline>justMyCode.try.twoDocuments.main.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.twoDocuments.simple.main.js</files>
      <compile-flags>-noNative -debuglaunch -targeted -dbgbaseline:justMyCode.twoDocuments.simple.main.js.dbg.baseline</compile-flags>
      <baseline>justMyCode.twoDocuments.simple.main.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.threeDocuments.main.js</files>
      <compile-flags>-noNative -debuglaunch -targeted -dbgbaseline:justMyCode.threeDocuments.main.js.dbg.baseline</compile-flags>
      <baseline>justMyCode.threeDocuments.main.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.twoDocuments.eval.main.js</files>
      <compile-flags>-noNative -debuglaunch -targeted -dbgbaseline:justMyCode.twoDocuments.eval.main.js.dbg.baseline</compile-flags>
      <baseline>justMyCode.twoDocuments.eval.main.baseline</baseline>
      <tags>fail_mutators,exclude_fre,exclude_dynapogo</tags>
    </default>
  </test>
  <!-- forced JIT mode -->
  <test>
    <default>
      <files>justMyCode.singleDocument.js</files>
      <compile-flags>-forceNative -off:simpleJit -targeted -dbgbaseline:justMyCode.singleDocument.js.dbg.baseline</compile-flags>
      <baseline>justMyCode.singleDocument.jit.baseline</baseline>
      <tags>fail_mutators,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.twoDocuments.main.js</files>
      <compile-flags>-forceNative -off:simpleJit -targeted -dbgbaseline:justMyCode.twoDocuments.main.js.dbg.baseline</compile-flags>
      <baseline>justMyCode.twoDocuments.main.jit.baseline</baseline>
      <tags>fail_mutators,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.try.singleDocument.js</files>
      <compile-flags>-forceNative -off:simpleJit -targeted -dbgbaseline:justMyCode.try.singleDocument.js.dbg.baseline</compile-flags>
      <baseline>justMyCode.try.singleDocument.jit.baseline</baseline>
      <tags>fail_mutators,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.try.twoDocuments.main.js</files>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch -targeted -dbgbaseline:justMyCode.try.twoDocuments.main.js.dbg.baseline</compile-flags>
      <baseline>justMyCode.try.twoDocuments.main.jit.baseline</baseline>
      <tags>fail_mutators,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.twoDocuments.simple.main.js</files>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch -targeted -dbgbaseline:justMyCode.twoDocuments.simple.main.js.dbg.baseline</compile-flags>
      <baseline>justMyCode.twoDocuments.simple.main.jit.baseline</baseline>
      <tags>fail_mutators,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.threeDocuments.main.js</files>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch -trace:bailout -targeted -dbgbaseline:justMyCode.threeDocuments.main.js.dbg.baseline</compile-flags>
      <baseline>justMyCode.threeDocuments.main.jit.baseline</baseline>
      <tags>fail_mutators,exclude_nonative,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.twoDocuments.eval.main.js</files>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch -targeted -dbgbaseline:justMyCode.twoDocuments.eval.main.js.dbg.baseline</compile-flags>
      <baseline>justMyCode.twoDocuments.eval.main.jit.baseline</baseline>
      <tags>fail_mutators,exclude_fre,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jmc_bug624298_first.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:jmc_bug624298_first.js.dbg.baseline</compile-flags>
      <baseline>jmc_bug624298_first.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <!-- hybrid forced interpreted runs -->
  <test>
    <default>
      <files>justMyCode.singleDocument.js</files>
      <command>jdtest.exe -dbgbaseline:justMyCode.singleDocument.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-noNative -debuglaunch:hybrid</compile-flags>
      <baseline>justMyCode.singleDocument.baseline</baseline>
      <tags>exclude_dynapogo,fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.twoDocuments.main.js</files>
      <command>jdtest.exe -dbgbaseline:justMyCode.twoDocuments.main.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-noNative -debuglaunch:hybrid</compile-flags>
      <baseline>justMyCode.twoDocuments.main.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.try.singleDocument.js</files>
      <command>jdtest.exe -dbgbaseline:justMyCode.try.singleDocument.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-noNative -debuglaunch:hybrid</compile-flags>
      <baseline>justMyCode.try.singleDocument.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.try.twoDocuments.main.js</files>
      <command>jdtest.exe -dbgbaseline:justMyCode.try.twoDocuments.main.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-noNative -debuglaunch:hybrid</compile-flags>
      <baseline>justMyCode.try.twoDocuments.main.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.twoDocuments.simple.main.js</files>
      <command>jdtest.exe -dbgbaseline:justMyCode.twoDocuments.simple.main.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-noNative -debuglaunch:hybrid</compile-flags>
      <baseline>justMyCode.twoDocuments.simple.main.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.threeDocuments.main.js</files>
      <command>jdtest.exe -dbgbaseline:justMyCode.threeDocuments.main.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-noNative -debuglaunch:hybrid</compile-flags>
      <baseline>justMyCode.threeDocuments.main.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.twoDocuments.eval.main.js</files>
      <command>jdtest.exe -dbgbaseline:justMyCode.twoDocuments.eval.main.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-noNative -debuglaunch:hybrid</compile-flags>
      <baseline>justMyCode.twoDocuments.eval.main.baseline</baseline>
      <tags>fail_mutators,exclude_fre,exclude_dynapogo</tags>
    </default>
  </test>
  <!-- hybrid forced JIT mode - THIS IS NOT POSSIBLE AS PER TEST INFRA YET - to be enabled once possible -->
  <!--
  <test>
    <default>
      <files>justMyCode.singleDocument.js</files>
      <command>jdtest.exe -dbgbaseline:justMyCode.singleDocument.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch:hybrid</compile-flags>
      <baseline>justMyCode.singleDocument.jit.baseline</baseline>
      <tags>fail_mutators,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.twoDocuments.main.js</files>
      <command>jdtest.exe -dbgbaseline:justMyCode.twoDocuments.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch:hybrid</compile-flags>
      <baseline>justMyCode.twoDocuments.main.jit.baseline</baseline>
      <tags>fail_mutators,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.try.singleDocument.js</files>
      <command>jdtest.exe -dbgbaseline:justMyCode.try.singleDocument.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch:hybrid</compile-flags>
      <baseline>justMyCode.try.singleDocument.jit.baseline</baseline>
      <tags>fail_mutators,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.try.twoDocuments.main.js</files>
      <command>jdtest.exe -dbgbaseline:justMyCode.try.twoDocuments.main.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch:hybrid</compile-flags>
      <baseline>justMyCode.try.twoDocuments.main.jit.baseline</baseline>
      <tags>fail_mutators,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.twoDocuments.simple.main.js</files>
      <command>jdtest.exe -dbgbaseline:justMyCode.twoDocuments.simple.main.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch:hybrid</compile-flags>
      <baseline>justMyCode.twoDocuments.simple.main.jit.baseline</baseline>
      <tags>fail_mutators,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.threeDocuments.main.js</files>
      <command>jdtest.exe -dbgbaseline:justMyCode.threeDocuments.main.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch:hybrid</compile-flags>
      <baseline>justMyCode.threeDocuments.main.jit.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>justMyCode.twoDocuments.eval.main.js</files>
      <command>jdtest.exe -dbgbaseline:justMyCode.twoDocuments.eval.main.js.hybriddbg.baseline -targeted jshost</command>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch:hybrid</compile-flags>
      <baseline>justMyCode.twoDocuments.eval.main.jit.baseline</baseline>
      <tags>fail_mutators,exclude_fre,exclude_nonative</tags>
    </default>
  </test>
-->
  <!-- /JUST MY CODE -->
  <test>
    <default>
      <files>unicode_linecol.js</files>
      <compile-flags>-noNative -debuglaunch -targeted -dbgbaseline:unicode_linecol.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>unicode_linecol.js</files>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch -targeted -dbgbaseline:unicode_linecol.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>unicode_linecol.js</files>
      <command>jdtest.exe -dbgbaseline:unicode_linecol.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-noNative -debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>unicode_linecol.js</files>
      <command>jdtest.exe -dbgbaseline:unicode_linecol.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-forceNative -off:simpleJit -debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>detachBasicTest.js</files>
      <compile-flags>-targeted -dbgbaseline:detachBasicTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>detachBasicTest.js</files>
      <compile-flags>-targeted -automaticsourcerundown -dbgbaseline:detachBasicTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>detachAttachBasicTest.js</files>
      <compile-flags>-Intl-</compile-flags>
      <tags>fail_mutators,Slow,Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>detachAttachBasicTest.js</files>
      <compile-flags>-automaticsourcerundown -Intl-</compile-flags>
      <tags>fail_mutators,Slow,Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicdetach1.js</files>
      <compile-flags>-dbgbaseline:testdynamicdetach1.js.dbg.baseline -Intl-</compile-flags>
      <baseline>testdynamicdetach1.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicdetach1.js</files>
      <compile-flags>-automaticsourcerundown -dbgbaseline:testdynamicdetach1.js.dbg.baseline -Intl-</compile-flags>
      <baseline>testdynamicdetach1.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicdetach1.js</files>
      <compile-flags>-hostmanagedsource -dbgbaseline:testdynamicdetach1.js.dbg.baseline -Intl-</compile-flags>
      <baseline>testdynamicdetach1_1.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicdetach1.js</files>
      <compile-flags>-hostmanagedsource -automaticsourcerundown -dbgbaseline:testdynamicdetach1.js.dbg.baseline -Intl-</compile-flags>
      <baseline>testdynamicdetach1_1.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicdetach2.js</files>
      <compile-flags>-es6functionnamefull -dbgbaseline:testdynamicdetach2.js.dbg.baseline -Intl-</compile-flags>
      <baseline>testdynamicdetach2.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testdynamicdetach2.js</files>
      <compile-flags>-es6functionnamefull -automaticsourcerundown -dbgbaseline:testdynamicdetach2.js.dbg.baseline -Intl-</compile-flags>
      <baseline>testdynamicdetach2.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-DebugLaunch -EnableJitInDiagMode -forceNative -off:simpleJit -targeted -trace:bailout</compile-flags>
      <files>jitStepping.js</files>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
      <baseline>jitStepping.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <command>jdtest.exe -targeted jshost</command>
      <compile-flags>-DebugLaunch:hybrid -forcenative -off:simpleJit -trace:bailout</compile-flags>
      <files>jitStepping.js</files>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
      <baseline>jitStepping.hybrid.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-DebugLaunch -targeted -forcenative -off:simpleJit</compile-flags>
      <files>jitStepping1.js</files>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
      <baseline>jitStepping1.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-debuglaunch -targeted -nonative</compile-flags>
      <files>jitStepping2.js</files>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-debuglaunch -targeted -forcenative</compile-flags>
      <files>jitStepping2.js</files>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jit_exprEval1.js</files>
      <compile-flags>-EnableJitInDiagMode -debuglaunch -es6functionnamefull -forceNative -off:simpleJit -targeted -dbgbaseline:jit_exprEval1.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jit_editvalue1.js</files>
      <compile-flags>-EnableJitInDiagMode -es6functionnamefull -debuglaunch -forceNative -off:simpleJit -targeted -dbgbaseline:jit_editvalue1.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <compile-flags> -maxinterpretcount:1 -off:simpleJit -EnableJitInDiagMode -targeted</compile-flags>
      <files>jitAttach.js</files>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>stringkeyedtypehandler.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:stringkeyedtypehandler.js.dbg.baseline -DeletedPropertyReuseThreshold:1</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <!--
  <test>
    <default>
      <files>stringkeyedtypehandler.js</files>
      <command>jdtest.exe -dbgbaseline:stringkeyedtypehandler.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -DeletedPropertyReuseThreshold:1</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  Disabled for Arguments[Symbol.iterator] workItem -Falotfi -->
  <test>
    <default>
      <files>functionNameShowsInScopeGroupTest.bug157127.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:functionNameShowsInScopeGroupTest.bug157127.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>functionNameShowsInScopeGroupTest.bug157127.js</files>
      <command>jdtest.exe -dbgbaseline:functionNameShowsInScopeGroupTest.bug157127.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>functionNameShowsInNestedScopeGroupTest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:functionNameShowsInNestedScopeGroupTest.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>functionNameShowsInNestedScopeGroupTest.js</files>
      <command>jdtest.exe -dbgbaseline:functionNameShowsInNestedScopeGroupTest.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatmentTDZToNonTDZAllowed.bug154071.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatmentTDZToNonTDZAllowed.bug154071.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatmentNonTDZToTDZNotAllowed.bug154071.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatmentNonTDZToTDZNotAllowed.bug154071.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpInBlockAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpInBlockAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpInBlockNotAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpInBlockNotAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpInNestedBlockAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpInNestedBlockAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpInNestedBlockNotAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpInNestedBlockNotAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpInNestedBlockNotAllowed2.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpInNestedBlockNotAllowed2.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpOutBlockAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpOutBlockAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpOutBlockBackwardAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpOutBlockBackwardAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpOutBlockNestedAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpOutBlockNestedAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpOutBlockNestedNotAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpOutBlockNestedNotAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpOutBlockNotAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpOutBlockNotAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpToGrandchildAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpToGrandchildAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpToGrandchildNotAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpToGrandchildNotAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpToGrandchildWithDeepSourceNestingAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpToGrandchildWithDeepSourceNestingAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpToGrandchildWithDeepTargetNestingAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpToGrandchildWithDeepTargetNestingAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpToSiblingAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpToSiblingAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementJumpToSiblingNotAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementJumpToSiblingNotAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementSameBlockAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementSameBlockAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementSameBlockNotAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementSameBlockNotAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementGlobalJump.bug261958.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementGlobalJump.bug261958.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementGlobalJumpInAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementGlobalJumpInAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementGlobalJumpInNotAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementGlobalJumpInNotAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSetNextStatementGlobalJumpOutAllowed.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSetNextStatementGlobalJumpOutAllowed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeExpressionNoWriteOfConst.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeExpressionNoWriteOfConst.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeRegSlotShadowingExpressionEvaluationTest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeRegSlotShadowingExpressionEvaluationTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeRegSlotShadowingExpressionEvaluationTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeRegSlotShadowingExpressionEvaluationTest.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeExpressionSimpleDeadZoneTest.js</files>
      <compile-flags>-InspectMaxStringLength:33 -debuglaunch -targeted -dbgbaseline:blockScopeExpressionSimpleDeadZoneTest.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeExpressionEquationDeadZoneTest.js</files>
      <compile-flags>-InspectMaxStringLength:33 -debuglaunch -targeted -dbgbaseline:blockScopeExpressionEquationDeadZoneTest.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeTryCatchTest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeTryCatchTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeTryCatchTest.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeTryCatchTest.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators,exclude_nonrazzle</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSibling.bug243560.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:blockScopeSibling.bug243560.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>blockScopeSibling.bug243560.js</files>
      <command>jdtest.exe -dbgbaseline:blockScopeSibling.bug243560.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators,exclude_nonrazzle</tags>
    </default>
  </test>
  <test>
    <default>
      <files>nonEnumerableSpecialPropertiesTests.js</files>
      <compile-flags>-InspectMaxStringLength:100 -EnumerateSpecialPropertiesInDebugger -debuglaunch -targeted -dbgbaseline:nonEnumerableSpecialPropertiesTests.js.dbg.baseline -Intl- -ES6-</compile-flags>
      <baseline>nonEnumerableSpecialPropertiesTests.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>nonEnumerableSpecialPropertiesTests.js</files>
      <command>jdtest.exe -targeted -InspectMaxStringLength:100 -dbgbaseline:nonEnumerableSpecialPropertiesTests.js.hybrid.dbg.baseline jshost</command>
      <compile-flags>-debuglaunch:hybrid -EnumerateSpecialPropertiesInDebugger -Intl- -ES6-</compile-flags>
      <baseline>nonEnumerableSpecialPropertiesTests.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>nonEnumerableSpecialPropertiesArgumentsTest.js</files>
      <compile-flags>-EnumerateSpecialPropertiesInDebugger -debuglaunch -targeted -dbgbaseline:nonEnumerableSpecialPropertiesArgumentsTest.js.dbg.baseline -Intl- -ES6-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>nonEnumerableSpecialPropertiesArgumentsTest.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:nonEnumerableSpecialPropertiesArgumentsTest.js.hybrid.dbg.baseline jshost</command>
      <compile-flags>-debuglaunch:hybrid -EnumerateSpecialPropertiesInDebugger -Intl- -ES6-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>nonEnumerableSpecialPropertiesFunctionTest.js</files>
      <compile-flags>-EnumerateSpecialPropertiesInDebugger -debuglaunch -targeted -dbgbaseline:nonEnumerableSpecialPropertiesFunctionTest.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>nonEnumerableSpecialPropertiesFunctionTest.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:nonEnumerableSpecialPropertiesFunctionTest.js.hybrid.dbg.baseline jshost</command>
      <compile-flags>-debuglaunch:hybrid -EnumerateSpecialPropertiesInDebugger -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>localsInspectionOnNonTopFrameInBlockTest.bug163347.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:localsInspectionOnNonTopFrameInBlockTest.bug163347.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>localsInspectionOnNonTopFrameInBlockTest.bug163347.js</files>
      <command>jdtest.exe -dbgbaseline:localsInspectionOnNonTopFrameInBlockTest.bug163347.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <compile-flags> -maxinterpretcount:1 -off:simpleJit -EnableJitInDiagMode -targeted</compile-flags>
      <files>jitAttach.js</files>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-targeted -debuglaunch</compile-flags>
      <files>getterInspection.js</files>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>promise_deferNestedAttach.js</files>
      <compile-flags>-es6functionnamefull</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>setnextstatement3.js</files>
      <compile-flags> -forceNative -off:simpleJit -EnableJitInDiagMode -debuglaunch -targeted -dbgbaseline:setnextstatement3.js.dbg.baseline</compile-flags>
      <baseline>setnextstatement3.js.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>setnext_onexception1.js</files>
      <compile-flags> -forceNative -off:simpleJit -EnableJitInDiagMode -debuglaunch -targeted -dbgbaseline:setnext_onexception1.js.dbg.baseline</compile-flags>
      <baseline>setnext_onexception1.js.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>setnext_onexception2.js</files>
      <compile-flags> -forceNative -off:simpleJit -EnableJitInDiagMode -debuglaunch -targeted -dbgbaseline:setnext_onexception2.js.dbg.baseline</compile-flags>
      <baseline>setnext_onexception2.js.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>setnext_onexception3.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:setnext_onexception3.js.dbg.baseline</compile-flags>
      <baseline>setnext_onexception3.js.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>setnext_fromInsideCall.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:setnext_fromInsideCall.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_222633.js</files>
      <compile-flags> -debuglaunch -targeted -dbgbaseline:bug_222633.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_149118.js</files>
      <compile-flags> -force:deferparse -targeted -dbgbaseline:bug_149118.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_149118.js</files>
      <compile-flags> -force:deferparse -targeted -dbgbaseline:bug_149118.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_204064.js</files>
      <compile-flags> -targeted -dbgbaseline:bug_204064.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_177146.js</files>
      <compile-flags> -debuglaunch -targeted -dbgbaseline:bug_177146.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_177146.js</files>
      <compile-flags> -debuglaunch -targeted -dbgbaseline:bug_177146.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_170722.js</files>
      <compile-flags>-ForceDiagnosticsMode -MaxInterpretCount:1 -off:simpleJit -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_247744.js</files>
      <compile-flags> -debuglaunch -targeted -forceNative -off:simpleJit -dbgbaseline:bug_247744.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_256729.js</files>
      <compile-flags> -debuglaunch -targeted -dbgbaseline:bug_256729.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_266843.js</files>
      <compile-flags>-debuglaunch -targeted -maxinterpretcount:1 -off:simpleJit</compile-flags>
      <baseline>bug_266843.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_281479.js</files>
      <compile-flags> -debuglaunch -targeted -MaxInterpretCount:1 -off:simpleJit</compile-flags>
      <baseline>bug_281479.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_350674.js</files>
      <compile-flags>-debuglaunch -targeted -forceNative -off:simpleJit -dbgbaseline:bug_350674.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_272569.js</files>
      <compile-flags>-targeted -forcenative</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_847082_bytecode_corrupt.js</files>
      <compile-flags>-targeted -dbgbaseline:bug_847082_bytecode_corrupt.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>rethrowInCatch.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:rethrowInCatch.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>with_shadow.js</files>
      <compile-flags>-debuglaunch -targeted -InspectMaxStringLength:100 -dbgbaseline:with_shadow.js.dbg.baseline -Intl- </compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>with_shadow.js</files>
      <command>jdtest.exe -targeted -InspectMaxStringLength:100 -dbgbaseline:with_shadow.js.dbg.baseline jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl- </compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>var_shadow.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:var_shadow.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>var_shadow.js</files>
      <command>jdtest.exe -dbgbaseline:var_shadow.js.dbg.baseline -targeted jshost </command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>arraytoes5array.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:arraytoes5array.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>arraytoes5array.js</files>
      <command>jdtest.exe -dbgbaseline:arraytoes5array.js.hybrid.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <!-- Disabled, due to fatal error in the Attach/Detach code path added. WI: 935011 to enable this.
  <test>
    <default>
      <files>longExpression_jshost.js</files>
       <compile-flags>-Intl-</compile-flags>
      <baseline>longExpression_jshost.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  -->
  <test>
    <default>
      <files>propertyEnumeration.bug241480.js</files>
      <compile-flags>-dbgbaseline:propertyEnumeration.bug241480.js.dbg.baseline -targeted -debuglaunch</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_271356.js</files>
      <compile-flags>-targeted -debuglaunch -maxinterpretcount:4 -off:simpleJit -dbgbaseline:bug_271356.js.dbg.baseline</compile-flags>
      <baseline>bug_271356.js.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_291582.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:bug_291582.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_355097.js</files>
      <compile-flags>-targeted -force:deferparse -dbgbaseline:bug_355097.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_301517.js</files>
      <compile-flags>-targeted -dbgbaseline:bug_301517.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_325839.js</files>
      <compile-flags>-debuglaunch -targeted -forceNative -off:simpleJit</compile-flags>
      <baseline>bug_325839.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_291582.js</files>
      <command>jdtest.exe -dbgbaseline:bug_291582.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>cross_site_async_break_parent.js</files>
      <compile-flags>-debuglaunch -targeted -asyncbreak -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>crosscontext1.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:crosscontext1.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>crosscontext2.js</files>
      <compile-flags>-targeted -dbgbaseline:crosscontext2.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>crosscontext3_exception.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:crosscontext3_exception.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>propertyEnumeration.bug241480.js</files>
      <command>jdtest.exe -dbgbaseline:propertyEnumeration.bug241480.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>deferParse_210165.js</files>
      <compile-flags>-targeted -dbgbaseline:deferParse_210165.js.dbg.baseline</compile-flags>
      <baseline>deferParse_210165.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>qualified_names1.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:qualified_names1.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>qualified_names1.js</files>
      <command>jdtest.exe -dbgbaseline:qualified_names1.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>qualified_names2.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:qualified_names2.js.dbg.baseline -es6classes -Intl-</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>qualified_names2.js</files>
      <command>jdtest.exe -dbgbaseline:qualified_names2.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -es6classes -Intl-</compile-flags>
      <tags>fail_mutators,exclude_nonrazzle</tags>
    </default>
  </test>
  <test>
    <default>
      <files>qualified_names3.js</files>
      <compile-flags>-targeted -dbgbaseline:qualified_names3.js.dbg.baseline -Intl-</compile-flags>
      <baseline>qualified_names3.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>qualified_names4.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:qualified_names4.js.dbg.baseline -Intl-</compile-flags>
      <baseline>qualified_names4.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>qualified_names4.js</files>
      <command>jdtest.exe -dbgbaseline:qualified_names4.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -Intl-</compile-flags>
      <baseline>qualified_names4.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>evalDetection.js</files>
      <compile-flags>-targeted</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>nonusercodeexception_jshost.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:nonusercodeexception_jshost.js.dbg.baseline -Intl-</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_483733.js</files>
      <baseline>bug_483733.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>currentSourceInfo.js</files>
      <baseline>currentSourceInfo.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>bug_507528.js</files>
      <compile-flags>-debuglaunch -Intl-</compile-flags>
      <baseline>bug_507528.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_543550.js</files>
      <compile-flags>-debuglaunch -targeted -inspectmaxstringlength:100 -dbgbaseline:bug_543550.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_523101.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:bug_523101.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>HybridArguments.js</files>
      <command>jdtest.exe -dbgbaseline:HybridArguments.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid -forcenative</compile-flags>
      <baseline>HybridArguments.baseline</baseline>
      <tags>fail_mutators,,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>HybridStatementMaps.js</files>
      <command>jdtest.exe -dbgbaseline:HybridStatementMaps.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
      <baseline>HybridArguments.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>stacktraceevent_1.js</files>
      <compile-flags>-trace:StackFramesEvent</compile-flags>
      <baseline>stacktraceevent_1.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>symbols.js</files>
      <compile-flags>-ES6Species -debuglaunch -dbgbaseline:symbols.js.dbg.baseline -targeted -es6toprimitive -es6isConcatSpreadable -es6tostringtag -ES6Symbol</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>symbols.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:symbols.js.dbg.baseline jshost</command>
      <compile-flags>-ES6Species -debuglaunch:hybrid -es6toprimitive -es6isConcatSpreadable -es6tostringtag -ES6Symbol</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>symbols1.js</files>
      <compile-flags>-debuglaunch -dbgbaseline:symbols1.js.dbg.baseline -targeted -InspectMaxStringLength:100 -ES6Symbol</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>symbols1.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:symbols1.js.dbg.baseline -InspectMaxStringLength:100 jshost</command>
      <compile-flags>-debuglaunch:hybrid -ES6Symbol</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>qualified_names5.js</files>
      <compile-flags>-debuglaunch -dbgbaseline:qualified_names5.js.dbg.baseline -targeted</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>qualified_names5.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:qualified_names5.js.dbg.baseline jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_528564.js</files>
      <compile-flags>-debuglaunch -targeted -maxinterpretcount:2 -dbgbaseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>RestoreValuesOnBailout.js</files>
      <compile-flags>-forcediagnosticsmode -maxInterpretCount:1</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_553748.html</files>
      <compile-flags>-trace:StackFramesEvent -DeferLoadingAvailableSource</compile-flags>
      <baseline>bug_553748.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>basichtmltest1.html</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:basichtmltest1.html.dbg.baseline -DeferLoadingAvailableSource</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <!-- Temporarily disabling for FI
    <test>
    <default>
      <files>basichtmltest_Attach.html</files>
      <compile-flags>-targeted -dbgbaseline:basichtmltest_Attach.html.dbg.baseline -DeferLoadingAvailableSource</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test> -->
  <!-- Temporarily disabling for FI 09/22/2015
  <test>
    <default>
      <files>basichtmltest_Attach2.html</files>
      <compile-flags>-targeted -dbgbaseline:basichtmltest_Attach2.html.dbg.baseline -DeferLoadingAvailableSource</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  -->
  <test>
    <default>
      <files>basichtmltest_Main.htm</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:basichtmltest_Main.htm.dbg.baseline -DeferLoadingAvailableSource</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_chk</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test_iframe1.html</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:test_iframe1.html.dbg.baseline -DeferLoadingAvailableSource</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_chk</tags>
    </default>
  </test>
  <test>
    <default>
      <files>html_workertest.html</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:html_workertest.html.dbg.baseline -DeferLoadingAvailableSource</compile-flags>
      <baseline>html_workertest.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo,exclude_chk</tags>
    </default>
  </test>
  <!-- Temporarily disabling for FI: 09/22/2015
  <test>
    <default>
      <files>html_workertest_Attach.html</files>
      <compile-flags>-targeted -dbgbaseline:html_workertest_Attach.html.dbg.baseline -DeferLoadingAvailableSource</compile-flags>
      <baseline>html_workertest.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo,exclude_chk</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_541996.html</files>
      <compile-flags>-forceserialized -targeted -dbgbaseline:emptyJson.dbg.baseline -DeferLoadingAvailableSource</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>event_break_107724.html</files>
      <compile-flags>-targeted -dbgbaseline:event_break_107724.html.dbg.baseline -DeferLoadingAvailableSource</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_chk</tags>
    </default>
  </test>
  -->
  <test>
    <default>
      <files>bug_551355.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:bug_551355.js.dbg.baseline jshost</command>
      <compile-flags>-debuglaunch:hybrid -DeferLoadingAvailableSource</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_550210.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:bug_550210.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_538163.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:bug_538163.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_592563.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:bug_592563.js.dbg.baseline</compile-flags>
      <baseline>bug_592563.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_575634.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:bug_575634.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_575634.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:bug_575634.js.dbg.baseline jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>scriptContextClosed.js</files>
      <compile-flags>-targeted -debuglaunch -InspectMaxStringLength:20 -dbgbaseline:scriptContextClosed.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_winglob</tags>
    </default>
  </test>
  <test>
    <default>
      <files>domInClosedContext.js</files>
      <compile-flags>-targeted -debuglaunch -dbgbaseline:domInClosedContext.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>nested_eval.js</files>
      <compile-flags>-targeted -debuglaunch -dbgbaseline:nested_eval.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_592506.js</files>
      <compile-flags>-targeted -debuglaunch -dbgbaseline:bug_592506.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>permanentArguments.js</files>
      <compile-flags>-forcenative -targeted -debuglaunch -dbgbaseline:permanentArguments.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_113160.js</files>
      <compile-flags>-forcenative -targeted -debuglaunch -dbgbaseline:bug_113160.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
      <baseline>bug_113160.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>setTimeoutThis.js</files>
      <compile-flags>-targeted -debuglaunch -forcenative -dbgbaseline:setTimeoutThis.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,exclude_chk</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_594824.js</files>
      <compile-flags>-targeted -debuglaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <baseline>bug_594824.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_507150.js</files>
      <compile-flags>-targeted -debuglaunch -dbgbaseline:bug_507150.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_263453.js</files>
      <compile-flags>-debuglaunch -targeted -forcenative -force:fieldcopyprop -dbgbaseline:bug_263453.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>brlong_issue.js</files>
      <compile-flags>-targeted -debuglaunch -dbgbaseline:brlong_issue.js.dbg.baseline</compile-flags>
      <baseline>brlong_issue.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>permanentArguments.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:permanentArguments.js.dbg.baseline jshost</command>
      <compile-flags>-forcenative -debuglaunch:hybrid</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>shutdownInDispatchHalt.js</files>
      <compile-flags>-targeted -debuglaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <baseline>shutdownInDispatchHalt.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>582505.js</files>
      <command>jdtest.exe -targeted jshost</command>
      <compile-flags> -debuglaunch:hybrid -off:inline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo,Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>sourceInfoMismatch.js</files>
      <compile-flags>-targeted -Force:Deferparse -ForceUndoDefer -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spread_debugging.js</files>
      <compile-flags>-ES6Spread -ES6StringTemplate -DebugLaunch -Targeted -InspectMaxStringLength:100</compile-flags>
      <tags>exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spread_debugging.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:spread_debugging.js.hybrid.dbg.baseline -InspectMaxStringLength:100 jshost</command>
      <tags>exclude_serialized</tags>
      <compile-flags>-ES6Spread -ES6StringTemplate -debuglaunch:hybrid</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>needMarshal.js</files>
      <compile-flags>-targeted -debuglaunch -dbgbaseline:needMarshal.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_622304.js</files>
      <compile-flags>-targeted -debuglaunch -dbgbaseline:bug_622304.js.dbg.baseline</compile-flags>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>edit0.js</files>
      <compile-flags>-EditTest  -args summary -endargs</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>WinBlue_625203.js</files>
      <compile-flags>-targeted -debuglaunch -dbgbaseline:winblue_625203.js.dbg.baseline</compile-flags>
      <baseline>WinBlue_625203.baseline</baseline>
      <tags>fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editTopAdd.js</files>
      <baseline>editTopAdd.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editTopAddAnonymous.js</files>
      <baseline>editTopAddAnonymous.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editTopAddWithGlobalExists.js</files>
      <baseline>editTopAddWithGlobalExists.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editTopDelete.js</files>
      <baseline>editTopDelete.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editTopMove.js</files>
      <baseline>editTopMove.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editTopChange.js</files>
      <baseline>editTopChange.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editTopChangeWithError.js</files>
      <baseline>editTopChangeWithError.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editTopChangeAccessGlobal.js</files>
      <baseline>editTopChangeAccessGlobal.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editNestChange.js</files>
      <baseline>editNestChange.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editNestChangeClosure0.js</files>
      <baseline>editNestChangeClosure0.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editNestChangeClosure1.js</files>
      <baseline>editNestChangeClosure1.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editNestChangeClosure2.js</files>
      <baseline>editNestChangeClosure2.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editNestChangeClosure3.js</files>
      <baseline>editNestChangeClosure3.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editNestChangeClosure4.js</files>
      <baseline>editNestChangeClosure4.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editNestChangeClosure5.js</files>
      <baseline>editNestChangeClosure5.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editReorderUpdate.js</files>
      <baseline>editReorderUpdate.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editMoveUpdate1.js</files>
      <baseline>editMoveUpdate1.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editMoveUpdate2.js</files>
      <baseline>editMoveUpdate2.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editActivationObject1.js</files>
      <baseline>editActivationObject1.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editActivationObject2.js</files>
      <baseline>editActivationObject2.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editActivationObject3.js</files>
      <baseline>editActivationObject3.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editBlock1.js</files>
      <baseline>editBlock1.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editBlock1_top.js</files>
      <baseline>editBlock1_top.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editBlock2.js</files>
      <baseline>editBlock2.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editBlock2_top.js</files>
      <baseline>editBlock2_top.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editBlock3.js</files>
      <baseline>editBlock3.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>editEntryPoint.js</files>
      <baseline>editEntryPoint.baseline</baseline>
      <compile-flags>-EditTest -Trace:ENC -Targeted -DebugLaunch -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>edit</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debugEval.js</files>
      <baseline>debugEval.baseline</baseline>
      <compile-flags>-DiagnosticsEngine</compile-flags>
      <tags>exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debugEvalParamsTest.js</files>
      <baseline>debugEvalParamsTest.baseline</baseline>
      <compile-flags>-debuglaunch -targeted</compile-flags>
      <tags>exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debugEval_F12.js</files>
      <compile-flags></compile-flags>
      <tags>exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debugEval_F12.js</files>
      <compile-flags>-debugLaunch -targeted -dbgbaseline:debugEval_F12.js.dbg.baseline</compile-flags>
      <tags>exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debugeval_F12_nonuser.js</files>
      <compile-flags>-targeted -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debugEval_stack.js</files>
      <baseline>debugEval_stack.baseline</baseline>
      <compile-flags>-DiagnosticsEngine -debugLaunch -targeted -dbgbaseline:debugEval_stack.js.dbg.baseline</compile-flags>
      <tags>exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debugEval_stepping.js</files>
      <compile-flags>-DiagnosticsEngine -debugLaunch -targeted -dbgbaseline:debugeval_stepping.js.dbg.baseline</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debugEvalSite.js</files>
      <baseline>debugEvalSite.baseline</baseline>
      <compile-flags>-DiagnosticsEngine</compile-flags>
      <tags>exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>returnedvaluetests.js</files>
      <compile-flags>-debugLaunch -targeted -dbgbaseline:returnedvaluetests.js.dbg.baseline</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>returnedvaluetests.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:returnedvaluetests.js.dbg.baseline jshost</command>
      <compile-flags>-debugLaunch:hybrid </compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>returnedvaluetests1.js</files>
      <compile-flags>-targeted -dbgbaseline:returnedvaluetests1.js.dbg.baseline</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>returnedvaluetests2.js</files>
      <compile-flags>-debugLaunch -targeted -dbgbaseline:returnedvaluetests2.js.dbg.baseline</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>returnedvaluetests2.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:returnedvaluetests2.js.dbg.baseline jshost</command>
      <compile-flags>-debugLaunch:hybrid</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>stackwalkbug_628552.js</files>
      <compile-flags>-EnableMiscWScriptFunctions -debugLaunch -targeted -dbgbaseline:stackwalkbug_628552.js.dbg.baseline</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>delaycapture.js</files>
      <compile-flags>-targeted -dbgbaseline:delaycapture.js.dbg.baseline</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <!-- Temporarily disabling for FI: 09/22/2015
  <test>
    <default>
      <files>htmlSuffix.html</files>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  -->
  <test>
    <default>
      <files>returnedvaluetests3.js</files>
      <compile-flags>-debugLaunch -targeted -dbgbaseline:returnedvaluetests3.js.dbg.baseline</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>returnedvaluetests3.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:returnedvaluetests3.js.hybrid.dbg.baseline jshost</command>
      <compile-flags>-debugLaunch:hybrid</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>returnedvaluetests4.js</files>
      <compile-flags> -targeted -dbgbaseline:returnedvaluetests4.js.dbg.baseline</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>returnedvaluetests4.js</files>
      <compile-flags> -targeted -force:deferparse -dbgbaseline:returnedvaluetests4.js.dbg.baseline</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>returnedvaluetests5.js</files>
      <baseline>returnedvaluetests5.baseline</baseline>
      <compile-flags> -targeted -debuglaunch -dbgbaseline:returnedvaluetests5.js.dbg.baseline</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_210537.js</files>
      <compile-flags> -debuglaunch -targeted -dbgbaseline:bug_210537.js.dbg.baseline</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_211456.js</files>
      <compile-flags>-targeted -dbgbaseline:emptyJson.dbg.baseline</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_261867.js</files>
      <compile-flags>-debuglaunch -targeted -maxinterpretcount:1 -dbgbaseline:bug_261867.js.dbg.baseline</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_595466-1.js</files>
      <command>jdtest.exe -dbgbaseline:bug_595466-1.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_595466-2.js</files>
      <command>jdtest.exe -dbgbaseline:bug_595466-2.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>setnext_timerbody_192067.js</files>
      <compile-flags> -debuglaunch -targeted -dbgbaseline:setnext_timerbody_192067.js.dbg.baseline</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>ObjectHeaderInlining_hybridDebug.js</files>
      <command>jdtest.exe -dbgbaseline:objectheaderinlining_hybriddebug.js.dbg.baseline -targeted jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_714904.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:bug_714904.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>rest.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:rest.js.dbg.baseline -ES6Rest -ES6Classes -InspectMaxStringLength:100</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>rest.js</files>
      <compile-flags>-targeted -dbgbaseline:rest_attach_detach.js.dbg.baseline -ES6Rest -ES6Classes -InspectMaxStringLength:100</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>rest_hybrid.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:rest_hybrid.js.dbg.baseline -InspectMaxStringLength:100 jshost</command>
      <compile-flags>-ES6Rest -ES6Classes -debuglaunch:hybrid</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>mutationBpTest1.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:mutationbptest1.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>mutationBpTest2.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:mutationbptest2.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>mutationBpTest3.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:mutationbptest3.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>mutationBpTest4.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:mutationbptest4.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>mutationBpTest5.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:mutationbptest5.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>mutationBpTest6.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:mutationbptest6.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>mutationBpTest7.js</files>
      <compile-flags>-debuglaunch -targeted -InspectMaxStringLength:100 -dbgbaseline:mutationbptest7.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>mutationBpTest8.js</files>
      <compile-flags>-debuglaunch -targeted -InspectMaxStringLength:100 -dbgbaseline:mutationbptest8.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>mutationBpTest9.js</files>
      <compile-flags>-debuglaunch -targeted -InspectMaxStringLength:100 -dbgbaseline:mutationbptest9.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>mutationBpTest10.js</files>
      <compile-flags>-targeted -InspectMaxStringLength:100 -dbgbaseline:mutationbptest10.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>mutationBpConditionalTest1.js</files>
      <compile-flags>-debuglaunch -targeted -InspectMaxStringLength:100 -dbgbaseline:mutationbpconditionaltest1.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>mutationBpConditionalTest2.js</files>
      <compile-flags>-debuglaunch -targeted -InspectMaxStringLength:100 -dbgbaseline:mutationbpconditionaltest2.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>mutationBpConditionalTest3.js</files>
      <compile-flags>-debuglaunch -targeted -InspectMaxStringLength:100 -dbgbaseline:mutationbpconditionaltest3.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>mutationBpConditionalTest4.js</files>
      <compile-flags>-debuglaunch -targeted -InspectMaxStringLength:100 -dbgbaseline:mutationbpconditionaltest4.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ObjLit_breakpoints.js</files>
      <baseline>Baselines\ObjLit_breakpoints.js.baseline</baseline>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:DbgBaselines\ObjLit_breakpoints.js.dbg.baseline</compile-flags>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>ObjLit_exception.js</files>
      <baseline>Baselines\ObjLit_exception.js.baseline</baseline>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:DbgBaselines\ObjLit_exception.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ObjLit_step_into_more.js</files>
      <baseline>Baselines\ObjLit_step_into_more.js.baseline</baseline>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:DbgBaselines\ObjLit_step_into_more.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ObjLit_step_into_out.js</files>
      <baseline>Baselines\ObjLit_step_into_out.js.baseline</baseline>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:DbgBaselines\ObjLit_step_into_out.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ObjLit_step_over.js</files>
      <baseline>Baselines\ObjLit_step_over.js.baseline</baseline>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:DbgBaselines\ObjLit_step_over.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ObjLit_breakpoints.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:HybridDbgBaselines\ObjLit_breakpoints.js.dbg.baseline jshost</command>
      <baseline>Baselines\ObjLit_breakpoints.js.hybrid.baseline</baseline>
      <compile-flags>-debugLaunch:hybrid</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized,Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>ObjLit_exception.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:DbgBaselines\ObjLit_exception.js.dbg.baseline jshost</command>
      <baseline>Baselines\ObjLit_exception.js.baseline</baseline>
      <compile-flags>-debugLaunch:hybrid</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>ObjLit_step_into_more.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:DbgBaselines\ObjLit_step_into_more.js.dbg.baseline jshost</command>
      <baseline>Baselines\ObjLit_step_into_more.js.baseline</baseline>
      <compile-flags>-debugLaunch:hybrid</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>ObjLit_step_into_out.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:DbgBaselines\ObjLit_step_into_out.js.dbg.baseline jshost</command>
      <baseline>Baselines\ObjLit_step_into_out.js.baseline</baseline>
      <compile-flags>-debugLaunch:hybrid</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>ObjLit_step_over.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:DbgBaselines\ObjLit_step_over.js.dbg.baseline jshost</command>
      <baseline>Baselines\ObjLit_step_over.js.baseline</baseline>
      <compile-flags>-debugLaunch:hybrid</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>generators.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:generators.js.dbg.baseline -ES6Generators -InspectMaxStringLength:200</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>generators.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:generators.js.hybrid.dbg.baseline -InspectMaxStringLength:200 jshost</command>
      <compile-flags>-debugLaunch:hybrid -ES6Generators</compile-flags>
      <tags>exclude_nonrazzle</tags>
    </default>
  </test>
  <test>
    <default>
      <files>generators_exceptions.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:generators_exceptions.js.dbg.baseline -ES6Generators -InspectMaxStringLength:200</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>TypedArray.js</files>
      <compile-flags>-ES6Species -debuglaunch -targeted -es6tostringtag -dbgbaseline:typedarray.js.dbg.baseline -InspectMaxStringLength:200</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>TypedArray.js</files>
      <command>jdtest.exe -dbgbaseline:typedarray.js.dbg.hybrid.baseline -targeted -InspectMaxStringLength:200 jshost</command>
      <compile-flags>-ES6Species -debuglaunch:hybrid -es6tostringtag</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ComputedPropertyNames.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:computedpropertynames.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ComputedPropertyNames.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:computedpropertynames.js.dbg.baseline jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ComputedPropertyNamesExceptionIgnore.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:computedpropertynamesexceptionignore.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ComputedPropertyNamesExceptionIgnore.js</files>
      <command>jdtest.exe -targeted -dbgbaseline:computedpropertynamesexceptionignore.js.dbg.baseline jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_760904_main.js</files>
      <baseline>bug_760904_main.baseline</baseline>
      <compile-flags> -targeted -dbgbaseline:bug_760904_main.js.dbg.baseline</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>parentedDynamicCode1.js</files>
      <compile-flags>-debuglaunch -targeted -InspectMaxStringLength:1000 -dbgbaseline:parenteddynamiccode1.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>parentedDynamicCode1.js</files>
      <compile-flags>-targeted -InspectMaxStringLength:1000 -dbgbaseline:parenteddynamiccode1.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>parentedDynamicCode2.js</files>
      <compile-flags>-targeted -InspectMaxStringLength:1000 -dbgbaseline:parenteddynamiccode2.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>parentedDynamicCode3.js</files>
      <compile-flags>-targeted -InspectMaxStringLength:1000 -dbgbaseline:parenteddynamiccode3.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>externaldeferredconstructor.js</files>
      <compile-flags>-targeted -debuglaunch -InspectMaxStringLength:1000</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-DiagnosticsEngine</compile-flags>
      <files>1612204.js</files>
      <baseline>1612204.js.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>1612204_2.js</files>
      <baseline>1612204.js.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>2171813.js</files>
      <compile-flags>-targeted -debuglaunch -InspectMaxStringLength:1000 -dbgbaseline:2171813.js.dbg.baseline</compile-flags>
    </default>
  </test>
    <test>
    <default>
      <files>cesuCharacters.js</files>
      <compile-flags>-targeted -debuglaunch -InspectMaxStringLength:1000 -dbgbaseline:cesuCharacters.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>cesuCharacters.js</files>      
      <command>jdtest.exe -targeted -dbgbaseline:cesuCharacters.js.hybrid.dbg.baseline -InspectMaxStringLength:100 jshost</command>
      <compile-flags>-debuglaunch:hybrid</compile-flags>
      <tags>exclude_jsrt,exclude_dynapogo</tags>      
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS_2628934.html</files>
      <compile-flags>-debuglaunch</compile-flags>
      <tags>BugFix,fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS_2744135_debugEvalSite.js</files>
      <compile-flags>-debuglaunch</compile-flags>
      <tags>BugFix,fail_mutators,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_os_2946365.js</files>
      <compile-flags>-targeted</compile-flags>
      <tags>BugFix,fail_mutators,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>ConsoleScope.js</files>
      <baseline>ConsoleScope.js.baseline</baseline>
      <compile-flags>-debuglaunch -targeted -es6classes -dbgbaseline:consolescope.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>ConsoleScopePMSpec.js</files>
      <baseline>ConsoleScopePMSpec.js.baseline</baseline>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:consolescopepmspec.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>ConsoleScopeCrossContext.js</files>
      <baseline>ConsoleScopeCrossContext.js.baseline</baseline>
      <compile-flags>-targeted -InspectMaxStringLength:100 -dbgbaseline:ConsoleScopeCrossContext.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>infiniteloop.js</files>
      <compile-flags>-debuglaunch</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>asmjsdebug.js</files>
      <baseline>asmjsdebug.baseline</baseline>
      <compile-flags>-asmjs -simdjs -testtrace:asmjs -targeted -dbgbaseline:asmjsdebug.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>asmjsdebug.js</files>
      <baseline>asmjsdebug.baseline</baseline>
      <compile-flags>-asmjs -simdjs -testtrace:asmjs -targeted -dbgbaseline:asmjsdebug.js.dbg.baseline -maic:0</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>asmjseval.js</files>
      <baseline>asmjseval.baseline</baseline>
      <compile-flags>-asmjs -simdjs -testtrace:asmjs -targeted -dbgbaseline:asmjseval.js.dbg.baseline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>destructuring-debug.js</files>
      <compile-flags>-es6defaultargs -es6destructuring -debuglaunch -targeted -InspectMaxStringLength:100 -dbgbaseline:destructuring-debug.js.dbg.baseline</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>commaexpression_span.js</files>
      <compile-flags>-debuglaunch -targeted -dbgbaseline:commaexpression_span.js.dbg.baseline</compile-flags>
      <baseline>commaexpression_span.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
</regress-exe>
