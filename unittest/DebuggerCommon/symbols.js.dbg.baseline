[
  {
    "evaluate": {
      "o": {
        "my symbol": "<large string>",
        "my symbol object": {
          "__proto__": {
            "[Methods]": {
              "constructor": {
                "[Methods]": "{...}",
                "__proto__": "<large string>",
                "hasInstance": "<large string>",
                "isConcatSpreadable": "<large string>",
                "iterator": "<large string>",
                "length": "0",
                "name": "Symbol",
                "prototype": "{...}",
                "species": "<large string>",
                "toPrimitive": "<large string>",
                "toStringTag": "<large string>",
                "unscopables": "<large string>"
              },
              "Symbol.toPrimitive": {
                "__proto__": "<large string>",
                "length": "1",
                "name": "<large string>"
              },
              "toString": {
                "__proto__": "<large string>",
                "length": "0",
                "name": "toString"
              },
              "valueOf": {
                "__proto__": "<large string>",
                "length": "0",
                "name": "valueOf"
              }
            },
            "__proto__": {
              "[Methods]": {
                "__defineGetter__": "<large string>",
                "__defineSetter__": "<large string>",
                "__lookupGetter__": "<large string>",
                "__lookupSetter__": "<large string>",
                "constructor": "<large string>",
                "hasOwnProperty": "<large string>",
                "isPrototypeOf": "<large string>",
                "propertyIsEnumerable": "<large string>",
                "toLocaleString": "<large string>",
                "toString": "<large string>",
                "valueOf": "<large string>"
              },
              "__proto__": "null"
            },
            "Symbol.toStringTag": "Symbol"
          }
        },
        "short symbol name": "Symbol(s)",
        "string": "[\"string\"]",
        "symbol with no name": "Symbol()",
        "Symbol.iterator": "[@@iterator]"
      }
    }
  }
]