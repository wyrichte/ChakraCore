Successfully compiled asm.js code
stderr: [1minput.cpp:352:66: [0m[0;1;35mwarning: [0m[1mformat specifies type 'int' but the argument has type 'long' [-Wformat][0m
stderr:                     printf("%4d  %20.12e%7d%9.1f%9.3f\n",k,cksum[k],mops[k],
stderr: [0;1;32m                                        ~~~                         ^~~~~~~
stderr: [0m[0;32m                                        %7ld
stderr: [0m[1minput.cpp:361:1: [0m[0;1;35mwarning: [0m[1mcontrol reaches end of non-void function [-Wreturn-type][0m
stderr: }
stderr: [0;1;32m^
stderr: [0m[1minput.cpp:434:1: [0m[0;1;35mwarning: [0m[1mnull character ignored [-Wnull-character][0m
stderr: [0;1;32m^
stderr: [0m3 warnings generated.
; ModuleID = 'input.cpp'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@y = common global [1002 x double] zeroinitializer, align 16
@z = common global [1002 x double] zeroinitializer, align 16
@x = common global [1002 x double] zeroinitializer, align 16
@u = common global [501 x double] zeroinitializer, align 16
@u1 = common global [6 x [23 x [3 x double]]] zeroinitializer, align 16
@u2 = common global [6 x [23 x [3 x double]]] zeroinitializer, align 16
@u3 = common global [6 x [23 x [3 x double]]] zeroinitializer, align 16
@px = common global [16 x [101 x double]] zeroinitializer, align 16
@cx = common global [16 x [101 x double]] zeroinitializer, align 16
@p = common global [5 x [513 x double]] zeroinitializer, align 16
@b = common global [65 x [9 x double]] zeroinitializer, align 16
@c = common global [65 x [9 x double]] zeroinitializer, align 16
@e = common global [193 x i32] zeroinitializer, align 16
@f = common global [193 x i32] zeroinitializer, align 16
@h = common global [65 x [9 x double]] zeroinitializer, align 16
@grd = common global [151 x double] zeroinitializer, align 16
@ex = common global [68 x double] zeroinitializer, align 16
@xx = common global [151 x double] zeroinitializer, align 16
@dex = common global [68 x double] zeroinitializer, align 16
@vx = common global [151 x double] zeroinitializer, align 16
@rh = common global [68 x double] zeroinitializer, align 16
@.str = private unnamed_addr constant [27 x i8] c"clock overhead = %9.2f use\00", align 1
@.str1 = private unnamed_addr constant [55 x i8] c"\0Aloop         checksum       flops    time    mflops \0A\00", align 1
@.str2 = private unnamed_addr constant [27 x i8] c"%4d  %20.12e%7d%9.1f%9.3f\0A\00", align 1
@.str3 = private unnamed_addr constant [35 x i8] c"      %20.12e *** expected checksu\00", align 1
@.str4 = private unnamed_addr constant [26 x i8] c"\0A   average mflops=%9.3f\0A\00", align 1
@bnk1 = common global [6 x double] zeroinitializer, align 16
@bnk2 = common global [6 x double] zeroinitializer, align 16
@bnk3 = common global [6 x double] zeroinitializer, align 16
@bnk4 = common global [6 x double] zeroinitializer, align 16
@bnk5 = common global [6 x double] zeroinitializer, align 16

; Function Attrs: nounwind
define i64 @Clock() #0 {
  ret i64 0
}

; Function Attrs: nounwind
define i32 @main1(i32 %output) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %nrops = alloca [15 x i64], align 16
  %loops = alloca [15 x i64], align 16
  %checks = alloca [15 x double], align 16
  %nt = alloca i32, align 4
  %lw = alloca i32, align 4
  %nl1 = alloca i32, align 4
  %nl2 = alloca i32, align 4
  %i = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %ip = alloca i32, align 4
  %ir = alloca i32, align 4
  %ix = alloca i32, align 4
  %j = alloca i32, align 4
  %j1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %k = alloca i32, align 4
  %kx = alloca i32, align 4
  %ky = alloca i32, align 4
  %l = alloca i32, align 4
  %m = alloca i32, align 4
  %ts = alloca [21 x double], align 16
  %rt = alloca [21 x double], align 16
  %rpm = alloca [21 x double], align 16
  %cksum = alloca [21 x double], align 16
  %r = alloca double, align 8
  %t = alloca double, align 8
  %a11 = alloca double, align 8
  %a12 = alloca double, align 8
  %a13 = alloca double, align 8
  %sig = alloca double, align 8
  %a21 = alloca double, align 8
  %a22 = alloca double, align 8
  %a23 = alloca double, align 8
  %a31 = alloca double, align 8
  %a32 = alloca double, align 8
  %a33 = alloca double, align 8
  %bm28 = alloca double, align 8
  %bm27 = alloca double, align 8
  %bm26 = alloca double, align 8
  %bm25 = alloca double, align 8
  %bm24 = alloca double, align 8
  %bm23 = alloca double, align 8
  %bm22 = alloca double, align 8
  %c0 = alloca double, align 8
  %flx = alloca double, align 8
  %rx1 = alloca double, align 8
  %q = alloca double, align 8
  %s = alloca double, align 8
  %scale = alloca double, align 8
  %uu = alloca double, align 8
  %du1 = alloca double, align 8
  %du2 = alloca double, align 8
  %du3 = alloca double, align 8
  %ar = alloca double, align 8
  %br = alloca double, align 8
  %cr = alloca double, align 8
  %xi = alloca double, align 8
  %ri = alloca double, align 8
  %mops = alloca [20 x i64], align 16
  store i32 %output, i32* %2, align 4
  %3 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 1
  store i64 5, i64* %4, align 8
  %5 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 2
  store i64 10, i64* %5, align 8
  %6 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 3
  store i64 2, i64* %6, align 8
  %7 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 4
  store i64 2, i64* %7, align 8
  %8 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 5
  store i64 2, i64* %8, align 8
  %9 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 6
  store i64 2, i64* %9, align 8
  %10 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 7
  store i64 16, i64* %10, align 8
  %11 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 8
  store i64 36, i64* %11, align 8
  %12 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 9
  store i64 17, i64* %12, align 8
  %13 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 10
  store i64 9, i64* %13, align 8
  %14 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 11
  store i64 1, i64* %14, align 8
  %15 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 12
  store i64 1, i64* %15, align 8
  %16 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 13
  store i64 7, i64* %16, align 8
  %17 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 14
  store i64 11, i64* %17, align 8
  %18 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 0
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 1
  store i64 400, i64* %19, align 8
  %20 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 2
  store i64 200, i64* %20, align 8
  %21 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 3
  store i64 1000, i64* %21, align 8
  %22 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 4
  store i64 510, i64* %22, align 8
  %23 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 5
  store i64 1000, i64* %23, align 8
  %24 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 6
  store i64 1000, i64* %24, align 8
  %25 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 7
  store i64 120, i64* %25, align 8
  %26 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 8
  store i64 40, i64* %26, align 8
  %27 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 9
  store i64 100, i64* %27, align 8
  %28 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 10
  store i64 100, i64* %28, align 8
  %29 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 11
  store i64 1000, i64* %29, align 8
  %30 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 12
  store i64 1000, i64* %30, align 8
  %31 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 13
  store i64 128, i64* %31, align 8
  %32 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 14
  store i64 150, i64* %32, align 8
  %33 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 0
  store double 0.000000e+00, double* %33, align 8
  %34 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 1
  store double 0x415EF98F5ED0917D, double* %34, align 8
  %35 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 2
  store double 3.563100e+02, double* %35, align 8
  %36 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 3
  store double 3.563100e+02, double* %36, align 8
  %37 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 4
  store double 0xC0E3A6266C32C3A2, double* %37, align 8
  %38 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 5
  store double 0x4100AC184D573648, double* %38, align 8
  %39 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 6
  store double 0x41199E111D67BA23, double* %39, align 8
  %40 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 7
  store double 0x415061D89E6AA8EB, double* %40, align 8
  %41 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 8
  store double 3.140644e+05, double* %41, align 8
  %42 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 9
  store double 1.827090e+06, double* %42, align 8
  %43 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 10
  store double 0xC1A0BD2224000000, double* %43, align 8
  %44 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 11
  store double 0x41B65871AC800000, double* %44, align 8
  %45 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 12
  store double 0.000000e+00, double* %45, align 8
  %46 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 13
  store double 0x4104EDC83126E979, double* %46, align 8
  %47 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 14
  store double 0xC1537C91E6E978D5, double* %47, align 8
  store i32 1, i32* %i, align 4
  br label %48

; <label>:48                                      ; preds = %55, %0
  %49 = load i32* %i, align 4
  %50 = icmp sle i32 %49, 20
  br i1 %50, label %51, label %58

; <label>:51                                      ; preds = %48
  %52 = load i32* %i, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 %53
  store double 0.000000e+00, double* %54, align 8
  br label %55

; <label>:55                                      ; preds = %51
  %56 = load i32* %i, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %i, align 4
  br label %48

; <label>:58                                      ; preds = %48
  store double 4.860000e+00, double* %r, align 8
  store double 2.760000e+02, double* %t, align 8
  store double 5.000000e-01, double* %a11, align 8
  store double 3.300000e-01, double* %a12, align 8
  store double 2.500000e-01, double* %a13, align 8
  store double 8.000000e-01, double* %sig, align 8
  store double 2.000000e-01, double* %a21, align 8
  store double 1.670000e-01, double* %a22, align 8
  store double 1.410000e-01, double* %a23, align 8
  store double 1.250000e-01, double* %a31, align 8
  store double 1.110000e-01, double* %a32, align 8
  store double 1.000000e-01, double* %a33, align 8
  store double 1.000000e-01, double* %bm28, align 8
  store double 2.000000e-01, double* %bm27, align 8
  store double 3.000000e-01, double* %bm26, align 8
  store double 4.000000e-01, double* %bm25, align 8
  store double 5.000000e-01, double* %bm24, align 8
  store double 6.000000e-01, double* %bm23, align 8
  store double 7.000000e-01, double* %bm22, align 8
  store double 8.000000e-01, double* %c0, align 8
  store double 4.689000e+00, double* %flx, align 8
  store double 6.400000e+01, double* %rx1, align 8
  call void @init()
  %59 = call i64 @Clock()
  %60 = sitofp i64 %59 to double
  %61 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 1
  store double %60, double* %61, align 8
  store double 0.000000e+00, double* %q, align 8
  store i32 1, i32* %k, align 4
  br label %62

; <label>:62                                      ; preds = %91, %58
  %63 = load i32* %k, align 4
  %64 = icmp sle i32 %63, 400
  br i1 %64, label %65, label %94

; <label>:65                                      ; preds = %62
  %66 = load double* %q, align 8
  %67 = load i32* %k, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [1002 x double]* @y, i32 0, i64 %68
  %70 = load double* %69, align 8
  %71 = load double* %r, align 8
  %72 = load i32* %k, align 4
  %73 = add nsw i32 %72, 10
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %74
  %76 = load double* %75, align 8
  %77 = fmul double %71, %76
  %78 = load double* %t, align 8
  %79 = load i32* %k, align 4
  %80 = add nsw i32 %79, 11
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %81
  %83 = load double* %82, align 8
  %84 = fmul double %78, %83
  %85 = fadd double %77, %84
  %86 = fmul double %70, %85
  %87 = fadd double %66, %86
  %88 = load i32* %k, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %89
  store double %87, double* %90, align 8
  br label %91

; <label>:91                                      ; preds = %65
  %92 = load i32* %k, align 4
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %k, align 4
  br label %62

; <label>:94                                      ; preds = %62
  %95 = call i64 @Clock()
  %96 = sitofp i64 %95 to double
  %97 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 1
  %98 = load double* %97, align 8
  %99 = fsub double %96, %98
  %100 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 1
  store double %99, double* %100, align 8
  store i32 1, i32* %k, align 4
  br label %101

; <label>:101                                     ; preds = %115, %94
  %102 = load i32* %k, align 4
  %103 = icmp sle i32 %102, 400
  br i1 %103, label %104, label %118

; <label>:104                                     ; preds = %101
  %105 = load i32* %k, align 4
  %106 = sitofp i32 %105 to double
  %107 = load i32* %k, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %108
  %110 = load double* %109, align 8
  %111 = fmul double %106, %110
  %112 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 1
  %113 = load double* %112, align 8
  %114 = fadd double %113, %111
  store double %114, double* %112, align 8
  br label %115

; <label>:115                                     ; preds = %104
  %116 = load i32* %k, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %k, align 4
  br label %101

; <label>:118                                     ; preds = %101
  call void @init()
  %119 = call i64 @Clock()
  %120 = sitofp i64 %119 to double
  %121 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 2
  store double %120, double* %121, align 8
  store double 0.000000e+00, double* %q, align 8
  store i32 1, i32* %k, align 4
  br label %122

; <label>:122                                     ; preds = %185, %118
  %123 = load i32* %k, align 4
  %124 = icmp sle i32 %123, 996
  br i1 %124, label %125, label %188

; <label>:125                                     ; preds = %122
  %126 = load i32* %k, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %127
  %129 = load double* %128, align 8
  %130 = load i32* %k, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %131
  %133 = load double* %132, align 8
  %134 = fmul double %129, %133
  %135 = load i32* %k, align 4
  %136 = add nsw i32 %135, 1
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %137
  %139 = load double* %138, align 8
  %140 = load i32* %k, align 4
  %141 = add nsw i32 %140, 1
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %142
  %144 = load double* %143, align 8
  %145 = fmul double %139, %144
  %146 = fadd double %134, %145
  %147 = load i32* %k, align 4
  %148 = add nsw i32 %147, 2
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %149
  %151 = load double* %150, align 8
  %152 = load i32* %k, align 4
  %153 = add nsw i32 %152, 2
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %154
  %156 = load double* %155, align 8
  %157 = fmul double %151, %156
  %158 = fadd double %146, %157
  %159 = load i32* %k, align 4
  %160 = add nsw i32 %159, 3
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %161
  %163 = load double* %162, align 8
  %164 = load i32* %k, align 4
  %165 = add nsw i32 %164, 3
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %166
  %168 = load double* %167, align 8
  %169 = fmul double %163, %168
  %170 = fadd double %158, %169
  %171 = load i32* %k, align 4
  %172 = add nsw i32 %171, 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %173
  %175 = load double* %174, align 8
  %176 = load i32* %k, align 4
  %177 = add nsw i32 %176, 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %178
  %180 = load double* %179, align 8
  %181 = fmul double %175, %180
  %182 = fadd double %170, %181
  %183 = load double* %q, align 8
  %184 = fadd double %183, %182
  store double %184, double* %q, align 8
  br label %185

; <label>:185                                     ; preds = %125
  %186 = load i32* %k, align 4
  %187 = add nsw i32 %186, 5
  store i32 %187, i32* %k, align 4
  br label %122

; <label>:188                                     ; preds = %122
  %189 = call i64 @Clock()
  %190 = sitofp i64 %189 to double
  %191 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 2
  %192 = load double* %191, align 8
  %193 = fsub double %190, %192
  %194 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 2
  store double %193, double* %194, align 8
  %195 = load double* %q, align 8
  %196 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 2
  store double %195, double* %196, align 8
  call void @init()
  %197 = call i64 @Clock()
  %198 = sitofp i64 %197 to double
  %199 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 3
  store double %198, double* %199, align 8
  store double 0.000000e+00, double* %q, align 8
  store i32 1, i32* %k, align 4
  br label %200

; <label>:200                                     ; preds = %215, %188
  %201 = load i32* %k, align 4
  %202 = icmp sle i32 %201, 1000
  br i1 %202, label %203, label %218

; <label>:203                                     ; preds = %200
  %204 = load i32* %k, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %205
  %207 = load double* %206, align 8
  %208 = load i32* %k, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %209
  %211 = load double* %210, align 8
  %212 = fmul double %207, %211
  %213 = load double* %q, align 8
  %214 = fadd double %213, %212
  store double %214, double* %q, align 8
  br label %215

; <label>:215                                     ; preds = %203
  %216 = load i32* %k, align 4
  %217 = add nsw i32 %216, 1
  store i32 %217, i32* %k, align 4
  br label %200

; <label>:218                                     ; preds = %200
  %219 = call i64 @Clock()
  %220 = sitofp i64 %219 to double
  %221 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 3
  %222 = load double* %221, align 8
  %223 = fsub double %220, %222
  %224 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 3
  store double %223, double* %224, align 8
  %225 = load double* %q, align 8
  %226 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 3
  store double %225, double* %226, align 8
  call void @init()
  %227 = call i64 @Clock()
  %228 = sitofp i64 %227 to double
  %229 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 4
  store double %228, double* %229, align 8
  store i32 7, i32* %l, align 4
  br label %230

; <label>:230                                     ; preds = %270, %218
  %231 = load i32* %l, align 4
  %232 = icmp sle i32 %231, 107
  br i1 %232, label %233, label %273

; <label>:233                                     ; preds = %230
  %234 = load i32* %l, align 4
  store i32 %234, i32* %lw, align 4
  store i32 30, i32* %j, align 4
  br label %235

; <label>:235                                     ; preds = %255, %233
  %236 = load i32* %j, align 4
  %237 = icmp sle i32 %236, 870
  br i1 %237, label %238, label %258

; <label>:238                                     ; preds = %235
  %239 = load i32* %lw, align 4
  %240 = add nsw i32 %239, 1
  store i32 %240, i32* %lw, align 4
  %241 = sext i32 %239 to i64
  %242 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %241
  %243 = load double* %242, align 8
  %244 = load i32* %j, align 4
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds [1002 x double]* @y, i32 0, i64 %245
  %247 = load double* %246, align 8
  %248 = fmul double %243, %247
  %249 = load i32* %l, align 4
  %250 = sub nsw i32 %249, 1
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %251
  %253 = load double* %252, align 8
  %254 = fsub double %253, %248
  store double %254, double* %252, align 8
  br label %255

; <label>:255                                     ; preds = %238
  %256 = load i32* %j, align 4
  %257 = add nsw i32 %256, 5
  store i32 %257, i32* %j, align 4
  br label %235

; <label>:258                                     ; preds = %235
  %259 = load double* getelementptr inbounds ([1002 x double]* @y, i32 0, i64 5), align 8
  %260 = load i32* %l, align 4
  %261 = sub nsw i32 %260, 1
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %262
  %264 = load double* %263, align 8
  %265 = fmul double %259, %264
  %266 = load i32* %l, align 4
  %267 = sub nsw i32 %266, 1
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %268
  store double %265, double* %269, align 8
  br label %270

; <label>:270                                     ; preds = %258
  %271 = load i32* %l, align 4
  %272 = add nsw i32 %271, 50
  store i32 %272, i32* %l, align 4
  br label %230

; <label>:273                                     ; preds = %230
  %274 = call i64 @Clock()
  %275 = sitofp i64 %274 to double
  %276 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 4
  %277 = load double* %276, align 8
  %278 = fsub double %275, %277
  %279 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 4
  store double %278, double* %279, align 8
  store i32 7, i32* %l, align 4
  br label %280

; <label>:280                                     ; preds = %295, %273
  %281 = load i32* %l, align 4
  %282 = icmp sle i32 %281, 107
  br i1 %282, label %283, label %298

; <label>:283                                     ; preds = %280
  %284 = load i32* %l, align 4
  %285 = sitofp i32 %284 to double
  %286 = load i32* %l, align 4
  %287 = sub nsw i32 %286, 1
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %288
  %290 = load double* %289, align 8
  %291 = fmul double %285, %290
  %292 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 4
  %293 = load double* %292, align 8
  %294 = fadd double %293, %291
  store double %294, double* %292, align 8
  br label %295

; <label>:295                                     ; preds = %283
  %296 = load i32* %l, align 4
  %297 = add nsw i32 %296, 50
  store i32 %297, i32* %l, align 4
  br label %280

; <label>:298                                     ; preds = %280
  call void @init()
  %299 = call i64 @Clock()
  %300 = sitofp i64 %299 to double
  %301 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 5
  store double %300, double* %301, align 8
  store i32 2, i32* %i, align 4
  br label %302

; <label>:302                                     ; preds = %365, %298
  %303 = load i32* %i, align 4
  %304 = icmp sle i32 %303, 998
  br i1 %304, label %305, label %368

; <label>:305                                     ; preds = %302
  %306 = load i32* %i, align 4
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %307
  %309 = load double* %308, align 8
  %310 = load i32* %i, align 4
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds [1002 x double]* @y, i32 0, i64 %311
  %313 = load double* %312, align 8
  %314 = load i32* %i, align 4
  %315 = sub nsw i32 %314, 1
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %316
  %318 = load double* %317, align 8
  %319 = fsub double %313, %318
  %320 = fmul double %309, %319
  %321 = load i32* %i, align 4
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %322
  store double %320, double* %323, align 8
  %324 = load i32* %i, align 4
  %325 = add nsw i32 %324, 1
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %326
  %328 = load double* %327, align 8
  %329 = load i32* %i, align 4
  %330 = add nsw i32 %329, 1
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds [1002 x double]* @y, i32 0, i64 %331
  %333 = load double* %332, align 8
  %334 = load i32* %i, align 4
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %335
  %337 = load double* %336, align 8
  %338 = fsub double %333, %337
  %339 = fmul double %328, %338
  %340 = load i32* %i, align 4
  %341 = add nsw i32 %340, 1
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %342
  store double %339, double* %343, align 8
  %344 = load i32* %i, align 4
  %345 = add nsw i32 %344, 2
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %346
  %348 = load double* %347, align 8
  %349 = load i32* %i, align 4
  %350 = add nsw i32 %349, 2
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds [1002 x double]* @y, i32 0, i64 %351
  %353 = load double* %352, align 8
  %354 = load i32* %i, align 4
  %355 = add nsw i32 %354, 1
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %356
  %358 = load double* %357, align 8
  %359 = fsub double %353, %358
  %360 = fmul double %348, %359
  %361 = load i32* %i, align 4
  %362 = add nsw i32 %361, 2
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %363
  store double %360, double* %364, align 8
  br label %365

; <label>:365                                     ; preds = %305
  %366 = load i32* %i, align 4
  %367 = add nsw i32 %366, 3
  store i32 %367, i32* %i, align 4
  br label %302

; <label>:368                                     ; preds = %302
  %369 = call i64 @Clock()
  %370 = sitofp i64 %369 to double
  %371 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 5
  %372 = load double* %371, align 8
  %373 = fsub double %370, %372
  %374 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 5
  store double %373, double* %374, align 8
  store i32 2, i32* %i, align 4
  br label %375

; <label>:375                                     ; preds = %389, %368
  %376 = load i32* %i, align 4
  %377 = icmp sle i32 %376, 1000
  br i1 %377, label %378, label %392

; <label>:378                                     ; preds = %375
  %379 = load i32* %i, align 4
  %380 = sitofp i32 %379 to double
  %381 = load i32* %i, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %382
  %384 = load double* %383, align 8
  %385 = fmul double %380, %384
  %386 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 5
  %387 = load double* %386, align 8
  %388 = fadd double %387, %385
  store double %388, double* %386, align 8
  br label %389

; <label>:389                                     ; preds = %378
  %390 = load i32* %i, align 4
  %391 = add nsw i32 %390, 1
  store i32 %391, i32* %i, align 4
  br label %375

; <label>:392                                     ; preds = %375
  call void @init()
  %393 = call i64 @Clock()
  %394 = sitofp i64 %393 to double
  %395 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 6
  store double %394, double* %395, align 8
  store i32 3, i32* %j, align 4
  br label %396

; <label>:396                                     ; preds = %461, %392
  %397 = load i32* %j, align 4
  %398 = icmp sle i32 %397, 999
  br i1 %398, label %399, label %464

; <label>:399                                     ; preds = %396
  %400 = load i32* %j, align 4
  %401 = sub nsw i32 1003, %400
  store i32 %401, i32* %i, align 4
  %402 = load i32* %i, align 4
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %403
  %405 = load double* %404, align 8
  %406 = load i32* %i, align 4
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %407
  %409 = load double* %408, align 8
  %410 = load i32* %i, align 4
  %411 = add nsw i32 %410, 1
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %412
  %414 = load double* %413, align 8
  %415 = fmul double %409, %414
  %416 = fsub double %405, %415
  %417 = load i32* %i, align 4
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %418
  store double %416, double* %419, align 8
  %420 = load i32* %i, align 4
  %421 = sub nsw i32 %420, 1
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %422
  %424 = load double* %423, align 8
  %425 = load i32* %i, align 4
  %426 = sub nsw i32 %425, 1
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %427
  %429 = load double* %428, align 8
  %430 = load i32* %i, align 4
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %431
  %433 = load double* %432, align 8
  %434 = fmul double %429, %433
  %435 = fsub double %424, %434
  %436 = load i32* %i, align 4
  %437 = sub nsw i32 %436, 1
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %438
  store double %435, double* %439, align 8
  %440 = load i32* %i, align 4
  %441 = sub nsw i32 %440, 2
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %442
  %444 = load double* %443, align 8
  %445 = load i32* %i, align 4
  %446 = sub nsw i32 %445, 2
  %447 = sext i32 %446 to i64
  %448 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %447
  %449 = load double* %448, align 8
  %450 = load i32* %i, align 4
  %451 = sub nsw i32 %450, 1
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %452
  %454 = load double* %453, align 8
  %455 = fmul double %449, %454
  %456 = fsub double %444, %455
  %457 = load i32* %i, align 4
  %458 = sub nsw i32 %457, 2
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %459
  store double %456, double* %460, align 8
  br label %461

; <label>:461                                     ; preds = %399
  %462 = load i32* %j, align 4
  %463 = add nsw i32 %462, 3
  store i32 %463, i32* %j, align 4
  br label %396

; <label>:464                                     ; preds = %396
  %465 = call i64 @Clock()
  %466 = sitofp i64 %465 to double
  %467 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 6
  %468 = load double* %467, align 8
  %469 = fsub double %466, %468
  %470 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 6
  store double %469, double* %470, align 8
  store i32 1, i32* %j, align 4
  br label %471

; <label>:471                                     ; preds = %487, %464
  %472 = load i32* %j, align 4
  %473 = icmp sle i32 %472, 999
  br i1 %473, label %474, label %490

; <label>:474                                     ; preds = %471
  %475 = load i32* %j, align 4
  %476 = sub nsw i32 1001, %475
  store i32 %476, i32* %l, align 4
  %477 = load i32* %j, align 4
  %478 = sitofp i32 %477 to double
  %479 = load i32* %l, align 4
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %480
  %482 = load double* %481, align 8
  %483 = fmul double %478, %482
  %484 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 6
  %485 = load double* %484, align 8
  %486 = fadd double %485, %483
  store double %486, double* %484, align 8
  br label %487

; <label>:487                                     ; preds = %474
  %488 = load i32* %j, align 4
  %489 = add nsw i32 %488, 1
  store i32 %489, i32* %j, align 4
  br label %471

; <label>:490                                     ; preds = %471
  call void @init()
  %491 = call i64 @Clock()
  %492 = sitofp i64 %491 to double
  %493 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 7
  store double %492, double* %493, align 8
  store i32 1, i32* %m, align 4
  br label %494

; <label>:494                                     ; preds = %567, %490
  %495 = load i32* %m, align 4
  %496 = icmp sle i32 %495, 120
  br i1 %496, label %497, label %570

; <label>:497                                     ; preds = %494
  %498 = load i32* %m, align 4
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds [501 x double]* @u, i32 0, i64 %499
  %501 = load double* %500, align 8
  %502 = load double* %r, align 8
  %503 = load i32* %m, align 4
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %504
  %506 = load double* %505, align 8
  %507 = load double* %r, align 8
  %508 = load i32* %m, align 4
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds [1002 x double]* @y, i32 0, i64 %509
  %511 = load double* %510, align 8
  %512 = fmul double %507, %511
  %513 = fadd double %506, %512
  %514 = fmul double %502, %513
  %515 = fadd double %501, %514
  %516 = load double* %t, align 8
  %517 = load i32* %m, align 4
  %518 = add nsw i32 %517, 3
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds [501 x double]* @u, i32 0, i64 %519
  %521 = load double* %520, align 8
  %522 = load double* %r, align 8
  %523 = load i32* %m, align 4
  %524 = add nsw i32 %523, 2
  %525 = sext i32 %524 to i64
  %526 = getelementptr inbounds [501 x double]* @u, i32 0, i64 %525
  %527 = load double* %526, align 8
  %528 = load double* %r, align 8
  %529 = load i32* %m, align 4
  %530 = add nsw i32 %529, 1
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds [501 x double]* @u, i32 0, i64 %531
  %533 = load double* %532, align 8
  %534 = fmul double %528, %533
  %535 = fadd double %527, %534
  %536 = fmul double %522, %535
  %537 = fadd double %521, %536
  %538 = load double* %t, align 8
  %539 = load i32* %m, align 4
  %540 = add nsw i32 %539, 6
  %541 = sext i32 %540 to i64
  %542 = getelementptr inbounds [501 x double]* @u, i32 0, i64 %541
  %543 = load double* %542, align 8
  %544 = load double* %r, align 8
  %545 = load i32* %m, align 4
  %546 = add nsw i32 %545, 5
  %547 = sext i32 %546 to i64
  %548 = getelementptr inbounds [501 x double]* @u, i32 0, i64 %547
  %549 = load double* %548, align 8
  %550 = load double* %r, align 8
  %551 = load i32* %m, align 4
  %552 = add nsw i32 %551, 4
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds [501 x double]* @u, i32 0, i64 %553
  %555 = load double* %554, align 8
  %556 = fmul double %550, %555
  %557 = fadd double %549, %556
  %558 = fmul double %544, %557
  %559 = fadd double %543, %558
  %560 = fmul double %538, %559
  %561 = fadd double %537, %560
  %562 = fmul double %516, %561
  %563 = fadd double %515, %562
  %564 = load i32* %m, align 4
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %565
  store double %563, double* %566, align 8
  br label %567

; <label>:567                                     ; preds = %497
  %568 = load i32* %m, align 4
  %569 = add nsw i32 %568, 1
  store i32 %569, i32* %m, align 4
  br label %494

; <label>:570                                     ; preds = %494
  %571 = call i64 @Clock()
  %572 = sitofp i64 %571 to double
  %573 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 7
  %574 = load double* %573, align 8
  %575 = fsub double %572, %574
  %576 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 7
  store double %575, double* %576, align 8
  store i32 1, i32* %m, align 4
  br label %577

; <label>:577                                     ; preds = %591, %570
  %578 = load i32* %m, align 4
  %579 = icmp sle i32 %578, 120
  br i1 %579, label %580, label %594

; <label>:580                                     ; preds = %577
  %581 = load i32* %m, align 4
  %582 = sitofp i32 %581 to double
  %583 = load i32* %m, align 4
  %584 = sext i32 %583 to i64
  %585 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %584
  %586 = load double* %585, align 8
  %587 = fmul double %582, %586
  %588 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 7
  %589 = load double* %588, align 8
  %590 = fadd double %589, %587
  store double %590, double* %588, align 8
  br label %591

; <label>:591                                     ; preds = %580
  %592 = load i32* %m, align 4
  %593 = add nsw i32 %592, 1
  store i32 %593, i32* %m, align 4
  br label %577

; <label>:594                                     ; preds = %577
  call void @init()
  %595 = call i64 @Clock()
  %596 = sitofp i64 %595 to double
  %597 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 8
  store double %596, double* %597, align 8
  store i32 1, i32* %nl1, align 4
  store i32 2, i32* %nl2, align 4
  store i32 2, i32* %kx, align 4
  br label %598

; <label>:598                                     ; preds = %886, %594
  %599 = load i32* %kx, align 4
  %600 = icmp sle i32 %599, 3
  br i1 %600, label %601, label %889

; <label>:601                                     ; preds = %598
  store i32 2, i32* %ky, align 4
  br label %602

; <label>:602                                     ; preds = %882, %601
  %603 = load i32* %ky, align 4
  %604 = icmp sle i32 %603, 21
  br i1 %604, label %605, label %885

; <label>:605                                     ; preds = %602
  %606 = load i32* %nl1, align 4
  %607 = sext i32 %606 to i64
  %608 = load i32* %ky, align 4
  %609 = add nsw i32 %608, 1
  %610 = sext i32 %609 to i64
  %611 = load i32* %kx, align 4
  %612 = sext i32 %611 to i64
  %613 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u1, i32 0, i64 %612
  %614 = getelementptr inbounds [23 x [3 x double]]* %613, i32 0, i64 %610
  %615 = getelementptr inbounds [3 x double]* %614, i32 0, i64 %607
  %616 = load double* %615, align 8
  %617 = load i32* %nl1, align 4
  %618 = sext i32 %617 to i64
  %619 = load i32* %ky, align 4
  %620 = sub nsw i32 %619, 1
  %621 = sext i32 %620 to i64
  %622 = load i32* %kx, align 4
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u1, i32 0, i64 %623
  %625 = getelementptr inbounds [23 x [3 x double]]* %624, i32 0, i64 %621
  %626 = getelementptr inbounds [3 x double]* %625, i32 0, i64 %618
  %627 = load double* %626, align 8
  %628 = fsub double %616, %627
  store double %628, double* %du1, align 8
  %629 = load i32* %nl1, align 4
  %630 = sext i32 %629 to i64
  %631 = load i32* %ky, align 4
  %632 = add nsw i32 %631, 1
  %633 = sext i32 %632 to i64
  %634 = load i32* %kx, align 4
  %635 = sext i32 %634 to i64
  %636 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u2, i32 0, i64 %635
  %637 = getelementptr inbounds [23 x [3 x double]]* %636, i32 0, i64 %633
  %638 = getelementptr inbounds [3 x double]* %637, i32 0, i64 %630
  %639 = load double* %638, align 8
  %640 = load i32* %nl1, align 4
  %641 = sext i32 %640 to i64
  %642 = load i32* %ky, align 4
  %643 = sub nsw i32 %642, 1
  %644 = sext i32 %643 to i64
  %645 = load i32* %kx, align 4
  %646 = sext i32 %645 to i64
  %647 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u2, i32 0, i64 %646
  %648 = getelementptr inbounds [23 x [3 x double]]* %647, i32 0, i64 %644
  %649 = getelementptr inbounds [3 x double]* %648, i32 0, i64 %641
  %650 = load double* %649, align 8
  %651 = fsub double %639, %650
  store double %651, double* %du2, align 8
  %652 = load i32* %nl1, align 4
  %653 = sext i32 %652 to i64
  %654 = load i32* %ky, align 4
  %655 = add nsw i32 %654, 1
  %656 = sext i32 %655 to i64
  %657 = load i32* %kx, align 4
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u3, i32 0, i64 %658
  %660 = getelementptr inbounds [23 x [3 x double]]* %659, i32 0, i64 %656
  %661 = getelementptr inbounds [3 x double]* %660, i32 0, i64 %653
  %662 = load double* %661, align 8
  %663 = load i32* %nl1, align 4
  %664 = sext i32 %663 to i64
  %665 = load i32* %ky, align 4
  %666 = sub nsw i32 %665, 1
  %667 = sext i32 %666 to i64
  %668 = load i32* %kx, align 4
  %669 = sext i32 %668 to i64
  %670 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u3, i32 0, i64 %669
  %671 = getelementptr inbounds [23 x [3 x double]]* %670, i32 0, i64 %667
  %672 = getelementptr inbounds [3 x double]* %671, i32 0, i64 %664
  %673 = load double* %672, align 8
  %674 = fsub double %662, %673
  store double %674, double* %du3, align 8
  %675 = load i32* %nl1, align 4
  %676 = sext i32 %675 to i64
  %677 = load i32* %ky, align 4
  %678 = sext i32 %677 to i64
  %679 = load i32* %kx, align 4
  %680 = sext i32 %679 to i64
  %681 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u1, i32 0, i64 %680
  %682 = getelementptr inbounds [23 x [3 x double]]* %681, i32 0, i64 %678
  %683 = getelementptr inbounds [3 x double]* %682, i32 0, i64 %676
  %684 = load double* %683, align 8
  %685 = load double* %a11, align 8
  %686 = load double* %du1, align 8
  %687 = fmul double %685, %686
  %688 = fadd double %684, %687
  %689 = load double* %a12, align 8
  %690 = load double* %du2, align 8
  %691 = fmul double %689, %690
  %692 = fadd double %688, %691
  %693 = load double* %a13, align 8
  %694 = load double* %du3, align 8
  %695 = fmul double %693, %694
  %696 = fadd double %692, %695
  %697 = load double* %sig, align 8
  %698 = load i32* %nl1, align 4
  %699 = sext i32 %698 to i64
  %700 = load i32* %ky, align 4
  %701 = sext i32 %700 to i64
  %702 = load i32* %kx, align 4
  %703 = add nsw i32 %702, 1
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u1, i32 0, i64 %704
  %706 = getelementptr inbounds [23 x [3 x double]]* %705, i32 0, i64 %701
  %707 = getelementptr inbounds [3 x double]* %706, i32 0, i64 %699
  %708 = load double* %707, align 8
  %709 = load i32* %nl1, align 4
  %710 = sext i32 %709 to i64
  %711 = load i32* %ky, align 4
  %712 = sext i32 %711 to i64
  %713 = load i32* %kx, align 4
  %714 = sext i32 %713 to i64
  %715 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u1, i32 0, i64 %714
  %716 = getelementptr inbounds [23 x [3 x double]]* %715, i32 0, i64 %712
  %717 = getelementptr inbounds [3 x double]* %716, i32 0, i64 %710
  %718 = load double* %717, align 8
  %719 = fmul double 2.000000e+00, %718
  %720 = fsub double %708, %719
  %721 = load i32* %nl1, align 4
  %722 = sext i32 %721 to i64
  %723 = load i32* %ky, align 4
  %724 = sext i32 %723 to i64
  %725 = load i32* %kx, align 4
  %726 = sub nsw i32 %725, 1
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u1, i32 0, i64 %727
  %729 = getelementptr inbounds [23 x [3 x double]]* %728, i32 0, i64 %724
  %730 = getelementptr inbounds [3 x double]* %729, i32 0, i64 %722
  %731 = load double* %730, align 8
  %732 = fadd double %720, %731
  %733 = fmul double %697, %732
  %734 = fadd double %696, %733
  %735 = load i32* %nl2, align 4
  %736 = sext i32 %735 to i64
  %737 = load i32* %ky, align 4
  %738 = sext i32 %737 to i64
  %739 = load i32* %kx, align 4
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u1, i32 0, i64 %740
  %742 = getelementptr inbounds [23 x [3 x double]]* %741, i32 0, i64 %738
  %743 = getelementptr inbounds [3 x double]* %742, i32 0, i64 %736
  store double %734, double* %743, align 8
  %744 = load i32* %nl1, align 4
  %745 = sext i32 %744 to i64
  %746 = load i32* %ky, align 4
  %747 = sext i32 %746 to i64
  %748 = load i32* %kx, align 4
  %749 = sext i32 %748 to i64
  %750 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u2, i32 0, i64 %749
  %751 = getelementptr inbounds [23 x [3 x double]]* %750, i32 0, i64 %747
  %752 = getelementptr inbounds [3 x double]* %751, i32 0, i64 %745
  %753 = load double* %752, align 8
  %754 = load double* %a21, align 8
  %755 = load double* %du1, align 8
  %756 = fmul double %754, %755
  %757 = fadd double %753, %756
  %758 = load double* %a22, align 8
  %759 = load double* %du2, align 8
  %760 = fmul double %758, %759
  %761 = fadd double %757, %760
  %762 = load double* %a23, align 8
  %763 = load double* %du3, align 8
  %764 = fmul double %762, %763
  %765 = fadd double %761, %764
  %766 = load double* %sig, align 8
  %767 = load i32* %nl1, align 4
  %768 = sext i32 %767 to i64
  %769 = load i32* %ky, align 4
  %770 = sext i32 %769 to i64
  %771 = load i32* %kx, align 4
  %772 = add nsw i32 %771, 1
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u2, i32 0, i64 %773
  %775 = getelementptr inbounds [23 x [3 x double]]* %774, i32 0, i64 %770
  %776 = getelementptr inbounds [3 x double]* %775, i32 0, i64 %768
  %777 = load double* %776, align 8
  %778 = load i32* %nl1, align 4
  %779 = sext i32 %778 to i64
  %780 = load i32* %ky, align 4
  %781 = sext i32 %780 to i64
  %782 = load i32* %kx, align 4
  %783 = sext i32 %782 to i64
  %784 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u2, i32 0, i64 %783
  %785 = getelementptr inbounds [23 x [3 x double]]* %784, i32 0, i64 %781
  %786 = getelementptr inbounds [3 x double]* %785, i32 0, i64 %779
  %787 = load double* %786, align 8
  %788 = fmul double 2.000000e+00, %787
  %789 = fsub double %777, %788
  %790 = load i32* %nl1, align 4
  %791 = sext i32 %790 to i64
  %792 = load i32* %ky, align 4
  %793 = sext i32 %792 to i64
  %794 = load i32* %kx, align 4
  %795 = sub nsw i32 %794, 1
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u2, i32 0, i64 %796
  %798 = getelementptr inbounds [23 x [3 x double]]* %797, i32 0, i64 %793
  %799 = getelementptr inbounds [3 x double]* %798, i32 0, i64 %791
  %800 = load double* %799, align 8
  %801 = fadd double %789, %800
  %802 = fmul double %766, %801
  %803 = fadd double %765, %802
  %804 = load i32* %nl2, align 4
  %805 = sext i32 %804 to i64
  %806 = load i32* %ky, align 4
  %807 = sext i32 %806 to i64
  %808 = load i32* %kx, align 4
  %809 = sext i32 %808 to i64
  %810 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u2, i32 0, i64 %809
  %811 = getelementptr inbounds [23 x [3 x double]]* %810, i32 0, i64 %807
  %812 = getelementptr inbounds [3 x double]* %811, i32 0, i64 %805
  store double %803, double* %812, align 8
  %813 = load i32* %nl1, align 4
  %814 = sext i32 %813 to i64
  %815 = load i32* %ky, align 4
  %816 = sext i32 %815 to i64
  %817 = load i32* %kx, align 4
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u3, i32 0, i64 %818
  %820 = getelementptr inbounds [23 x [3 x double]]* %819, i32 0, i64 %816
  %821 = getelementptr inbounds [3 x double]* %820, i32 0, i64 %814
  %822 = load double* %821, align 8
  %823 = load double* %a31, align 8
  %824 = load double* %du1, align 8
  %825 = fmul double %823, %824
  %826 = fadd double %822, %825
  %827 = load double* %a32, align 8
  %828 = load double* %du2, align 8
  %829 = fmul double %827, %828
  %830 = fadd double %826, %829
  %831 = load double* %a33, align 8
  %832 = load double* %du3, align 8
  %833 = fmul double %831, %832
  %834 = fadd double %830, %833
  %835 = load double* %sig, align 8
  %836 = load i32* %nl1, align 4
  %837 = sext i32 %836 to i64
  %838 = load i32* %ky, align 4
  %839 = sext i32 %838 to i64
  %840 = load i32* %kx, align 4
  %841 = add nsw i32 %840, 1
  %842 = sext i32 %841 to i64
  %843 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u3, i32 0, i64 %842
  %844 = getelementptr inbounds [23 x [3 x double]]* %843, i32 0, i64 %839
  %845 = getelementptr inbounds [3 x double]* %844, i32 0, i64 %837
  %846 = load double* %845, align 8
  %847 = load i32* %nl1, align 4
  %848 = sext i32 %847 to i64
  %849 = load i32* %ky, align 4
  %850 = sext i32 %849 to i64
  %851 = load i32* %kx, align 4
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u3, i32 0, i64 %852
  %854 = getelementptr inbounds [23 x [3 x double]]* %853, i32 0, i64 %850
  %855 = getelementptr inbounds [3 x double]* %854, i32 0, i64 %848
  %856 = load double* %855, align 8
  %857 = fmul double 2.000000e+00, %856
  %858 = fsub double %846, %857
  %859 = load i32* %nl1, align 4
  %860 = sext i32 %859 to i64
  %861 = load i32* %ky, align 4
  %862 = sext i32 %861 to i64
  %863 = load i32* %kx, align 4
  %864 = sub nsw i32 %863, 1
  %865 = sext i32 %864 to i64
  %866 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u3, i32 0, i64 %865
  %867 = getelementptr inbounds [23 x [3 x double]]* %866, i32 0, i64 %862
  %868 = getelementptr inbounds [3 x double]* %867, i32 0, i64 %860
  %869 = load double* %868, align 8
  %870 = fadd double %858, %869
  %871 = fmul double %835, %870
  %872 = fadd double %834, %871
  %873 = load i32* %nl2, align 4
  %874 = sext i32 %873 to i64
  %875 = load i32* %ky, align 4
  %876 = sext i32 %875 to i64
  %877 = load i32* %kx, align 4
  %878 = sext i32 %877 to i64
  %879 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u3, i32 0, i64 %878
  %880 = getelementptr inbounds [23 x [3 x double]]* %879, i32 0, i64 %876
  %881 = getelementptr inbounds [3 x double]* %880, i32 0, i64 %874
  store double %872, double* %881, align 8
  br label %882

; <label>:882                                     ; preds = %605
  %883 = load i32* %ky, align 4
  %884 = add nsw i32 %883, 1
  store i32 %884, i32* %ky, align 4
  br label %602

; <label>:885                                     ; preds = %602
  br label %886

; <label>:886                                     ; preds = %885
  %887 = load i32* %kx, align 4
  %888 = add nsw i32 %887, 1
  store i32 %888, i32* %kx, align 4
  br label %598

; <label>:889                                     ; preds = %598
  %890 = call i64 @Clock()
  %891 = sitofp i64 %890 to double
  %892 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 8
  %893 = load double* %892, align 8
  %894 = fsub double %891, %893
  %895 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 8
  store double %894, double* %895, align 8
  store i32 1, i32* %i, align 4
  br label %896

; <label>:896                                     ; preds = %960, %889
  %897 = load i32* %i, align 4
  %898 = icmp sle i32 %897, 2
  br i1 %898, label %899, label %963

; <label>:899                                     ; preds = %896
  store i32 2, i32* %kx, align 4
  br label %900

; <label>:900                                     ; preds = %956, %899
  %901 = load i32* %kx, align 4
  %902 = icmp sle i32 %901, 3
  br i1 %902, label %903, label %959

; <label>:903                                     ; preds = %900
  store i32 2, i32* %ky, align 4
  br label %904

; <label>:904                                     ; preds = %952, %903
  %905 = load i32* %ky, align 4
  %906 = icmp sle i32 %905, 21
  br i1 %906, label %907, label %955

; <label>:907                                     ; preds = %904
  %908 = load i32* %kx, align 4
  %909 = sitofp i32 %908 to double
  %910 = load i32* %ky, align 4
  %911 = sitofp i32 %910 to double
  %912 = fmul double %909, %911
  %913 = load i32* %i, align 4
  %914 = sitofp i32 %913 to double
  %915 = fmul double %912, %914
  %916 = load i32* %i, align 4
  %917 = sext i32 %916 to i64
  %918 = load i32* %ky, align 4
  %919 = sext i32 %918 to i64
  %920 = load i32* %kx, align 4
  %921 = sext i32 %920 to i64
  %922 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u1, i32 0, i64 %921
  %923 = getelementptr inbounds [23 x [3 x double]]* %922, i32 0, i64 %919
  %924 = getelementptr inbounds [3 x double]* %923, i32 0, i64 %917
  %925 = load double* %924, align 8
  %926 = load i32* %i, align 4
  %927 = sext i32 %926 to i64
  %928 = load i32* %ky, align 4
  %929 = sext i32 %928 to i64
  %930 = load i32* %kx, align 4
  %931 = sext i32 %930 to i64
  %932 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u2, i32 0, i64 %931
  %933 = getelementptr inbounds [23 x [3 x double]]* %932, i32 0, i64 %929
  %934 = getelementptr inbounds [3 x double]* %933, i32 0, i64 %927
  %935 = load double* %934, align 8
  %936 = fadd double %925, %935
  %937 = load i32* %i, align 4
  %938 = sext i32 %937 to i64
  %939 = load i32* %ky, align 4
  %940 = sext i32 %939 to i64
  %941 = load i32* %kx, align 4
  %942 = sext i32 %941 to i64
  %943 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u3, i32 0, i64 %942
  %944 = getelementptr inbounds [23 x [3 x double]]* %943, i32 0, i64 %940
  %945 = getelementptr inbounds [3 x double]* %944, i32 0, i64 %938
  %946 = load double* %945, align 8
  %947 = fadd double %936, %946
  %948 = fmul double %915, %947
  %949 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 8
  %950 = load double* %949, align 8
  %951 = fadd double %950, %948
  store double %951, double* %949, align 8
  br label %952

; <label>:952                                     ; preds = %907
  %953 = load i32* %ky, align 4
  %954 = add nsw i32 %953, 1
  store i32 %954, i32* %ky, align 4
  br label %904

; <label>:955                                     ; preds = %904
  br label %956

; <label>:956                                     ; preds = %955
  %957 = load i32* %kx, align 4
  %958 = add nsw i32 %957, 1
  store i32 %958, i32* %kx, align 4
  br label %900

; <label>:959                                     ; preds = %900
  br label %960

; <label>:960                                     ; preds = %959
  %961 = load i32* %i, align 4
  %962 = add nsw i32 %961, 1
  store i32 %962, i32* %i, align 4
  br label %896

; <label>:963                                     ; preds = %896
  call void @init()
  %964 = call i64 @Clock()
  %965 = sitofp i64 %964 to double
  %966 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 9
  store double %965, double* %966, align 8
  store i32 1, i32* %i, align 4
  br label %967

; <label>:967                                     ; preds = %1039, %963
  %968 = load i32* %i, align 4
  %969 = icmp sle i32 %968, 100
  br i1 %969, label %970, label %1042

; <label>:970                                     ; preds = %967
  %971 = load double* %bm28, align 8
  %972 = load i32* %i, align 4
  %973 = sext i32 %972 to i64
  %974 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 13), i32 0, i64 %973
  %975 = load double* %974, align 8
  %976 = fmul double %971, %975
  %977 = load double* %bm27, align 8
  %978 = load i32* %i, align 4
  %979 = sext i32 %978 to i64
  %980 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 12), i32 0, i64 %979
  %981 = load double* %980, align 8
  %982 = fmul double %977, %981
  %983 = fadd double %976, %982
  %984 = load double* %bm26, align 8
  %985 = load i32* %i, align 4
  %986 = sext i32 %985 to i64
  %987 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 11), i32 0, i64 %986
  %988 = load double* %987, align 8
  %989 = fmul double %984, %988
  %990 = fadd double %983, %989
  %991 = load double* %bm25, align 8
  %992 = load i32* %i, align 4
  %993 = sext i32 %992 to i64
  %994 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 10), i32 0, i64 %993
  %995 = load double* %994, align 8
  %996 = fmul double %991, %995
  %997 = fadd double %990, %996
  %998 = load double* %bm24, align 8
  %999 = load i32* %i, align 4
  %1000 = sext i32 %999 to i64
  %1001 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 9), i32 0, i64 %1000
  %1002 = load double* %1001, align 8
  %1003 = fmul double %998, %1002
  %1004 = fadd double %997, %1003
  %1005 = load double* %bm23, align 8
  %1006 = load i32* %i, align 4
  %1007 = sext i32 %1006 to i64
  %1008 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 8), i32 0, i64 %1007
  %1009 = load double* %1008, align 8
  %1010 = fmul double %1005, %1009
  %1011 = fadd double %1004, %1010
  %1012 = load double* %bm22, align 8
  %1013 = load i32* %i, align 4
  %1014 = sext i32 %1013 to i64
  %1015 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 7), i32 0, i64 %1014
  %1016 = load double* %1015, align 8
  %1017 = fmul double %1012, %1016
  %1018 = fadd double %1011, %1017
  %1019 = load double* %c0, align 8
  %1020 = load i32* %i, align 4
  %1021 = sext i32 %1020 to i64
  %1022 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 5), i32 0, i64 %1021
  %1023 = load double* %1022, align 8
  %1024 = load i32* %i, align 4
  %1025 = sext i32 %1024 to i64
  %1026 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 6), i32 0, i64 %1025
  %1027 = load double* %1026, align 8
  %1028 = fadd double %1023, %1027
  %1029 = fmul double %1019, %1028
  %1030 = fadd double %1018, %1029
  %1031 = load i32* %i, align 4
  %1032 = sext i32 %1031 to i64
  %1033 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 3), i32 0, i64 %1032
  %1034 = load double* %1033, align 8
  %1035 = fadd double %1030, %1034
  %1036 = load i32* %i, align 4
  %1037 = sext i32 %1036 to i64
  %1038 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 1), i32 0, i64 %1037
  store double %1035, double* %1038, align 8
  br label %1039

; <label>:1039                                    ; preds = %970
  %1040 = load i32* %i, align 4
  %1041 = add nsw i32 %1040, 1
  store i32 %1041, i32* %i, align 4
  br label %967

; <label>:1042                                    ; preds = %967
  %1043 = call i64 @Clock()
  %1044 = sitofp i64 %1043 to double
  %1045 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 9
  %1046 = load double* %1045, align 8
  %1047 = fsub double %1044, %1046
  %1048 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 9
  store double %1047, double* %1048, align 8
  store i32 1, i32* %i, align 4
  br label %1049

; <label>:1049                                    ; preds = %1063, %1042
  %1050 = load i32* %i, align 4
  %1051 = icmp sle i32 %1050, 100
  br i1 %1051, label %1052, label %1066

; <label>:1052                                    ; preds = %1049
  %1053 = load i32* %i, align 4
  %1054 = sitofp i32 %1053 to double
  %1055 = load i32* %i, align 4
  %1056 = sext i32 %1055 to i64
  %1057 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 1), i32 0, i64 %1056
  %1058 = load double* %1057, align 8
  %1059 = fmul double %1054, %1058
  %1060 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 9
  %1061 = load double* %1060, align 8
  %1062 = fadd double %1061, %1059
  store double %1062, double* %1060, align 8
  br label %1063

; <label>:1063                                    ; preds = %1052
  %1064 = load i32* %i, align 4
  %1065 = add nsw i32 %1064, 1
  store i32 %1065, i32* %i, align 4
  br label %1049

; <label>:1066                                    ; preds = %1049
  call void @init()
  %1067 = call i64 @Clock()
  %1068 = sitofp i64 %1067 to double
  %1069 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 10
  store double %1068, double* %1069, align 8
  store i32 1, i32* %i, align 4
  br label %1070

; <label>:1070                                    ; preds = %1171, %1066
  %1071 = load i32* %i, align 4
  %1072 = icmp sle i32 %1071, 100
  br i1 %1072, label %1073, label %1174

; <label>:1073                                    ; preds = %1070
  %1074 = load i32* %i, align 4
  %1075 = sext i32 %1074 to i64
  %1076 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @cx, i32 0, i64 5), i32 0, i64 %1075
  %1077 = load double* %1076, align 8
  store double %1077, double* %ar, align 8
  %1078 = load double* %ar, align 8
  %1079 = load i32* %i, align 4
  %1080 = sext i32 %1079 to i64
  %1081 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 5), i32 0, i64 %1080
  %1082 = load double* %1081, align 8
  %1083 = fsub double %1078, %1082
  store double %1083, double* %br, align 8
  %1084 = load double* %ar, align 8
  %1085 = load i32* %i, align 4
  %1086 = sext i32 %1085 to i64
  %1087 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 5), i32 0, i64 %1086
  store double %1084, double* %1087, align 8
  %1088 = load double* %br, align 8
  %1089 = load i32* %i, align 4
  %1090 = sext i32 %1089 to i64
  %1091 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 6), i32 0, i64 %1090
  %1092 = load double* %1091, align 8
  %1093 = fsub double %1088, %1092
  store double %1093, double* %cr, align 8
  %1094 = load double* %br, align 8
  %1095 = load i32* %i, align 4
  %1096 = sext i32 %1095 to i64
  %1097 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 6), i32 0, i64 %1096
  store double %1094, double* %1097, align 8
  %1098 = load double* %cr, align 8
  %1099 = load i32* %i, align 4
  %1100 = sext i32 %1099 to i64
  %1101 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 7), i32 0, i64 %1100
  %1102 = load double* %1101, align 8
  %1103 = fsub double %1098, %1102
  store double %1103, double* %ar, align 8
  %1104 = load double* %cr, align 8
  %1105 = load i32* %i, align 4
  %1106 = sext i32 %1105 to i64
  %1107 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 7), i32 0, i64 %1106
  store double %1104, double* %1107, align 8
  %1108 = load double* %ar, align 8
  %1109 = load i32* %i, align 4
  %1110 = sext i32 %1109 to i64
  %1111 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 8), i32 0, i64 %1110
  %1112 = load double* %1111, align 8
  %1113 = fsub double %1108, %1112
  store double %1113, double* %br, align 8
  %1114 = load double* %ar, align 8
  %1115 = load i32* %i, align 4
  %1116 = sext i32 %1115 to i64
  %1117 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 8), i32 0, i64 %1116
  store double %1114, double* %1117, align 8
  %1118 = load double* %br, align 8
  %1119 = load i32* %i, align 4
  %1120 = sext i32 %1119 to i64
  %1121 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 9), i32 0, i64 %1120
  %1122 = load double* %1121, align 8
  %1123 = fsub double %1118, %1122
  store double %1123, double* %cr, align 8
  %1124 = load double* %br, align 8
  %1125 = load i32* %i, align 4
  %1126 = sext i32 %1125 to i64
  %1127 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 9), i32 0, i64 %1126
  store double %1124, double* %1127, align 8
  %1128 = load double* %cr, align 8
  %1129 = load i32* %i, align 4
  %1130 = sext i32 %1129 to i64
  %1131 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 10), i32 0, i64 %1130
  %1132 = load double* %1131, align 8
  %1133 = fsub double %1128, %1132
  store double %1133, double* %ar, align 8
  %1134 = load double* %cr, align 8
  %1135 = load i32* %i, align 4
  %1136 = sext i32 %1135 to i64
  %1137 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 10), i32 0, i64 %1136
  store double %1134, double* %1137, align 8
  %1138 = load double* %ar, align 8
  %1139 = load i32* %i, align 4
  %1140 = sext i32 %1139 to i64
  %1141 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 11), i32 0, i64 %1140
  %1142 = load double* %1141, align 8
  %1143 = fsub double %1138, %1142
  store double %1143, double* %br, align 8
  %1144 = load double* %ar, align 8
  %1145 = load i32* %i, align 4
  %1146 = sext i32 %1145 to i64
  %1147 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 11), i32 0, i64 %1146
  store double %1144, double* %1147, align 8
  %1148 = load double* %br, align 8
  %1149 = load i32* %i, align 4
  %1150 = sext i32 %1149 to i64
  %1151 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 12), i32 0, i64 %1150
  %1152 = load double* %1151, align 8
  %1153 = fsub double %1148, %1152
  store double %1153, double* %cr, align 8
  %1154 = load double* %br, align 8
  %1155 = load i32* %i, align 4
  %1156 = sext i32 %1155 to i64
  %1157 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 12), i32 0, i64 %1156
  store double %1154, double* %1157, align 8
  %1158 = load double* %cr, align 8
  %1159 = load i32* %i, align 4
  %1160 = sext i32 %1159 to i64
  %1161 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 13), i32 0, i64 %1160
  %1162 = load double* %1161, align 8
  %1163 = fsub double %1158, %1162
  %1164 = load i32* %i, align 4
  %1165 = sext i32 %1164 to i64
  %1166 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 14), i32 0, i64 %1165
  store double %1163, double* %1166, align 8
  %1167 = load double* %cr, align 8
  %1168 = load i32* %i, align 4
  %1169 = sext i32 %1168 to i64
  %1170 = getelementptr inbounds [101 x double]* getelementptr inbounds ([16 x [101 x double]]* @px, i32 0, i64 13), i32 0, i64 %1169
  store double %1167, double* %1170, align 8
  br label %1171

; <label>:1171                                    ; preds = %1073
  %1172 = load i32* %i, align 4
  %1173 = add nsw i32 %1172, 1
  store i32 %1173, i32* %i, align 4
  br label %1070

; <label>:1174                                    ; preds = %1070
  %1175 = call i64 @Clock()
  %1176 = sitofp i64 %1175 to double
  %1177 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 10
  %1178 = load double* %1177, align 8
  %1179 = fsub double %1176, %1178
  %1180 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 10
  store double %1179, double* %1180, align 8
  store i32 1, i32* %i, align 4
  br label %1181

; <label>:1181                                    ; preds = %1209, %1174
  %1182 = load i32* %i, align 4
  %1183 = icmp sle i32 %1182, 100
  br i1 %1183, label %1184, label %1212

; <label>:1184                                    ; preds = %1181
  store i32 5, i32* %k, align 4
  br label %1185

; <label>:1185                                    ; preds = %1205, %1184
  %1186 = load i32* %k, align 4
  %1187 = icmp sle i32 %1186, 14
  br i1 %1187, label %1188, label %1208

; <label>:1188                                    ; preds = %1185
  %1189 = load i32* %k, align 4
  %1190 = sitofp i32 %1189 to double
  %1191 = load i32* %i, align 4
  %1192 = sitofp i32 %1191 to double
  %1193 = fmul double %1190, %1192
  %1194 = load i32* %i, align 4
  %1195 = sext i32 %1194 to i64
  %1196 = load i32* %k, align 4
  %1197 = sext i32 %1196 to i64
  %1198 = getelementptr inbounds [16 x [101 x double]]* @px, i32 0, i64 %1197
  %1199 = getelementptr inbounds [101 x double]* %1198, i32 0, i64 %1195
  %1200 = load double* %1199, align 8
  %1201 = fmul double %1193, %1200
  %1202 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 10
  %1203 = load double* %1202, align 8
  %1204 = fadd double %1203, %1201
  store double %1204, double* %1202, align 8
  br label %1205

; <label>:1205                                    ; preds = %1188
  %1206 = load i32* %k, align 4
  %1207 = add nsw i32 %1206, 1
  store i32 %1207, i32* %k, align 4
  br label %1185

; <label>:1208                                    ; preds = %1185
  br label %1209

; <label>:1209                                    ; preds = %1208
  %1210 = load i32* %i, align 4
  %1211 = add nsw i32 %1210, 1
  store i32 %1211, i32* %i, align 4
  br label %1181

; <label>:1212                                    ; preds = %1181
  call void @init()
  %1213 = call i64 @Clock()
  %1214 = sitofp i64 %1213 to double
  %1215 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 11
  store double %1214, double* %1215, align 8
  %1216 = load double* getelementptr inbounds ([1002 x double]* @y, i32 0, i64 1), align 8
  store double %1216, double* getelementptr inbounds ([1002 x double]* @x, i32 0, i64 1), align 8
  store i32 2, i32* %k, align 4
  br label %1217

; <label>:1217                                    ; preds = %1234, %1212
  %1218 = load i32* %k, align 4
  %1219 = icmp sle i32 %1218, 1000
  br i1 %1219, label %1220, label %1237

; <label>:1220                                    ; preds = %1217
  %1221 = load i32* %k, align 4
  %1222 = sub nsw i32 %1221, 1
  %1223 = sext i32 %1222 to i64
  %1224 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %1223
  %1225 = load double* %1224, align 8
  %1226 = load i32* %k, align 4
  %1227 = sext i32 %1226 to i64
  %1228 = getelementptr inbounds [1002 x double]* @y, i32 0, i64 %1227
  %1229 = load double* %1228, align 8
  %1230 = fadd double %1225, %1229
  %1231 = load i32* %k, align 4
  %1232 = sext i32 %1231 to i64
  %1233 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %1232
  store double %1230, double* %1233, align 8
  br label %1234

; <label>:1234                                    ; preds = %1220
  %1235 = load i32* %k, align 4
  %1236 = add nsw i32 %1235, 1
  store i32 %1236, i32* %k, align 4
  br label %1217

; <label>:1237                                    ; preds = %1217
  %1238 = call i64 @Clock()
  %1239 = sitofp i64 %1238 to double
  %1240 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 11
  %1241 = load double* %1240, align 8
  %1242 = fsub double %1239, %1241
  %1243 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 11
  store double %1242, double* %1243, align 8
  store i32 1, i32* %k, align 4
  br label %1244

; <label>:1244                                    ; preds = %1258, %1237
  %1245 = load i32* %k, align 4
  %1246 = icmp sle i32 %1245, 1000
  br i1 %1246, label %1247, label %1261

; <label>:1247                                    ; preds = %1244
  %1248 = load i32* %k, align 4
  %1249 = sitofp i32 %1248 to double
  %1250 = load i32* %k, align 4
  %1251 = sext i32 %1250 to i64
  %1252 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %1251
  %1253 = load double* %1252, align 8
  %1254 = fmul double %1249, %1253
  %1255 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 11
  %1256 = load double* %1255, align 8
  %1257 = fadd double %1256, %1254
  store double %1257, double* %1255, align 8
  br label %1258

; <label>:1258                                    ; preds = %1247
  %1259 = load i32* %k, align 4
  %1260 = add nsw i32 %1259, 1
  store i32 %1260, i32* %k, align 4
  br label %1244

; <label>:1261                                    ; preds = %1244
  call void @init()
  %1262 = call i64 @Clock()
  %1263 = sitofp i64 %1262 to double
  %1264 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 12
  store double %1263, double* %1264, align 8
  store i32 1, i32* %k, align 4
  br label %1265

; <label>:1265                                    ; preds = %1282, %1261
  %1266 = load i32* %k, align 4
  %1267 = icmp sle i32 %1266, 999
  br i1 %1267, label %1268, label %1285

; <label>:1268                                    ; preds = %1265
  %1269 = load i32* %k, align 4
  %1270 = add nsw i32 %1269, 1
  %1271 = sext i32 %1270 to i64
  %1272 = getelementptr inbounds [1002 x double]* @y, i32 0, i64 %1271
  %1273 = load double* %1272, align 8
  %1274 = load i32* %k, align 4
  %1275 = sext i32 %1274 to i64
  %1276 = getelementptr inbounds [1002 x double]* @y, i32 0, i64 %1275
  %1277 = load double* %1276, align 8
  %1278 = fsub double %1273, %1277
  %1279 = load i32* %k, align 4
  %1280 = sext i32 %1279 to i64
  %1281 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %1280
  store double %1278, double* %1281, align 8
  br label %1282

; <label>:1282                                    ; preds = %1268
  %1283 = load i32* %k, align 4
  %1284 = add nsw i32 %1283, 1
  store i32 %1284, i32* %k, align 4
  br label %1265

; <label>:1285                                    ; preds = %1265
  %1286 = call i64 @Clock()
  %1287 = sitofp i64 %1286 to double
  %1288 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 12
  %1289 = load double* %1288, align 8
  %1290 = fsub double %1287, %1289
  %1291 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 12
  store double %1290, double* %1291, align 8
  store i32 1, i32* %k, align 4
  br label %1292

; <label>:1292                                    ; preds = %1306, %1285
  %1293 = load i32* %k, align 4
  %1294 = icmp sle i32 %1293, 999
  br i1 %1294, label %1295, label %1309

; <label>:1295                                    ; preds = %1292
  %1296 = load i32* %k, align 4
  %1297 = sitofp i32 %1296 to double
  %1298 = load i32* %k, align 4
  %1299 = sext i32 %1298 to i64
  %1300 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %1299
  %1301 = load double* %1300, align 8
  %1302 = fmul double %1297, %1301
  %1303 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 12
  %1304 = load double* %1303, align 8
  %1305 = fadd double %1304, %1302
  store double %1305, double* %1303, align 8
  br label %1306

; <label>:1306                                    ; preds = %1295
  %1307 = load i32* %k, align 4
  %1308 = add nsw i32 %1307, 1
  store i32 %1308, i32* %k, align 4
  br label %1292

; <label>:1309                                    ; preds = %1292
  call void @init()
  %1310 = call i64 @Clock()
  %1311 = sitofp i64 %1310 to double
  %1312 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 13
  store double %1311, double* %1312, align 8
  store i32 1, i32* %ip, align 4
  br label %1313

; <label>:1313                                    ; preds = %1421, %1309
  %1314 = load i32* %ip, align 4
  %1315 = icmp sle i32 %1314, 128
  br i1 %1315, label %1316, label %1424

; <label>:1316                                    ; preds = %1313
  %1317 = load i32* %ip, align 4
  %1318 = sext i32 %1317 to i64
  %1319 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 1), i32 0, i64 %1318
  %1320 = load double* %1319, align 8
  %1321 = fptosi double %1320 to i32
  store i32 %1321, i32* %i1, align 4
  %1322 = load i32* %ip, align 4
  %1323 = sext i32 %1322 to i64
  %1324 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 2), i32 0, i64 %1323
  %1325 = load double* %1324, align 8
  %1326 = fptosi double %1325 to i32
  store i32 %1326, i32* %j1, align 4
  %1327 = load i32* %j1, align 4
  %1328 = sext i32 %1327 to i64
  %1329 = load i32* %i1, align 4
  %1330 = sext i32 %1329 to i64
  %1331 = getelementptr inbounds [65 x [9 x double]]* @b, i32 0, i64 %1330
  %1332 = getelementptr inbounds [9 x double]* %1331, i32 0, i64 %1328
  %1333 = load double* %1332, align 8
  %1334 = load i32* %ip, align 4
  %1335 = sext i32 %1334 to i64
  %1336 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 3), i32 0, i64 %1335
  %1337 = load double* %1336, align 8
  %1338 = fadd double %1337, %1333
  store double %1338, double* %1336, align 8
  %1339 = load i32* %j1, align 4
  %1340 = sext i32 %1339 to i64
  %1341 = load i32* %i1, align 4
  %1342 = sext i32 %1341 to i64
  %1343 = getelementptr inbounds [65 x [9 x double]]* @c, i32 0, i64 %1342
  %1344 = getelementptr inbounds [9 x double]* %1343, i32 0, i64 %1340
  %1345 = load double* %1344, align 8
  %1346 = load i32* %ip, align 4
  %1347 = sext i32 %1346 to i64
  %1348 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 4), i32 0, i64 %1347
  %1349 = load double* %1348, align 8
  %1350 = fadd double %1349, %1345
  store double %1350, double* %1348, align 8
  %1351 = load i32* %ip, align 4
  %1352 = sext i32 %1351 to i64
  %1353 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 3), i32 0, i64 %1352
  %1354 = load double* %1353, align 8
  %1355 = load i32* %ip, align 4
  %1356 = sext i32 %1355 to i64
  %1357 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 1), i32 0, i64 %1356
  %1358 = load double* %1357, align 8
  %1359 = fadd double %1358, %1354
  store double %1359, double* %1357, align 8
  %1360 = load i32* %ip, align 4
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 4), i32 0, i64 %1361
  %1363 = load double* %1362, align 8
  %1364 = load i32* %ip, align 4
  %1365 = sext i32 %1364 to i64
  %1366 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 2), i32 0, i64 %1365
  %1367 = load double* %1366, align 8
  %1368 = fadd double %1367, %1363
  store double %1368, double* %1366, align 8
  %1369 = load i32* %ip, align 4
  %1370 = sext i32 %1369 to i64
  %1371 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 1), i32 0, i64 %1370
  %1372 = load double* %1371, align 8
  %1373 = fptosi double %1372 to i32
  store i32 %1373, i32* %i2, align 4
  %1374 = load i32* %ip, align 4
  %1375 = sext i32 %1374 to i64
  %1376 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 2), i32 0, i64 %1375
  %1377 = load double* %1376, align 8
  %1378 = fptosi double %1377 to i32
  store i32 %1378, i32* %j2, align 4
  %1379 = load i32* %i2, align 4
  %1380 = add nsw i32 %1379, 32
  %1381 = sext i32 %1380 to i64
  %1382 = getelementptr inbounds [1002 x double]* @y, i32 0, i64 %1381
  %1383 = load double* %1382, align 8
  %1384 = load i32* %ip, align 4
  %1385 = sext i32 %1384 to i64
  %1386 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 1), i32 0, i64 %1385
  %1387 = load double* %1386, align 8
  %1388 = fadd double %1387, %1383
  store double %1388, double* %1386, align 8
  %1389 = load i32* %j2, align 4
  %1390 = add nsw i32 %1389, 32
  %1391 = sext i32 %1390 to i64
  %1392 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %1391
  %1393 = load double* %1392, align 8
  %1394 = load i32* %ip, align 4
  %1395 = sext i32 %1394 to i64
  %1396 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 2), i32 0, i64 %1395
  %1397 = load double* %1396, align 8
  %1398 = fadd double %1397, %1393
  store double %1398, double* %1396, align 8
  %1399 = load i32* %i2, align 4
  %1400 = add nsw i32 %1399, 32
  %1401 = sext i32 %1400 to i64
  %1402 = getelementptr inbounds [193 x i32]* @e, i32 0, i64 %1401
  %1403 = load i32* %1402, align 4
  %1404 = load i32* %i2, align 4
  %1405 = add nsw i32 %1404, %1403
  store i32 %1405, i32* %i2, align 4
  %1406 = load i32* %j2, align 4
  %1407 = add nsw i32 %1406, 32
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds [193 x i32]* @f, i32 0, i64 %1408
  %1410 = load i32* %1409, align 4
  %1411 = load i32* %j2, align 4
  %1412 = add nsw i32 %1411, %1410
  store i32 %1412, i32* %j2, align 4
  %1413 = load i32* %j2, align 4
  %1414 = sext i32 %1413 to i64
  %1415 = load i32* %i2, align 4
  %1416 = sext i32 %1415 to i64
  %1417 = getelementptr inbounds [65 x [9 x double]]* @h, i32 0, i64 %1416
  %1418 = getelementptr inbounds [9 x double]* %1417, i32 0, i64 %1414
  %1419 = load double* %1418, align 8
  %1420 = fadd double %1419, 1.000000e+00
  store double %1420, double* %1418, align 8
  br label %1421

; <label>:1421                                    ; preds = %1316
  %1422 = load i32* %ip, align 4
  %1423 = add nsw i32 %1422, 1
  store i32 %1423, i32* %ip, align 4
  br label %1313

; <label>:1424                                    ; preds = %1313
  %1425 = call i64 @Clock()
  %1426 = sitofp i64 %1425 to double
  %1427 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 13
  %1428 = load double* %1427, align 8
  %1429 = fsub double %1426, %1428
  %1430 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 13
  store double %1429, double* %1430, align 8
  store i32 1, i32* %ip, align 4
  br label %1431

; <label>:1431                                    ; preds = %1460, %1424
  %1432 = load i32* %ip, align 4
  %1433 = icmp sle i32 %1432, 128
  br i1 %1433, label %1434, label %1463

; <label>:1434                                    ; preds = %1431
  %1435 = load i32* %ip, align 4
  %1436 = sitofp i32 %1435 to double
  %1437 = load i32* %ip, align 4
  %1438 = sext i32 %1437 to i64
  %1439 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 3), i32 0, i64 %1438
  %1440 = load double* %1439, align 8
  %1441 = load i32* %ip, align 4
  %1442 = sext i32 %1441 to i64
  %1443 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 4), i32 0, i64 %1442
  %1444 = load double* %1443, align 8
  %1445 = fadd double %1440, %1444
  %1446 = load i32* %ip, align 4
  %1447 = sext i32 %1446 to i64
  %1448 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 1), i32 0, i64 %1447
  %1449 = load double* %1448, align 8
  %1450 = fadd double %1445, %1449
  %1451 = load i32* %ip, align 4
  %1452 = sext i32 %1451 to i64
  %1453 = getelementptr inbounds [513 x double]* getelementptr inbounds ([5 x [513 x double]]* @p, i32 0, i64 2), i32 0, i64 %1452
  %1454 = load double* %1453, align 8
  %1455 = fadd double %1450, %1454
  %1456 = fmul double %1436, %1455
  %1457 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 13
  %1458 = load double* %1457, align 8
  %1459 = fadd double %1458, %1456
  store double %1459, double* %1457, align 8
  br label %1460

; <label>:1460                                    ; preds = %1434
  %1461 = load i32* %ip, align 4
  %1462 = add nsw i32 %1461, 1
  store i32 %1462, i32* %ip, align 4
  br label %1431

; <label>:1463                                    ; preds = %1431
  store i32 1, i32* %k, align 4
  br label %1464

; <label>:1464                                    ; preds = %1492, %1463
  %1465 = load i32* %k, align 4
  %1466 = icmp sle i32 %1465, 64
  br i1 %1466, label %1467, label %1495

; <label>:1467                                    ; preds = %1464
  store i32 1, i32* %ix, align 4
  br label %1468

; <label>:1468                                    ; preds = %1488, %1467
  %1469 = load i32* %ix, align 4
  %1470 = icmp sle i32 %1469, 8
  br i1 %1470, label %1471, label %1491

; <label>:1471                                    ; preds = %1468
  %1472 = load i32* %k, align 4
  %1473 = sitofp i32 %1472 to double
  %1474 = load i32* %ix, align 4
  %1475 = sitofp i32 %1474 to double
  %1476 = fmul double %1473, %1475
  %1477 = load i32* %ix, align 4
  %1478 = sext i32 %1477 to i64
  %1479 = load i32* %k, align 4
  %1480 = sext i32 %1479 to i64
  %1481 = getelementptr inbounds [65 x [9 x double]]* @h, i32 0, i64 %1480
  %1482 = getelementptr inbounds [9 x double]* %1481, i32 0, i64 %1478
  %1483 = load double* %1482, align 8
  %1484 = fmul double %1476, %1483
  %1485 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 13
  %1486 = load double* %1485, align 8
  %1487 = fadd double %1486, %1484
  store double %1487, double* %1485, align 8
  br label %1488

; <label>:1488                                    ; preds = %1471
  %1489 = load i32* %ix, align 4
  %1490 = add nsw i32 %1489, 1
  store i32 %1490, i32* %ix, align 4
  br label %1468

; <label>:1491                                    ; preds = %1468
  br label %1492

; <label>:1492                                    ; preds = %1491
  %1493 = load i32* %k, align 4
  %1494 = add nsw i32 %1493, 1
  store i32 %1494, i32* %k, align 4
  br label %1464

; <label>:1495                                    ; preds = %1464
  call void @init()
  %1496 = call i64 @Clock()
  %1497 = sitofp i64 %1496 to double
  %1498 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 14
  store double %1497, double* %1498, align 8
  store i32 1, i32* %k, align 4
  br label %1499

; <label>:1499                                    ; preds = %1578, %1495
  %1500 = load i32* %k, align 4
  %1501 = icmp sle i32 %1500, 150
  br i1 %1501, label %1502, label %1581

; <label>:1502                                    ; preds = %1499
  %1503 = load i32* %k, align 4
  %1504 = sext i32 %1503 to i64
  %1505 = getelementptr inbounds [151 x double]* @grd, i32 0, i64 %1504
  %1506 = load double* %1505, align 8
  %1507 = fptosi double %1506 to i32
  store i32 %1507, i32* %ix, align 4
  %1508 = load i32* %ix, align 4
  %1509 = sitofp i32 %1508 to double
  store double %1509, double* %xi, align 8
  %1510 = load i32* %ix, align 4
  %1511 = sext i32 %1510 to i64
  %1512 = getelementptr inbounds [68 x double]* @ex, i32 0, i64 %1511
  %1513 = load double* %1512, align 8
  %1514 = load i32* %k, align 4
  %1515 = sext i32 %1514 to i64
  %1516 = getelementptr inbounds [151 x double]* @xx, i32 0, i64 %1515
  %1517 = load double* %1516, align 8
  %1518 = load double* %xi, align 8
  %1519 = fsub double %1517, %1518
  %1520 = load i32* %ix, align 4
  %1521 = sext i32 %1520 to i64
  %1522 = getelementptr inbounds [68 x double]* @dex, i32 0, i64 %1521
  %1523 = load double* %1522, align 8
  %1524 = fmul double %1519, %1523
  %1525 = fadd double %1513, %1524
  %1526 = load i32* %k, align 4
  %1527 = sext i32 %1526 to i64
  %1528 = getelementptr inbounds [151 x double]* @vx, i32 0, i64 %1527
  %1529 = load double* %1528, align 8
  %1530 = fadd double %1529, %1525
  store double %1530, double* %1528, align 8
  %1531 = load i32* %k, align 4
  %1532 = sext i32 %1531 to i64
  %1533 = getelementptr inbounds [151 x double]* @vx, i32 0, i64 %1532
  %1534 = load double* %1533, align 8
  %1535 = load double* %flx, align 8
  %1536 = fadd double %1534, %1535
  %1537 = load i32* %k, align 4
  %1538 = sext i32 %1537 to i64
  %1539 = getelementptr inbounds [151 x double]* @xx, i32 0, i64 %1538
  %1540 = load double* %1539, align 8
  %1541 = fadd double %1540, %1536
  store double %1541, double* %1539, align 8
  %1542 = load i32* %k, align 4
  %1543 = sext i32 %1542 to i64
  %1544 = getelementptr inbounds [151 x double]* @xx, i32 0, i64 %1543
  %1545 = load double* %1544, align 8
  %1546 = fptosi double %1545 to i32
  store i32 %1546, i32* %ir, align 4
  %1547 = load i32* %ir, align 4
  %1548 = sitofp i32 %1547 to double
  store double %1548, double* %ri, align 8
  %1549 = load i32* %k, align 4
  %1550 = sext i32 %1549 to i64
  %1551 = getelementptr inbounds [151 x double]* @xx, i32 0, i64 %1550
  %1552 = load double* %1551, align 8
  %1553 = load double* %ri, align 8
  %1554 = fsub double %1552, %1553
  store double %1554, double* %rx1, align 8
  %1555 = load i32* %ir, align 4
  %1556 = srem i32 %1555, 64
  %1557 = call i32 @abs(i32 %1556)
  store i32 %1557, i32* %ir, align 4
  %1558 = load double* %ri, align 8
  %1559 = load double* %rx1, align 8
  %1560 = fadd double %1558, %1559
  %1561 = load i32* %k, align 4
  %1562 = sext i32 %1561 to i64
  %1563 = getelementptr inbounds [151 x double]* @xx, i32 0, i64 %1562
  store double %1560, double* %1563, align 8
  %1564 = load double* %rx1, align 8
  %1565 = fsub double 1.000000e+00, %1564
  %1566 = load i32* %ir, align 4
  %1567 = sext i32 %1566 to i64
  %1568 = getelementptr inbounds [68 x double]* @rh, i32 0, i64 %1567
  %1569 = load double* %1568, align 8
  %1570 = fadd double %1569, %1565
  store double %1570, double* %1568, align 8
  %1571 = load double* %rx1, align 8
  %1572 = load i32* %ir, align 4
  %1573 = add nsw i32 %1572, 1
  %1574 = sext i32 %1573 to i64
  %1575 = getelementptr inbounds [68 x double]* @rh, i32 0, i64 %1574
  %1576 = load double* %1575, align 8
  %1577 = fadd double %1576, %1571
  store double %1577, double* %1575, align 8
  br label %1578

; <label>:1578                                    ; preds = %1502
  %1579 = load i32* %k, align 4
  %1580 = add nsw i32 %1579, 1
  store i32 %1580, i32* %k, align 4
  br label %1499

; <label>:1581                                    ; preds = %1499
  %1582 = call i64 @Clock()
  %1583 = sitofp i64 %1582 to double
  %1584 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 14
  %1585 = load double* %1584, align 8
  %1586 = fsub double %1583, %1585
  %1587 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 14
  store double %1586, double* %1587, align 8
  store i32 1, i32* %k, align 4
  br label %1588

; <label>:1588                                    ; preds = %1607, %1581
  %1589 = load i32* %k, align 4
  %1590 = icmp sle i32 %1589, 150
  br i1 %1590, label %1591, label %1610

; <label>:1591                                    ; preds = %1588
  %1592 = load i32* %k, align 4
  %1593 = sitofp i32 %1592 to double
  %1594 = load i32* %k, align 4
  %1595 = sext i32 %1594 to i64
  %1596 = getelementptr inbounds [151 x double]* @vx, i32 0, i64 %1595
  %1597 = load double* %1596, align 8
  %1598 = load i32* %k, align 4
  %1599 = sext i32 %1598 to i64
  %1600 = getelementptr inbounds [151 x double]* @xx, i32 0, i64 %1599
  %1601 = load double* %1600, align 8
  %1602 = fadd double %1597, %1601
  %1603 = fmul double %1593, %1602
  %1604 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 14
  %1605 = load double* %1604, align 8
  %1606 = fadd double %1605, %1603
  store double %1606, double* %1604, align 8
  br label %1607

; <label>:1607                                    ; preds = %1591
  %1608 = load i32* %k, align 4
  %1609 = add nsw i32 %1608, 1
  store i32 %1609, i32* %k, align 4
  br label %1588

; <label>:1610                                    ; preds = %1588
  store i32 1, i32* %k, align 4
  br label %1611

; <label>:1611                                    ; preds = %1625, %1610
  %1612 = load i32* %k, align 4
  %1613 = icmp sle i32 %1612, 67
  br i1 %1613, label %1614, label %1628

; <label>:1614                                    ; preds = %1611
  %1615 = load i32* %k, align 4
  %1616 = sitofp i32 %1615 to double
  %1617 = load i32* %k, align 4
  %1618 = sext i32 %1617 to i64
  %1619 = getelementptr inbounds [68 x double]* @rh, i32 0, i64 %1618
  %1620 = load double* %1619, align 8
  %1621 = fmul double %1616, %1620
  %1622 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 14
  %1623 = load double* %1622, align 8
  %1624 = fadd double %1623, %1621
  store double %1624, double* %1622, align 8
  br label %1625

; <label>:1625                                    ; preds = %1614
  %1626 = load i32* %k, align 4
  %1627 = add nsw i32 %1626, 1
  store i32 %1627, i32* %k, align 4
  br label %1611

; <label>:1628                                    ; preds = %1611
  %1629 = call i64 @Clock()
  %1630 = sitofp i64 %1629 to double
  %1631 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 15
  store double %1630, double* %1631, align 8
  %1632 = call i64 @Clock()
  %1633 = sitofp i64 %1632 to double
  %1634 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 15
  %1635 = load double* %1634, align 8
  %1636 = fsub double %1633, %1635
  %1637 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 15
  store double %1636, double* %1637, align 8
  store double 1.000000e+00, double* %scale, align 8
  %1638 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 15
  %1639 = load double* %1638, align 8
  %1640 = load double* %scale, align 8
  %1641 = fmul double %1639, %1640
  %1642 = getelementptr inbounds [21 x double]* %rt, i32 0, i64 15
  store double %1641, double* %1642, align 8
  %1643 = load i32* %2, align 4
  %1644 = icmp ne i32 %1643, 0
  br i1 %1644, label %1645, label %1649

; <label>:1645                                    ; preds = %1628
  %1646 = getelementptr inbounds [21 x double]* %rt, i32 0, i64 15
  %1647 = load double* %1646, align 8
  %1648 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str, i32 0, i32 0), double %1647)
  br label %1649

; <label>:1649                                    ; preds = %1645, %1628
  store i32 14, i32* %nt, align 4
  store double 0.000000e+00, double* %uu, align 8
  store double 0.000000e+00, double* %s, align 8
  store double 0.000000e+00, double* %t, align 8
  store i32 1, i32* %k, align 4
  br label %1650

; <label>:1650                                    ; preds = %1721, %1649
  %1651 = load i32* %k, align 4
  %1652 = load i32* %nt, align 4
  %1653 = icmp sle i32 %1651, %1652
  br i1 %1653, label %1654, label %1724

; <label>:1654                                    ; preds = %1650
  %1655 = load i32* %k, align 4
  %1656 = sext i32 %1655 to i64
  %1657 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 %1656
  %1658 = load double* %1657, align 8
  %1659 = getelementptr inbounds [21 x double]* %ts, i32 0, i64 15
  %1660 = load double* %1659, align 8
  %1661 = fsub double %1658, %1660
  %1662 = load double* %scale, align 8
  %1663 = fmul double %1661, %1662
  %1664 = load i32* %k, align 4
  %1665 = sext i32 %1664 to i64
  %1666 = getelementptr inbounds [21 x double]* %rt, i32 0, i64 %1665
  store double %1663, double* %1666, align 8
  %1667 = load i32* %k, align 4
  %1668 = sext i32 %1667 to i64
  %1669 = getelementptr inbounds [21 x double]* %rt, i32 0, i64 %1668
  %1670 = load double* %1669, align 8
  %1671 = load double* %t, align 8
  %1672 = fadd double %1671, %1670
  store double %1672, double* %t, align 8
  %1673 = load i32* %k, align 4
  %1674 = sext i32 %1673 to i64
  %1675 = getelementptr inbounds [15 x i64]* %nrops, i32 0, i64 %1674
  %1676 = load i64* %1675, align 8
  %1677 = load i32* %k, align 4
  %1678 = sext i32 %1677 to i64
  %1679 = getelementptr inbounds [15 x i64]* %loops, i32 0, i64 %1678
  %1680 = load i64* %1679, align 8
  %1681 = mul nsw i64 %1676, %1680
  %1682 = load i32* %k, align 4
  %1683 = sext i32 %1682 to i64
  %1684 = getelementptr inbounds [20 x i64]* %mops, i32 0, i64 %1683
  store i64 %1681, i64* %1684, align 8
  %1685 = load i32* %k, align 4
  %1686 = sext i32 %1685 to i64
  %1687 = getelementptr inbounds [20 x i64]* %mops, i32 0, i64 %1686
  %1688 = load i64* %1687, align 8
  %1689 = sitofp i64 %1688 to double
  %1690 = load double* %s, align 8
  %1691 = fadd double %1690, %1689
  store double %1691, double* %s, align 8
  %1692 = load i32* %k, align 4
  %1693 = sext i32 %1692 to i64
  %1694 = getelementptr inbounds [21 x double]* %rpm, i32 0, i64 %1693
  store double 0.000000e+00, double* %1694, align 8
  %1695 = load i32* %k, align 4
  %1696 = sext i32 %1695 to i64
  %1697 = getelementptr inbounds [21 x double]* %rt, i32 0, i64 %1696
  %1698 = load double* %1697, align 8
  %1699 = fcmp une double %1698, 0.000000e+00
  br i1 %1699, label %1700, label %1714

; <label>:1700                                    ; preds = %1654
  %1701 = load i32* %k, align 4
  %1702 = sext i32 %1701 to i64
  %1703 = getelementptr inbounds [20 x i64]* %mops, i32 0, i64 %1702
  %1704 = load i64* %1703, align 8
  %1705 = sitofp i64 %1704 to double
  %1706 = load i32* %k, align 4
  %1707 = sext i32 %1706 to i64
  %1708 = getelementptr inbounds [21 x double]* %rt, i32 0, i64 %1707
  %1709 = load double* %1708, align 8
  %1710 = fdiv double %1705, %1709
  %1711 = load i32* %k, align 4
  %1712 = sext i32 %1711 to i64
  %1713 = getelementptr inbounds [21 x double]* %rpm, i32 0, i64 %1712
  store double %1710, double* %1713, align 8
  br label %1714

; <label>:1714                                    ; preds = %1700, %1654
  %1715 = load i32* %k, align 4
  %1716 = sext i32 %1715 to i64
  %1717 = getelementptr inbounds [21 x double]* %rpm, i32 0, i64 %1716
  %1718 = load double* %1717, align 8
  %1719 = load double* %uu, align 8
  %1720 = fadd double %1719, %1718
  store double %1720, double* %uu, align 8
  br label %1721

; <label>:1721                                    ; preds = %1714
  %1722 = load i32* %k, align 4
  %1723 = add nsw i32 %1722, 1
  store i32 %1723, i32* %k, align 4
  br label %1650

; <label>:1724                                    ; preds = %1650
  %1725 = load i32* %nt, align 4
  %1726 = sitofp i32 %1725 to double
  %1727 = load double* %uu, align 8
  %1728 = fdiv double %1727, %1726
  store double %1728, double* %uu, align 8
  %1729 = load double* %t, align 8
  %1730 = load double* %s, align 8
  %1731 = fdiv double %1730, %1729
  store double %1731, double* %s, align 8
  %1732 = load i32* %2, align 4
  %1733 = icmp ne i32 %1732, 0
  br i1 %1733, label %1734, label %1789

; <label>:1734                                    ; preds = %1724
  %1735 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str1, i32 0, i32 0))
  store i32 1, i32* %k, align 4
  br label %1736

; <label>:1736                                    ; preds = %1783, %1734
  %1737 = load i32* %k, align 4
  %1738 = load i32* %nt, align 4
  %1739 = icmp sle i32 %1737, %1738
  br i1 %1739, label %1740, label %1786

; <label>:1740                                    ; preds = %1736
  %1741 = load i32* %k, align 4
  %1742 = load i32* %k, align 4
  %1743 = sext i32 %1742 to i64
  %1744 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 %1743
  %1745 = load double* %1744, align 8
  %1746 = load i32* %k, align 4
  %1747 = sext i32 %1746 to i64
  %1748 = getelementptr inbounds [20 x i64]* %mops, i32 0, i64 %1747
  %1749 = load i64* %1748, align 8
  %1750 = load i32* %k, align 4
  %1751 = sext i32 %1750 to i64
  %1752 = getelementptr inbounds [21 x double]* %rt, i32 0, i64 %1751
  %1753 = load double* %1752, align 8
  %1754 = load i32* %k, align 4
  %1755 = sext i32 %1754 to i64
  %1756 = getelementptr inbounds [21 x double]* %rpm, i32 0, i64 %1755
  %1757 = load double* %1756, align 8
  %1758 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str2, i32 0, i32 0), i32 %1741, double %1745, i64 %1749, double %1753, double %1757)
  %1759 = load i32* %k, align 4
  %1760 = sext i32 %1759 to i64
  %1761 = getelementptr inbounds [21 x double]* %cksum, i32 0, i64 %1760
  %1762 = load double* %1761, align 8
  %1763 = load i32* %k, align 4
  %1764 = sext i32 %1763 to i64
  %1765 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 %1764
  %1766 = load double* %1765, align 8
  %1767 = fsub double %1762, %1766
  %1768 = call double @fabs(double %1767) #3
  %1769 = load i32* %k, align 4
  %1770 = sext i32 %1769 to i64
  %1771 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 %1770
  %1772 = load double* %1771, align 8
  %1773 = fmul double %1772, 1.000000e-06
  %1774 = call double @fabs(double %1773) #3
  %1775 = fcmp ogt double %1768, %1774
  br i1 %1775, label %1776, label %1782

; <label>:1776                                    ; preds = %1740
  %1777 = load i32* %k, align 4
  %1778 = sext i32 %1777 to i64
  %1779 = getelementptr inbounds [15 x double]* %checks, i32 0, i64 %1778
  %1780 = load double* %1779, align 8
  %1781 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([35 x i8]* @.str3, i32 0, i32 0), double %1780)
  br label %1782

; <label>:1782                                    ; preds = %1776, %1740
  br label %1783

; <label>:1783                                    ; preds = %1782
  %1784 = load i32* %k, align 4
  %1785 = add nsw i32 %1784, 1
  store i32 %1785, i32* %k, align 4
  br label %1736

; <label>:1786                                    ; preds = %1736
  %1787 = load double* %uu, align 8
  %1788 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str4, i32 0, i32 0), double %1787)
  br label %1789

; <label>:1789                                    ; preds = %1786, %1724
  %1790 = load i32* %1
  ret i32 %1790
}

declare i32 @abs(i32) #1

declare i32 @printf(i8*, ...) #1

; Function Attrs: nounwind readnone
declare double @fabs(double) #2

; Function Attrs: nounwind
define void @init() #0 {
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  store i32 1, i32* %k, align 4
  br label %1

; <label>:1                                       ; preds = %14, %0
  %2 = load i32* %k, align 4
  %3 = icmp sle i32 %2, 1000
  br i1 %3, label %4, label %17

; <label>:4                                       ; preds = %1
  %5 = load i32* %k, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [1002 x double]* @x, i32 0, i64 %6
  store double 1.110000e+00, double* %7, align 8
  %8 = load i32* %k, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [1002 x double]* @y, i32 0, i64 %9
  store double 1.123000e+00, double* %10, align 8
  %11 = load i32* %k, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [1002 x double]* @z, i32 0, i64 %12
  store double 3.210000e-01, double* %13, align 8
  br label %14

; <label>:14                                      ; preds = %4
  %15 = load i32* %k, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %k, align 4
  br label %1

; <label>:17                                      ; preds = %1
  store i32 1, i32* %k, align 4
  br label %18

; <label>:18                                      ; preds = %25, %17
  %19 = load i32* %k, align 4
  %20 = icmp sle i32 %19, 500
  br i1 %20, label %21, label %28

; <label>:21                                      ; preds = %18
  %22 = load i32* %k, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [501 x double]* @u, i32 0, i64 %23
  store double 2.500000e-04, double* %24, align 8
  br label %25

; <label>:25                                      ; preds = %21
  %26 = load i32* %k, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %k, align 4
  br label %18

; <label>:28                                      ; preds = %18
  store i32 1, i32* %k, align 4
  br label %29

; <label>:29                                      ; preds = %57, %28
  %30 = load i32* %k, align 4
  %31 = icmp sle i32 %30, 15
  br i1 %31, label %32, label %60

; <label>:32                                      ; preds = %29
  store i32 1, i32* %l, align 4
  br label %33

; <label>:33                                      ; preds = %53, %32
  %34 = load i32* %l, align 4
  %35 = icmp sle i32 %34, 100
  br i1 %35, label %36, label %56

; <label>:36                                      ; preds = %33
  %37 = load i32* %l, align 4
  %38 = sitofp i32 %37 to double
  %39 = load i32* %l, align 4
  %40 = sext i32 %39 to i64
  %41 = load i32* %k, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [16 x [101 x double]]* @px, i32 0, i64 %42
  %44 = getelementptr inbounds [101 x double]* %43, i32 0, i64 %40
  store double %38, double* %44, align 8
  %45 = load i32* %l, align 4
  %46 = sitofp i32 %45 to double
  %47 = load i32* %l, align 4
  %48 = sext i32 %47 to i64
  %49 = load i32* %k, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [16 x [101 x double]]* @cx, i32 0, i64 %50
  %52 = getelementptr inbounds [101 x double]* %51, i32 0, i64 %48
  store double %46, double* %52, align 8
  br label %53

; <label>:53                                      ; preds = %36
  %54 = load i32* %l, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %l, align 4
  br label %33

; <label>:56                                      ; preds = %33
  br label %57

; <label>:57                                      ; preds = %56
  %58 = load i32* %k, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %k, align 4
  br label %29

; <label>:60                                      ; preds = %29
  store i32 1, i32* %j, align 4
  br label %61

; <label>:61                                      ; preds = %120, %60
  %62 = load i32* %j, align 4
  %63 = icmp slt i32 %62, 6
  br i1 %63, label %64, label %123

; <label>:64                                      ; preds = %61
  store i32 1, i32* %k, align 4
  br label %65

; <label>:65                                      ; preds = %116, %64
  %66 = load i32* %k, align 4
  %67 = icmp slt i32 %66, 23
  br i1 %67, label %68, label %119

; <label>:68                                      ; preds = %65
  store i32 1, i32* %l, align 4
  br label %69

; <label>:69                                      ; preds = %112, %68
  %70 = load i32* %l, align 4
  %71 = icmp slt i32 %70, 3
  br i1 %71, label %72, label %115

; <label>:72                                      ; preds = %69
  %73 = load i32* %k, align 4
  %74 = sitofp i32 %73 to double
  %75 = load i32* %l, align 4
  %76 = sext i32 %75 to i64
  %77 = load i32* %k, align 4
  %78 = sext i32 %77 to i64
  %79 = load i32* %j, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u1, i32 0, i64 %80
  %82 = getelementptr inbounds [23 x [3 x double]]* %81, i32 0, i64 %78
  %83 = getelementptr inbounds [3 x double]* %82, i32 0, i64 %76
  store double %74, double* %83, align 8
  %84 = load i32* %k, align 4
  %85 = load i32* %k, align 4
  %86 = add nsw i32 %84, %85
  %87 = sitofp i32 %86 to double
  %88 = load i32* %l, align 4
  %89 = sext i32 %88 to i64
  %90 = load i32* %k, align 4
  %91 = sext i32 %90 to i64
  %92 = load i32* %j, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u2, i32 0, i64 %93
  %95 = getelementptr inbounds [23 x [3 x double]]* %94, i32 0, i64 %91
  %96 = getelementptr inbounds [3 x double]* %95, i32 0, i64 %89
  store double %87, double* %96, align 8
  %97 = load i32* %k, align 4
  %98 = load i32* %k, align 4
  %99 = add nsw i32 %97, %98
  %100 = load i32* %k, align 4
  %101 = add nsw i32 %99, %100
  %102 = sitofp i32 %101 to double
  %103 = load i32* %l, align 4
  %104 = sext i32 %103 to i64
  %105 = load i32* %k, align 4
  %106 = sext i32 %105 to i64
  %107 = load i32* %j, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [6 x [23 x [3 x double]]]* @u3, i32 0, i64 %108
  %110 = getelementptr inbounds [23 x [3 x double]]* %109, i32 0, i64 %106
  %111 = getelementptr inbounds [3 x double]* %110, i32 0, i64 %104
  store double %102, double* %111, align 8
  br label %112

; <label>:112                                     ; preds = %72
  %113 = load i32* %l, align 4
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* %l, align 4
  br label %69

; <label>:115                                     ; preds = %69
  br label %116

; <label>:116                                     ; preds = %115
  %117 = load i32* %k, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %k, align 4
  br label %65

; <label>:119                                     ; preds = %65
  br label %120

; <label>:120                                     ; preds = %119
  %121 = load i32* %j, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %j, align 4
  br label %61

; <label>:123                                     ; preds = %61
  store i32 1, i32* %j, align 4
  br label %124

; <label>:124                                     ; preds = %154, %123
  %125 = load i32* %j, align 4
  %126 = icmp slt i32 %125, 65
  br i1 %126, label %127, label %157

; <label>:127                                     ; preds = %124
  store i32 1, i32* %k, align 4
  br label %128

; <label>:128                                     ; preds = %150, %127
  %129 = load i32* %k, align 4
  %130 = icmp slt i32 %129, 9
  br i1 %130, label %131, label %153

; <label>:131                                     ; preds = %128
  %132 = load i32* %k, align 4
  %133 = sext i32 %132 to i64
  %134 = load i32* %j, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [65 x [9 x double]]* @b, i32 0, i64 %135
  %137 = getelementptr inbounds [9 x double]* %136, i32 0, i64 %133
  store double 1.000250e+00, double* %137, align 8
  %138 = load i32* %k, align 4
  %139 = sext i32 %138 to i64
  %140 = load i32* %j, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [65 x [9 x double]]* @c, i32 0, i64 %141
  %143 = getelementptr inbounds [9 x double]* %142, i32 0, i64 %139
  store double 1.000250e+00, double* %143, align 8
  %144 = load i32* %k, align 4
  %145 = sext i32 %144 to i64
  %146 = load i32* %j, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [65 x [9 x double]]* @h, i32 0, i64 %147
  %149 = getelementptr inbounds [9 x double]* %148, i32 0, i64 %145
  store double 1.000250e+00, double* %149, align 8
  br label %150

; <label>:150                                     ; preds = %131
  %151 = load i32* %k, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %k, align 4
  br label %128

; <label>:153                                     ; preds = %128
  br label %154

; <label>:154                                     ; preds = %153
  %155 = load i32* %j, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %j, align 4
  br label %124

; <label>:157                                     ; preds = %124
  store i32 1, i32* %j, align 4
  br label %158

; <label>:158                                     ; preds = %192, %157
  %159 = load i32* %j, align 4
  %160 = icmp slt i32 %159, 6
  br i1 %160, label %161, label %195

; <label>:161                                     ; preds = %158
  %162 = load i32* %j, align 4
  %163 = mul nsw i32 %162, 100
  %164 = sitofp i32 %163 to double
  %165 = load i32* %j, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds [6 x double]* @bnk1, i32 0, i64 %166
  store double %164, double* %167, align 8
  %168 = load i32* %j, align 4
  %169 = mul nsw i32 %168, 110
  %170 = sitofp i32 %169 to double
  %171 = load i32* %j, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds [6 x double]* @bnk2, i32 0, i64 %172
  store double %170, double* %173, align 8
  %174 = load i32* %j, align 4
  %175 = mul nsw i32 %174, 120
  %176 = sitofp i32 %175 to double
  %177 = load i32* %j, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds [6 x double]* @bnk3, i32 0, i64 %178
  store double %176, double* %179, align 8
  %180 = load i32* %j, align 4
  %181 = mul nsw i32 %180, 130
  %182 = sitofp i32 %181 to double
  %183 = load i32* %j, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [6 x double]* @bnk4, i32 0, i64 %184
  store double %182, double* %185, align 8
  %186 = load i32* %j, align 4
  %187 = mul nsw i32 %186, 140
  %188 = sitofp i32 %187 to double
  %189 = load i32* %j, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [6 x double]* @bnk5, i32 0, i64 %190
  store double %188, double* %191, align 8
  br label %192

; <label>:192                                     ; preds = %161
  %193 = load i32* %j, align 4
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %j, align 4
  br label %158

; <label>:195                                     ; preds = %158
  store i32 1, i32* %j, align 4
  br label %196

; <label>:196                                     ; preds = %214, %195
  %197 = load i32* %j, align 4
  %198 = icmp slt i32 %197, 5
  br i1 %198, label %199, label %217

; <label>:199                                     ; preds = %196
  store i32 1, i32* %k, align 4
  br label %200

; <label>:200                                     ; preds = %210, %199
  %201 = load i32* %k, align 4
  %202 = icmp slt i32 %201, 513
  br i1 %202, label %203, label %213

; <label>:203                                     ; preds = %200
  %204 = load i32* %k, align 4
  %205 = sext i32 %204 to i64
  %206 = load i32* %j, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [5 x [513 x double]]* @p, i32 0, i64 %207
  %209 = getelementptr inbounds [513 x double]* %208, i32 0, i64 %205
  store double 1.000250e+00, double* %209, align 8
  br label %210

; <label>:210                                     ; preds = %203
  %211 = load i32* %k, align 4
  %212 = add nsw i32 %211, 1
  store i32 %212, i32* %k, align 4
  br label %200

; <label>:213                                     ; preds = %200
  br label %214

; <label>:214                                     ; preds = %213
  %215 = load i32* %j, align 4
  %216 = add nsw i32 %215, 1
  store i32 %216, i32* %j, align 4
  br label %196

; <label>:217                                     ; preds = %196
  store i32 1, i32* %j, align 4
  br label %218

; <label>:218                                     ; preds = %228, %217
  %219 = load i32* %j, align 4
  %220 = icmp slt i32 %219, 193
  br i1 %220, label %221, label %231

; <label>:221                                     ; preds = %218
  %222 = load i32* %j, align 4
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [193 x i32]* @f, i32 0, i64 %223
  store i32 1, i32* %224, align 4
  %225 = load i32* %j, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds [193 x i32]* @e, i32 0, i64 %226
  store i32 1, i32* %227, align 4
  br label %228

; <label>:228                                     ; preds = %221
  %229 = load i32* %j, align 4
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %j, align 4
  br label %218

; <label>:231                                     ; preds = %218
  store i32 1, i32* %j, align 4
  br label %232

; <label>:232                                     ; preds = %247, %231
  %233 = load i32* %j, align 4
  %234 = icmp slt i32 %233, 68
  br i1 %234, label %235, label %250

; <label>:235                                     ; preds = %232
  %236 = load i32* %j, align 4
  %237 = sitofp i32 %236 to double
  %238 = load i32* %j, align 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds [68 x double]* @dex, i32 0, i64 %239
  store double %237, double* %240, align 8
  %241 = load i32* %j, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [68 x double]* @rh, i32 0, i64 %242
  store double %237, double* %243, align 8
  %244 = load i32* %j, align 4
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds [68 x double]* @ex, i32 0, i64 %245
  store double %237, double* %246, align 8
  br label %247

; <label>:247                                     ; preds = %235
  %248 = load i32* %j, align 4
  %249 = add nsw i32 %248, 1
  store i32 %249, i32* %j, align 4
  br label %232

; <label>:250                                     ; preds = %232
  store i32 1, i32* %j, align 4
  br label %251

; <label>:251                                     ; preds = %268, %250
  %252 = load i32* %j, align 4
  %253 = icmp slt i32 %252, 151
  br i1 %253, label %254, label %271

; <label>:254                                     ; preds = %251
  %255 = load i32* %j, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds [151 x double]* @vx, i32 0, i64 %256
  store double 1.000000e-03, double* %257, align 8
  %258 = load i32* %j, align 4
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds [151 x double]* @xx, i32 0, i64 %259
  store double 1.000000e-03, double* %260, align 8
  %261 = load i32* %j, align 4
  %262 = sdiv i32 %261, 8
  %263 = add nsw i32 %262, 3
  %264 = sitofp i32 %263 to double
  %265 = load i32* %j, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [151 x double]* @grd, i32 0, i64 %266
  store double %264, double* %267, align 8
  br label %268

; <label>:268                                     ; preds = %254
  %269 = load i32* %j, align 4
  %270 = add nsw i32 %269, 1
  store i32 %270, i32* %j, align 4
  br label %251

; <label>:271                                     ; preds = %251
  ret void
}

; Function Attrs: nounwind
define i32 @main() #0 {
  %1 = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %1
  store i32 0, i32* %i, align 4
  br label %2

; <label>:2                                       ; preds = %10, %0
  %3 = load i32* %i, align 4
  %4 = icmp slt i32 %3, 1011
  br i1 %4, label %5, label %13

; <label>:5                                       ; preds = %2
  %6 = load i32* %i, align 4
  %7 = icmp slt i32 %6, 1010
  %8 = select i1 %7, i32 0, i32 1
  %9 = call i32 @main1(i32 %8)
  br label %10

; <label>:10                                      ; preds = %5
  %11 = load i32* %i, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %i, align 4
  br label %2

; <label>:13                                      ; preds = %2
  %14 = load i32* %1
  ret i32 %14
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }

