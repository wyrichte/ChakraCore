testMultiplyInteger1a = parseInt("100");
testMultiplyInteger1b = parseInt("51");
testMultiplyInteger1c = parseInt("17");
testMultiplyInteger1d = parseInt("3");
function TestMultiplyInteger1() {
    var a = testMultiplyInteger1a;
    var b = testMultiplyInteger1b;
    var c = testMultiplyInteger1c;
    var d = testMultiplyInteger1d;
    var res = null;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
    res = a * b * c * d * a * b * c * d * a * b * c * d;
}
TestMultiplyInteger1.testId = "Operators.Multiply.Integer.1";
TestMultiplyInteger1.description = "a * b * c * d";
TestMultiplyInteger1.iterations = 500000;
TestMultiplyInteger1.quantifier = 1000;
Register(TestMultiplyInteger1);
