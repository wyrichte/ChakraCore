testAddString1a = "abcdefg";
testAddString1b = "hijklmn";
testAddString1c = "opqrstu";
testAddString1d = "vwxyz";
function TestAddString1() {
    var a = testAddString1a;
    var b = testAddString1b;
    var c = testAddString1c;
    var d = testAddString1d;
    var res = null;
    var len = 0;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    len += (a + b + c + d + a + b + c + d + a + b + c + d).length;
    return len;
}
TestAddString1.testId = "Operators.Add.String.1";
TestAddString1.description = "a + b + c + d";
TestAddString1.iterations = 5000;
TestAddString1.quantifier = 1000;
Register(TestAddString1);
