{
  "testname" : "JS Completions - Test completions",
  "owner" : "chuckj",
  "validated" : true,
  "timeout" : 1000,
  "binRootEnv" : "_NTTREE",
  "targetHost" : "chakra.dll",
  "_comment1" : "Put an underscore \"_\" prefix to comment out a header field.",
  "_comment2" : "No field in the schema uses the underscore prefix",
  "runAuthoringTest" : true,
  "commands" :
  [
{
  "action": "getCompletions",
  "args": [
    "bug68773.js"
  ],
  "events": [
    {
      "completions": [
        {
          "extent": {
            "offset": 0,
            "length": 0
          },
          "kind": "member",
          "completions": [
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "break",
              "displayText": "break",
              "insertionText": "break"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "case",
              "displayText": "case",
              "insertionText": "case"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "catch",
              "displayText": "catch",
              "insertionText": "catch"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "continue",
              "displayText": "continue",
              "insertionText": "continue"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "debugger",
              "displayText": "debugger",
              "insertionText": "debugger"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "default",
              "displayText": "default",
              "insertionText": "default"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "delete",
              "displayText": "delete",
              "insertionText": "delete"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "do",
              "displayText": "do",
              "insertionText": "do"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "else",
              "displayText": "else",
              "insertionText": "else"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "false",
              "displayText": "false",
              "insertionText": "false"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "finally",
              "displayText": "finally",
              "insertionText": "finally"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "for",
              "displayText": "for",
              "insertionText": "for"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "function",
              "displayText": "function",
              "insertionText": "function"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "if",
              "displayText": "if",
              "insertionText": "if"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "in",
              "displayText": "in",
              "insertionText": "in"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "instanceof",
              "displayText": "instanceof",
              "insertionText": "instanceof"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "new",
              "displayText": "new",
              "insertionText": "new"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "null",
              "displayText": "null",
              "insertionText": "null"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "return",
              "displayText": "return",
              "insertionText": "return"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "switch",
              "displayText": "switch",
              "insertionText": "switch"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "this",
              "displayText": "this",
              "insertionText": "this"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "throw",
              "displayText": "throw",
              "insertionText": "throw"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "true",
              "displayText": "true",
              "insertionText": "true"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "try",
              "displayText": "try",
              "insertionText": "try"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "typeof",
              "displayText": "typeof",
              "insertionText": "typeof"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "var",
              "displayText": "var",
              "insertionText": "var"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "void",
              "displayText": "void",
              "insertionText": "void"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "while",
              "displayText": "while",
              "insertionText": "while"
            },
            {
              "kind": "reserved word",
              "group": "syntax",
              "name": "with",
              "displayText": "with",
              "insertionText": "with"
            }
          ]
        }
      ]
    }
  ]
},
{
  "action": "quit",
  "args": [],
  "events": []
}
  ]
}
