JsDocCommentsParser::ParseTypeDefinitionDocComments:
{
  input :
  {
    text : "*\r\n * First type\r\n * @typedef {Object} FirstType\r\n * @property {String} stringProperty - a string property\r\n * @property {Number} numberProperty - a number property\r\n * Second type\r\n * @typedef {Object} SecondType\r\n * @property {FirstType} FirstTypeProperty - a property of type FirstType\r\n * @property {Number} numberProperty - another number property\r\n \r\n"
  },
  output :
  {
    TypeDefinitions :
    [
      {
        name : "FirstType",
        description : "First type",
        properties :
        [
          {
            type : "String",
            name : "stringProperty",
            description : "a string property"
          },
          {
            type : "Number",
            name : "numberProperty",
            description : "a number property\r\nSecond type"
          }
        ]
      },
      {
        name : "SecondType",
        description : "",
        properties :
        [
          {
            type : "FirstType",
            name : "FirstTypeProperty",
            description : "a property of type FirstType"
          },
          {
            type : "Number",
            name : "numberProperty",
            description : "another number property"
          }
        ]
      }
    ]
  }
}
JsDocCommentsParser::ParseVarDocComments:
{
  input :
  {
    text : "*\r\n * First type\r\n * @typedef {Object} FirstType\r\n * @property {String} stringProperty - a string property\r\n * @property {Number} numberProperty - a number property\r\n * Second type\r\n * @typedef {Object} SecondType\r\n * @property {FirstType} FirstTypeProperty - a property of type FirstType\r\n * @property {Number} numberProperty - another number property\r\n \r\n"
  },
  output :
  {
    VarDocComments :
    {

    }
  }
}
JsDocCommentsParser::ParseFuncDocComments:
{
  input :
  {
    signatureText : "*\r\n * @returns {SecondType} options\r\n \r\n"
  },
  output :
  {
    signatures :
    [
      {
        description : "",
        parameters :
        [
        ],
        returns :
        {
          type : "SecondType",
          description : "options"
        }
      }
    ]
  }
}
Passed
