using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace DirectAuthorCheckinTests
{
    [TestClass]
    public class ASTAsJSONTests : DirectAuthorTest
    {
        [TestInitialize]
        new public void Initialize()
        {
            base.Initialize();
        }

        [TestCleanup]
        new public void Cleanup()
        {
            base.Cleanup();
        }

        private void VerifyJSON(string actual, string expected)
        {
            actual.CompactJSON().Expect(expected.CompactJSON());
        }

        [TestMethod]
        [WorkItem(123704)]
        public void EmptyFile()
        {
            var file = _session.FileFromText(@"");
            var context = _session.OpenContext(file);
            var actual = context.GetASTAsJSON();

            VerifyJSON(actual, EmptyFile_Expected);
        }
        #region Test data
        const string EmptyFile_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":0
}";
        #endregion

        [TestMethod]
        [WorkItem(123704)]
        public void EmptyFinallyBlock()
        {
            var file = _session.FileFromText(@"try {} finally {}");
            var context = _session.OpenContext(file);
            var actual = context.GetASTAsJSON();

            VerifyJSON(actual, EmptyFinallyBlock_Expected);
        }
        #region Test data
        const string EmptyFinallyBlock_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":17,
   ""body"":[
            {
               ""__type"":""Block"",
               ""offset"":0,
               ""length"":17,
               ""autogenerated"":""true"",
               ""body"":[
                  {
                     ""__type"":""TryFinallyStmt"",
                     ""offset"":0,
                     ""length"":17,
                     ""try"":{
                        ""__type"":""TryStmt"",
                        ""offset"":0,
                        ""length"":6,
                        ""body"":{
                           ""__type"":""Block"",
                           ""offset"":4,
                           ""length"":2
                        }
                     },
                     ""finally"":{
                        ""__type"":""FinallyStmt"",
                        ""offset"":7,
                        ""length"":10,
                        ""body"":{
                           ""__type"":""Block"",
                           ""offset"":15,
                           ""length"":2
                        }
                     }
                  }
               ]
            }
   ]
}";
        #endregion

        [TestMethod]
        [WorkItem(123693)]
        public void Labels()
        {
            var file = _session.FileFromText(Labels_file);
            var context = _session.OpenContext(file);
            var actual = context.GetASTAsJSON();

            VerifyJSON(actual, Labels_Expected);
        }
        #region Test data
        const string Labels_file = @"function f(a,b)
{
    iflabel: if (a == b) {
    dolabel:    do {
    trylabel:       try {
    calllabel:          f(0,1);
    vardcllabel:        var i = 0;
    forlabel:           for (i =0; i<a ;i = i+1)
                        {
                            continue;
                        }
                    }
                    finally {
    asglabel:           a = a +1;
                    }
    breaklabel:      break iflabel;
                } while (a > 0);
            }
}";
        const string Labels_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":508,
   ""body"":[
            {
               ""__type"":""FuncDecl"",
               ""offset"":0,
               ""length"":508,
               ""name"":""f"",
               ""arguments"":[
                  {
                     ""__type"":""VarDecl"",
                     ""offset"":11,
                     ""length"":1,
                     ""name"":""a""
                  },
                  {
                     ""__type"":""VarDecl"",
                     ""offset"":13,
                     ""length"":1,
                     ""name"":""b""
                  }
               ],
               ""body"":[
                        {
                           ""__type"":""IfStmt"",
                           ""offset"":33,
                           ""length"":472,
                           ""label"":""iflabel"",
                           ""condition"":{
                              ""__type"":""EqualOper"",
                              ""offset"":37,
                              ""length"":6,
                              ""left"":{
                                 ""__type"":""NameExpr"",
                                 ""offset"":37,
                                 ""length"":1,
                                 ""value"":""a""
                              },
                              ""right"":{
                                 ""__type"":""NameExpr"",
                                 ""offset"":42,
                                 ""length"":1,
                                 ""value"":""b""
                              }
                           },
                           ""then"":{
                              ""__type"":""Block"",
                              ""offset"":45,
                              ""length"":460,
                              ""body"":[
                                 {
                                    ""__type"":""DoWhileStmt"",
                                    ""offset"":64,
                                    ""length"":425,
                                    ""label"":""dolabel"",
                                    ""body"":{
                                       ""__type"":""Block"",
                                       ""offset"":67,
                                       ""length"":408,
                                       ""body"":[
                                          {
                                             ""__type"":""Block"",
                                             ""offset"":90,
                                             ""length"":329,
                                             ""label"":""trylabel"",
                                             ""autogenerated"":""true"",
                                             ""body"":[
                                                {
                                                   ""__type"":""TryFinallyStmt"",
                                                   ""offset"":90,
                                                   ""length"":329,
                                                   ""try"":{
                                                      ""__type"":""TryStmt"",
                                                      ""offset"":90,
                                                      ""length"":240,
                                                      ""body"":{
                                                         ""__type"":""Block"",
                                                         ""offset"":94,
                                                         ""length"":236,
                                                         ""body"":[
                                                            {
                                                               ""__type"":""CallExpr"",
                                                               ""offset"":121,
                                                               ""length"":6,
                                                               ""label"":""calllabel"",
                                                               ""target"":{
                                                                  ""__type"":""NameExpr"",
                                                                  ""offset"":121,
                                                                  ""length"":1,
                                                                  ""value"":""f""
                                                               },
                                                               ""args"":[
                                                                  {
                                                                     ""__type"":""NumberLit"",
                                                                     ""offset"":123,
                                                                     ""length"":1,
                                                                     ""value"":0
                                                                  },
                                                                  {
                                                                     ""__type"":""NumberLit"",
                                                                     ""offset"":125,
                                                                     ""length"":1,
                                                                     ""value"":1
                                                                  }
                                                               ]
                                                            },
                                                            {
                                                               ""__type"":""VarDecl"",
                                                               ""offset"":154,
                                                               ""length"":9,
                                                               ""label"":""vardcllabel"",
                                                               ""name"":""i"",
                                                               ""init"":{
                                                                  ""__type"":""NumberLit"",
                                                                  ""offset"":162,
                                                                  ""length"":1,
                                                                  ""value"":0
                                                               }
                                                            },
                                                            {
                                                               ""__type"":""ForStmtm"",
                                                               ""offset"":190,
                                                               ""length"":117,
                                                               ""label"":""forlabel"",
                                                               ""init"":{
                                                                  ""__type"":""AssignmentOper"",
                                                                  ""offset"":195,
                                                                  ""length"":4,
                                                                  ""left"":{
                                                                     ""__type"":""NameExpr"",
                                                                     ""offset"":195,
                                                                     ""length"":1,
                                                                     ""value"":""i""
                                                                  },
                                                                  ""right"":{
                                                                     ""__type"":""NumberLit"",
                                                                     ""offset"":198,
                                                                     ""length"":1,
                                                                     ""value"":0
                                                                  }
                                                               },
                                                               ""condition"":{
                                                                  ""__type"":""LessThanOper"",
                                                                  ""offset"":201,
                                                                  ""length"":3,
                                                                  ""left"":{
                                                                     ""__type"":""NameExpr"",
                                                                     ""offset"":201,
                                                                     ""length"":1,
                                                                     ""value"":""i""
                                                                  },
                                                                  ""right"":{
                                                                     ""__type"":""NameExpr"",
                                                                     ""offset"":203,
                                                                     ""length"":1,
                                                                     ""value"":""a""
                                                                  }
                                                               },
                                                               ""increment"":{
                                                                  ""__type"":""AssignmentOper"",
                                                                  ""offset"":206,
                                                                  ""length"":7,
                                                                  ""left"":{
                                                                     ""__type"":""NameExpr"",
                                                                     ""offset"":206,
                                                                     ""length"":1,
                                                                     ""value"":""i""
                                                                  },
                                                                  ""right"":{
                                                                     ""__type"":""AddOper"",
                                                                     ""offset"":210,
                                                                     ""length"":3,
                                                                     ""left"":{
                                                                        ""__type"":""NameExpr"",
                                                                        ""offset"":210,
                                                                        ""length"":1,
                                                                        ""value"":""i""
                                                                     },
                                                                     ""right"":{
                                                                        ""__type"":""NumberLit"",
                                                                        ""offset"":212,
                                                                        ""length"":1,
                                                                        ""value"":1
                                                                     }
                                                                  }
                                                               },
                                                               ""body"":{
                                                                  ""__type"":""Block"",
                                                                  ""offset"":240,
                                                                  ""length"":67,
                                                                  ""body"":[
                                                                     {
                                                                        ""__type"":""ContinueStmt"",
                                                                        ""offset"":271,
                                                                        ""length"":8
                                                                     }
                                                                  ]
                                                               }
                                                            }
                                                         ]
                                                      }
                                                   },
                                                   ""finally"":{
                                                      ""__type"":""FinallyStmt"",
                                                      ""offset"":352,
                                                      ""length"":67,
                                                      ""body"":{
                                                         ""__type"":""Block"",
                                                         ""offset"":360,
                                                         ""length"":59,
                                                         ""body"":[
                                                            {
                                                               ""__type"":""AssignmentOper"",
                                                               ""offset"":387,
                                                               ""length"":8,
                                                               ""label"":""asglabel"",
                                                               ""left"":{
                                                                  ""__type"":""NameExpr"",
                                                                  ""offset"":387,
                                                                  ""length"":1,
                                                                  ""value"":""a""
                                                               },
                                                               ""right"":{
                                                                  ""__type"":""AddOper"",
                                                                  ""offset"":391,
                                                                  ""length"":4,
                                                                  ""left"":{
                                                                     ""__type"":""NameExpr"",
                                                                     ""offset"":391,
                                                                     ""length"":1,
                                                                     ""value"":""a""
                                                                  },
                                                                  ""right"":{
                                                                     ""__type"":""NumberLit"",
                                                                     ""offset"":394,
                                                                     ""length"":1,
                                                                     ""value"":1
                                                                  }
                                                               }
                                                            }
                                                         ]
                                                      }
                                                   }
                                                }
                                             ]
                                          },
                                          {
                                             ""__type"":""BreakStmt"",
                                             ""offset"":442,
                                             ""length"":13,
                                             ""label"":""breaklabel"",
                                             ""targetlabel"":""iflabel""
                                          }
                                       ]
                                    },
                                    ""condition"":{
                                       ""__type"":""GreaterThanOper"",
                                       ""offset"":483,
                                       ""length"":5,
                                       ""left"":{
                                          ""__type"":""NameExpr"",
                                          ""offset"":483,
                                          ""length"":1,
                                          ""value"":""a""
                                       },
                                       ""right"":{
                                          ""__type"":""NumberLit"",
                                          ""offset"":487,
                                          ""length"":1,
                                          ""value"":0
                                       }
                                    }
                                 }
                              ]
                           }
                        }
               ]
            }
   ]
}";
        #endregion

        [TestMethod]
        [WorkItem(123706)]
        public void VarDeclStatements()
        {
            var file = _session.FileFromText(VarDeclStatements_file);
            var context = _session.OpenContext(file);
            var actual = context.GetASTAsJSON();

            VerifyJSON(actual, VarDeclStatements_Expected);
        }
        #region Test data
        const string VarDeclStatements_file = @"var a; var b1,b2,b3=4, b5=""string""; var c1,c2; var d = 0;";
        const string VarDeclStatements_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":57,
   ""body"":[
            {
               ""__type"":""VarDecl"",
               ""offset"":0,
               ""length"":5,
               ""name"":""a""
            },
            {
               ""__type"":""VarDeclList"",
               ""offset"":7,
               ""length"":27,
               ""list"":[
                  {
                     ""__type"":""VarDecl"",
                     ""offset"":7,
                     ""length"":6,
                     ""name"":""b1""
                  },
                  {
                     ""__type"":""VarDecl"",
                     ""offset"":14,
                     ""length"":2,
                     ""name"":""b2""
                  },
                  {
                     ""__type"":""VarDecl"",
                     ""offset"":17,
                     ""length"":4,
                     ""name"":""b3"",
                     ""init"":{
                        ""__type"":""NumberLit"",
                        ""offset"":20,
                        ""length"":1,
                        ""value"":4
                     }
                  },
                  {
                     ""__type"":""VarDecl"",
                     ""offset"":23,
                     ""length"":11,
                     ""name"":""b5"",
                     ""init"":{
                        ""__type"":""StringLit"",
                        ""offset"":26,
                        ""length"":8,
                        ""value"":""string""
                     }
                  }
               ]
            },
            {
               ""__type"":""VarDeclList"",
               ""offset"":36,
               ""length"":9,
               ""list"":[
                  {
                     ""__type"":""VarDecl"",
                     ""offset"":36,
                     ""length"":6,
                     ""name"":""c1""
                  },
                  {
                     ""__type"":""VarDecl"",
                     ""offset"":43,
                     ""length"":2,
                     ""name"":""c2""
                  }
               ]
            },
            {
               ""__type"":""VarDecl"",
               ""offset"":47,
               ""length"":9,
               ""name"":""d"",
               ""init"":{
                  ""__type"":""NumberLit"",
                  ""offset"":55,
                  ""length"":1,
                  ""value"":0
               }
            }
   ]
}";
        #endregion

        [TestMethod]
        [WorkItem(123713)]
        public void SemiColon()
        {
            var file = _session.FileFromText(SemiColon_file);
            var context = _session.OpenContext(file);
            var actual = context.GetASTAsJSON();

            VerifyJSON(actual, SemiColon_Expected);
        }
        #region Test data
        const string SemiColon_file = @"var a; //explicit
var b   // implicit
var c var d;  // missing
";
        const string SemiColon_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":66,
   ""body"":[
            {
               ""__type"":""VarDecl"",
               ""offset"":0,
               ""length"":5,
               ""name"":""a""
            },
            {
               ""__type"":""VarDecl"",
               ""offset"":19,
               ""length"":5,
               ""semicolon"":""automatic"",
               ""name"":""b""
            },
            {
               ""__type"":""VarDecl"",
               ""offset"":40,
               ""length"":5,
               ""semicolon"":""missing"",
               ""name"":""c""
            },
            {
               ""__type"":""VarDecl"",
               ""offset"":46,
               ""length"":5,
               ""name"":""d""
            }
   ]
}";
        #endregion

        [TestMethod]
        [WorkItem(123708)]
        [WorkItem(168891)]
        public void PropertyAccessors()
        {
            var file = _session.FileFromText(PropertyAccessors_file);
            var context = _session.OpenContext(file);
            var actual = context.GetASTAsJSON();

            VerifyJSON(actual, PropertyAccessors_Expected);
        }
        #region Test data
        const string PropertyAccessors_file = @"
var.blah = {
 x :""sss"",
 get value(){
    return this._value;
 },
 set value(val){
    this._value = val;
 }
};
var.emty = {};";
        const string PropertyAccessors_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":137,
   ""body"":[
            {
               ""__type"":""VarDecl"",
               ""offset"":2,
               ""length"":118,
               ""name"":""blah"",
               ""init"":{
                  ""__type"":""ObjectExpr"",
                  ""offset"":13,
                  ""length"":107,
                  ""members"":[
                     {
                        ""__type"":""MemberOper"",
                        ""offset"":17,
                        ""length"":8,
                        ""target"":{
                           ""__type"":""StringLit"",
                           ""offset"":17,
                           ""length"":1,
                           ""value"":""x""
                        },
                        ""member"":{
                           ""__type"":""StringLit"",
                           ""offset"":20,
                           ""length"":5,
                           ""value"":""sss""
                        }
                     },
                     {
                        ""__type"":""GetDecl"",
                        ""offset"":29,
                        ""length"":41,
                        ""target"":{
                           ""__type"":""StringLit"",
                           ""offset"":33,
                           ""length"":5,
                           ""value"":""value""
                        },
                        ""value"":{
                           ""__type"":""FuncDecl"",
                           ""offset"":33,
                           ""length"":37,
                           ""body"":[
                                    {
                                       ""__type"":""ReturnStmt"",
                                       ""offset"":47,
                                       ""length"":18,
                                       ""value"":{
                                          ""__type"":""DotOper"",
                                          ""offset"":54,
                                          ""length"":11,
                                          ""left"":{
                                             ""__type"":""ThisExpr"",
                                             ""offset"":54,
                                             ""length"":4
                                          },
                                          ""right"":{
                                             ""__type"":""NameExpr"",
                                             ""offset"":59,
                                             ""length"":6,
                                             ""value"":""_value""
                                          }
                                       }
                                    }
                           ]
                        }
                     },
                     {
                        ""__type"":""SetDecl"",
                        ""offset"":74,
                        ""length"":43,
                        ""target"":{
                           ""__type"":""StringLit"",
                           ""offset"":78,
                           ""length"":5,
                           ""value"":""value""
                        },
                        ""value"":{
                           ""__type"":""FuncDecl"",
                           ""offset"":78,
                           ""length"":39,
                           ""arguments"":[
                              {
                                 ""__type"":""VarDecl"",
                                 ""offset"":84,
                                 ""length"":3,
                                 ""name"":""val""
                              }
                           ],
                           ""body"":[
                                    {
                                       ""__type"":""AssignmentOper"",
                                       ""offset"":95,
                                       ""length"":17,
                                       ""left"":{
                                          ""__type"":""DotOper"",
                                          ""offset"":95,
                                          ""length"":11,
                                          ""left"":{
                                             ""__type"":""ThisExpr"",
                                             ""offset"":95,
                                             ""length"":4
                                          },
                                          ""right"":{
                                             ""__type"":""NameExpr"",
                                             ""offset"":100,
                                             ""length"":6,
                                             ""value"":""_value""
                                          }
                                       },
                                       ""right"":{
                                          ""__type"":""NameExpr"",
                                          ""offset"":109,
                                          ""length"":3,
                                          ""value"":""val""
                                       }
                                    }
                                 ]
                        }
                     }
                  ]
               }
            },
            {
               ""__type"":""VarDecl"",
               ""offset"":123,
               ""length"":13,
               ""name"":""emty"",
               ""init"":{
                  ""__type"":""ObjectExpr"",
                  ""offset"":134,
                  ""length"":2
               }
            }
   ]
}";

        #endregion

        [TestMethod]
        [WorkItem(123721)]
        public void ParenthesesCount()
        {
            var file = _session.FileFromText(ParenthesesCount_file);
            var context = _session.OpenContext(file);
            var actual = context.GetASTAsJSON();

            VerifyJSON(actual, ParenthesesCount_Expected);
        }
        #region Test data
        const string ParenthesesCount_file = @"if ( (( ( ((1)) + 3 ) == ( (2) --) )) ){}";
        const string ParenthesesCount_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":41,
   ""body"":[
            {
               ""__type"":""IfStmt"",
               ""offset"":0,
               ""length"":41,
               ""condition"":{
                  ""__type"":""EqualOper"",
                  ""offset"":5,
                  ""length"":32,
                  ""parencount"":2,
                  ""left"":{
                     ""__type"":""AddOper"",
                     ""offset"":8,
                     ""length"":13,
                     ""parencount"":1,
                     ""left"":{
                        ""__type"":""NumberLit"",
                        ""offset"":10,
                        ""length"":5,
                        ""parencount"":2,
                        ""value"":1
                     },
                     ""right"":{
                        ""__type"":""NumberLit"",
                        ""offset"":18,
                        ""length"":1,
                        ""value"":3
                     }
                  },
                  ""right"":{
                     ""__type"":""PostDecExpr"",
                     ""offset"":25,
                     ""length"":9,
                     ""parencount"":1,
                     ""operand"":{
                        ""__type"":""NumberLit"",
                        ""offset"":27,
                        ""length"":3,
                        ""parencount"":1,
                        ""value"":2
                     }
                  }
               },
               ""then"":{
                  ""__type"":""Block"",
                  ""offset"":39,
                  ""length"":2
               }
            }
   ]
}";

        #endregion

        [TestMethod]
        [WorkItem(131154)]
        public void IndexOperator()
        {
            // Index operator is transformed into a dot operator by the parse as an optimization. 
            // Verify we show the actual operator in the tree.
            var file = _session.FileFromText(IndexOperator_file);
            var context = _session.OpenContext(file);
            var actual = context.GetASTAsJSON();

            VerifyJSON(actual, IndexOperator_Expected);
        }
        #region Test data
        const string IndexOperator_file = @"object.x = ""value_x""; object [y] = ""value_y""; object[""z""] = ""value_z""; object[2] = ""value_2""; (object[x].y)[z] = ""value"";";
        const string IndexOperator_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":121,
   ""body"":[
            {
               ""__type"":""AssignmentOper"",
               ""offset"":0,
               ""length"":20,
               ""left"":{
                  ""__type"":""DotOper"",
                  ""offset"":0,
                  ""length"":8,
                  ""left"":{
                     ""__type"":""NameExpr"",
                     ""offset"":0,
                     ""length"":6,
                     ""value"":""object""
                  },
                  ""right"":{
                     ""__type"":""NameExpr"",
                     ""offset"":7,
                     ""length"":1,
                     ""value"":""x""
                  }
               },
               ""right"":{
                  ""__type"":""StringLit"",
                  ""offset"":11,
                  ""length"":9,
                  ""value"":""value_x""
               }
            },
            {
               ""__type"":""AssignmentOper"",
               ""offset"":22,
               ""length"":22,
               ""left"":{
                  ""__type"":""IndexOper"",
                  ""offset"":22,
                  ""length"":10,
                  ""target"":{
                     ""__type"":""NameExpr"",
                     ""offset"":22,
                     ""length"":6,
                     ""value"":""object""
                  },
                  ""value"":{
                     ""__type"":""NameExpr"",
                     ""offset"":30,
                     ""length"":1,
                     ""value"":""y""
                  }
               },
               ""right"":{
                  ""__type"":""StringLit"",
                  ""offset"":35,
                  ""length"":9,
                  ""value"":""value_y""
               }
            },
            {
               ""__type"":""AssignmentOper"",
               ""offset"":46,
               ""length"":23,
               ""left"":{
                  ""__type"":""IndexOper"",
                  ""offset"":46,
                  ""length"":11,
                  ""target"":{
                     ""__type"":""NameExpr"",
                     ""offset"":46,
                     ""length"":6,
                     ""value"":""object""
                  },
                  ""value"":{
                     ""__type"":""NameExpr"",
                     ""offset"":53,
                     ""length"":3,
                     ""value"":""z""
                  }
               },
               ""right"":{
                  ""__type"":""StringLit"",
                  ""offset"":60,
                  ""length"":9,
                  ""value"":""value_z""
               }
            },
            {
               ""__type"":""AssignmentOper"",
               ""offset"":71,
               ""length"":21,
               ""left"":{
                  ""__type"":""IndexOper"",
                  ""offset"":71,
                  ""length"":9,
                  ""target"":{
                     ""__type"":""NameExpr"",
                     ""offset"":71,
                     ""length"":6,
                     ""value"":""object""
                  },
                  ""value"":{
                     ""__type"":""NumberLit"",
                     ""offset"":78,
                     ""length"":1,
                     ""value"":2
                  }
               },
               ""right"":{
                  ""__type"":""StringLit"",
                  ""offset"":83,
                  ""length"":9,
                  ""value"":""value_2""
               }
            },
            {
               ""__type"":""AssignmentOper"",
               ""offset"":94,
               ""length"":26,
               ""left"":{
                  ""__type"":""IndexOper"",
                  ""offset"":94,
                  ""length"":16,
                  ""target"":{
                     ""__type"":""DotOper"",
                     ""offset"":94,
                     ""length"":13,
                     ""parencount"":1,
                     ""left"":{
                        ""__type"":""IndexOper"",
                        ""offset"":95,
                        ""length"":9,
                        ""target"":{
                           ""__type"":""NameExpr"",
                           ""offset"":95,
                           ""length"":6,
                           ""value"":""object""
                        },
                        ""value"":{
                           ""__type"":""NameExpr"",
                           ""offset"":102,
                           ""length"":1,
                           ""value"":""x""
                        }
                     },
                     ""right"":{
                        ""__type"":""NameExpr"",
                        ""offset"":105,
                        ""length"":1,
                        ""value"":""y""
                     }
                  },
                  ""value"":{
                     ""__type"":""NameExpr"",
                     ""offset"":108,
                     ""length"":1,
                     ""value"":""z""
                  }
               },
               ""right"":{
                  ""__type"":""StringLit"",
                  ""offset"":113,
                  ""length"":7,
                  ""value"":""value""
               }
            }
   ]
}";
        #endregion

        [TestMethod]
        [WorkItem(131508)]
        public void DoWhileStatementSpan()
        {
            var file = _session.FileFromText(DoWhileStatementSpan_file);
            var context = _session.OpenContext(file);
            var actual = context.GetASTAsJSON();

            VerifyJSON(actual, DoWhileStatementSpan_Expected);
        }
        #region Test data
        const string DoWhileStatementSpan_file = @"do {} while (true);";
        const string DoWhileStatementSpan_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":19,
   ""body"":[
            {
               ""__type"":""DoWhileStmt"",
               ""offset"":0,
               ""length"":18,
               ""body"":{
                  ""__type"":""Block"",
                  ""offset"":3,
                  ""length"":2
               },
               ""condition"":{
                  ""__type"":""TrueLit"",
                  ""offset"":13,
                  ""length"":4
               }
            }
   ]
}";
        #endregion

        [TestMethod]
        [WorkItem(134849)]
        public void SwitchDefaultLabel()
        {
            var file = _session.FileFromText(SwitchDefaultLabel_file);
            var context = _session.OpenContext(file);
            var actual = context.GetASTAsJSON();

            VerifyJSON(actual, SwitchDefaultLabel_Expected);
        }
        #region Test data
        const string SwitchDefaultLabel_file = @"
var x; 
switch (x) {};
switch (x) {
    default:
        break;
};
switch (x) {
    case 1:
        break;
};

switch (x) {
    case 1:
        break;
    case 2:
        break;
    default:
        break;
};";
        const string SwitchDefaultLabel_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":228,
   ""body"":[
        {
            ""__type"":""VarDecl"",
            ""offset"":2,
            ""length"":5,
            ""name"":""x""
        },
        {
            ""__type"":""SwitchStmt"",
            ""offset"":11,
            ""length"":13,
            ""value"":{
                ""__type"":""NameExpr"",
                ""offset"":19,
                ""length"":1,
                ""value"":""x""
            }
        },
        {
            ""__type"":""SwitchStmt"",
            ""offset"":27,
            ""length"":45,
            ""value"":{
                ""__type"":""NameExpr"",
                ""offset"":35,
                ""length"":1,
                ""value"":""x""
            },
            ""cases"":[
                {
                    ""__type"":""DefaultCaseStmt"",
                    ""offset"":45,
                    ""length"":26,
                    ""body"":{
                    ""__type"":""Block"",
                    ""offset"":45,
                    ""length"":26,
                    ""autogenerated"":""true"",
                    ""body"":[
                        {
                            ""__type"":""BreakStmt"",
                            ""offset"":63,
                            ""length"":5
                        }
                    ]
                    }
                }
            ]
        },
        {
            ""__type"":""SwitchStmt"",
            ""offset"":75,
            ""length"":44,
            ""value"":{
                ""__type"":""NameExpr"",
                ""offset"":83,
                ""length"":1,
                ""value"":""x""
            },
            ""cases"":[
                {
                    ""__type"":""CaseStmt"",
                    ""offset"":93,
                    ""length"":25,
                    ""value"":{
                    ""__type"":""NumberLit"",
                    ""offset"":98,
                    ""length"":1,
                    ""value"":1
                    },
                    ""body"":{
                    ""__type"":""Block"",
                    ""offset"":93,
                    ""length"":25,
                    ""autogenerated"":""true"",
                    ""body"":[
                        {
                            ""__type"":""BreakStmt"",
                            ""offset"":110,
                            ""length"":5
                        }
                    ]
                    }
                }
            ]
        },
        {
            ""__type"":""SwitchStmt"",
            ""offset"":124,
            ""length"":103,
            ""value"":{
                ""__type"":""NameExpr"",
                ""offset"":132,
                ""length"":1,
                ""value"":""x""
            },
            ""cases"":[
                {
                    ""__type"":""CaseStmt"",
                    ""offset"":142,
                    ""length"":28,
                    ""value"":{
                    ""__type"":""NumberLit"",
                    ""offset"":147,
                    ""length"":1,
                    ""value"":1
                    },
                    ""body"":{
                    ""__type"":""Block"",
                    ""offset"":142,
                    ""length"":22,
                    ""autogenerated"":""true"",
                    ""body"":[
                        {
                            ""__type"":""BreakStmt"",
                            ""offset"":159,
                            ""length"":5
                        }
                    ]
                    }
                },
                {
                    ""__type"":""CaseStmt"",
                    ""offset"":171,
                    ""length"":28,
                    ""value"":{
                    ""__type"":""NumberLit"",
                    ""offset"":176,
                    ""length"":1,
                    ""value"":2
                    },
                    ""body"":{
                    ""__type"":""Block"",
                    ""offset"":171,
                    ""length"":22,
                    ""autogenerated"":""true"",
                    ""body"":[
                        {
                            ""__type"":""BreakStmt"",
                            ""offset"":188,
                            ""length"":5
                        }
                    ]
                    }
                },
                {
                    ""__type"":""DefaultCaseStmt"",
                    ""offset"":200,
                    ""length"":26,
                    ""body"":{
                    ""__type"":""Block"",
                    ""offset"":200,
                    ""length"":26,
                    ""autogenerated"":""true"",
                    ""body"":[
                        {
                            ""__type"":""BreakStmt"",
                            ""offset"":218,
                            ""length"":5
                        }
                    ]
                    }
                }
            ]
        }
   ]
}";
        #endregion

        [TestMethod]
        [WorkItem(137261)]
        public void ShowArrayElementsAsList()
        {
            var file = _session.FileFromText(ShowArrayElementsAsList_file);
            var context = _session.OpenContext(file);
            var actual = context.GetASTAsJSON();

            VerifyJSON(actual, ShowArrayElementsAsList_Expected);
        }
        #region Test data
        const string ShowArrayElementsAsList_file = @"var a = [""test""];
var b = [""foo"", ""bar""];";

        const string ShowArrayElementsAsList_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":42,
   ""body"":[
        {
            ""__type"":""VarDecl"",
            ""offset"":0,
            ""length"":16,
            ""name"":""a"",
            ""init"":{
                ""__type"":""ArrayExpr"",
                ""offset"":8,
                ""length"":8,
                ""elements"":[
                    {
                    ""__type"":""StringLit"",
                    ""offset"":9,
                    ""length"":6,
                    ""value"":""test""
                    }
                ]
            }
        },
        {
            ""__type"":""VarDecl"",
            ""offset"":19,
            ""length"":22,
            ""name"":""b"",
            ""init"":{
                ""__type"":""ArrayExpr"",
                ""offset"":27,
                ""length"":14,
                ""elements"":[
                    {
                    ""__type"":""StringLit"",
                    ""offset"":28,
                    ""length"":5,
                    ""value"":""foo""
                    },
                    {
                    ""__type"":""StringLit"",
                    ""offset"":35,
                    ""length"":5,
                    ""value"":""bar""
                    }
                ]
            }
        }
    ]
}";
        #endregion

        [TestMethod]
        [WorkItem(137998)]
        public void IndexOperatorAndArrayConsistency()
        {
            // Verify array and index operator are consistent in the names of child nodes, so always use left and right
            var file = _session.FileFromText(IndexOperatorAndArrayConsistency_file);
            var context = _session.OpenContext(file);
            var actual = context.GetASTAsJSON();

            VerifyJSON(actual, IndexOperatorAndArrayConsistency_Expected);
        }
        #region Test data
        const string IndexOperatorAndArrayConsistency_file = @"this[""string""][""string""] = array[array[2]];";

        const string IndexOperatorAndArrayConsistency_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":43,
   ""body"":[
            {
               ""__type"":""AssignmentOper"",
               ""offset"":0,
               ""length"":42,
               ""left"":{
                  ""__type"":""IndexOper"",
                  ""offset"":0,
                  ""length"":24,
                  ""target"":{
                     ""__type"":""IndexOper"",
                     ""offset"":0,
                     ""length"":14,
                     ""target"":{
                        ""__type"":""ThisExpr"",
                        ""offset"":0,
                        ""length"":4
                     },
                     ""value"":{
                        ""__type"":""NameExpr"",
                        ""offset"":5,
                        ""length"":8,
                        ""value"":""string""
                     }
                  },
                  ""value"":{
                     ""__type"":""NameExpr"",
                     ""offset"":15,
                     ""length"":8,
                     ""value"":""string""
                  }
               },
               ""right"":{
                  ""__type"":""IndexOper"",
                  ""offset"":27,
                  ""length"":15,
                  ""target"":{
                     ""__type"":""NameExpr"",
                     ""offset"":27,
                     ""length"":5,
                     ""value"":""array""
                  },
                  ""value"":{
                     ""__type"":""IndexOper"",
                     ""offset"":33,
                     ""length"":8,
                     ""target"":{
                        ""__type"":""NameExpr"",
                        ""offset"":33,
                        ""length"":5,
                        ""value"":""array""
                     },
                     ""value"":{
                        ""__type"":""NumberLit"",
                        ""offset"":39,
                        ""length"":1,
                        ""value"":2
                     }
                  }
               }
            }
   ]
}";
        #endregion

        [TestMethod]
        [WorkItem(163776)]
        public void NaNValues()
        {
            var file = _session.FileFromText(NaNValues_file);
            var context = _session.OpenContext(file);
            var actual = context.GetASTAsJSON();

            VerifyJSON(actual, NaNValues_Expected);
        }
        #region Test data
        public const string NaNValues_file = @"/*@cc_on@set@fourteen=14@set@foobaz=(@fourteen*2-8)@if(@foobaz==20)@*/alert(/*@foobaz@*/);alert(/*@notdefined@*/);/*@else@*/alert(""not twenty"");/*@end@*/";
        public const string NaNValues_Expected = @"{
    ""__type"": ""Unit"", 
    ""offset"": 0, 
    ""length"": 153, 
    ""body"":[
        {
            ""__type"": ""CallExpr"", 
            ""offset"": 70, 
            ""length"": 19, 
            ""target"":{
                ""__type"": ""NameExpr"", 
                ""offset"": 70, 
                ""length"": 5, 
                ""value"": ""alert""
            }
        },
        {
            ""__type"": ""CallExpr"", 
            ""offset"": 90, 
            ""length"": 23, 
            ""target"":{
                ""__type"": ""NameExpr"", 
                ""offset"": 90, 
                ""length"": 5, 
                ""value"": ""alert""
            }
        },
        {
            ""__type"": ""CallExpr"", 
            ""offset"": 124, 
            ""length"": 19, 
            ""target"":{
                ""__type"": ""NameExpr"", 
                ""offset"": 124, 
                ""length"": 5, 
                ""value"": ""alert""
            }, 
            ""args"":[
                {
                    ""__type"": ""StringLit"", 
                    ""offset"": 130, 
                    ""length"": 12, 
                    ""value"": ""not twenty""
                }
            ]
        }
    ]
}";
        #endregion

        [TestMethod]
        [WorkItem(153966)]
        public void CaseStatementSpan()
        {
            var file = _session.FileFromText("switch(x){case 0: break; case 1: break; default: break;}");
            var context = _session.OpenContext(file);
            var actual = context.GetASTAsJSON();

            VerifyJSON(actual, CaseStatementSpan_Expected);
        }
        #region Test data
        public const string CaseStatementSpan_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":56,
   ""body"":[
            {
               ""__type"":""SwitchStmt"",
               ""offset"":0,
               ""length"":56,
               ""value"":{
                  ""__type"":""NameExpr"",
                  ""offset"":7,
                  ""length"":1,
                  ""value"":""x""
               },
               ""cases"":[
                  {
                     ""__type"":""CaseStmt"",
                     ""offset"":10,
                     ""length"":14,
                     ""value"":{
                        ""__type"":""NumberLit"",
                        ""offset"":15,
                        ""length"":1,
                        ""value"":0
                     },
                     ""body"":{
                        ""__type"":""Block"",
                        ""offset"":10,
                        ""length"":13,
                        ""autogenerated"":""true"",
                        ""body"":[
                           {
                              ""__type"":""BreakStmt"",
                              ""offset"":18,
                              ""length"":5
                           }
                        ]
                     }
                  },
                  {
                     ""__type"":""CaseStmt"",
                     ""offset"":25,
                     ""length"":14,
                     ""value"":{
                        ""__type"":""NumberLit"",
                        ""offset"":30,
                        ""length"":1,
                        ""value"":1
                     },
                     ""body"":{
                        ""__type"":""Block"",
                        ""offset"":25,
                        ""length"":13,
                        ""autogenerated"":""true"",
                        ""body"":[
                           {
                              ""__type"":""BreakStmt"",
                              ""offset"":33,
                              ""length"":5
                           }
                        ]
                     }
                  },
                  {
                     ""__type"":""DefaultCaseStmt"",
                     ""offset"":40,
                     ""length"":15,
                     ""body"":{
                        ""__type"":""Block"",
                        ""offset"":40,
                        ""length"":15,
                        ""autogenerated"":""true"",
                        ""body"":[
                           {
                              ""__type"":""BreakStmt"",
                              ""offset"":49,
                              ""length"":5
                           }
                        ]
                     }
                  }
               ]
            }
   ]
}";
        #endregion

        [TestMethod]
        [WorkItem(160894)]
        public void TryLimValue()
        {
            var file = _session.FileFromText(@"try{ } catch(e){ } finally{ }");
            var context = _session.OpenContext(file);

            // verify we do not hang
            var actual = context.GetASTAsJSON();
            VerifyJSON(actual, TryLimValue_Expected);
        }
        #region Test data
        const string TryLimValue_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":29,
   ""body"":[
      {
            ""__type"":""Block"",
            ""offset"":0,
            ""length"":29,
            ""autogenerated"":""true"",
            ""body"":[
                {
                    ""__type"":""TryFinallyStmt"",
                    ""offset"":0,
                    ""length"":29,
                    ""try"":{
                    ""__type"":""TryStmt"",
                    ""offset"":0,
                    ""length"":18,
                    ""body"":{
                        ""__type"":""TryCatchStmt"",
                        ""offset"":0,
                        ""length"":18,
                        ""try"":{
                            ""__type"":""TryStmt"",
                            ""offset"":0,
                            ""length"":6,
                            ""body"":{
                                ""__type"":""Block"",
                                ""offset"":3,
                                ""length"":3
                            }
                        },
                        ""catch"":{
                            ""__type"":""CatchClause"",
                            ""offset"":7,
                            ""length"":11,
                            ""variable"":{
                                ""__type"":""NameExpr"",
                                ""offset"":13,
                                ""length"":1,
                                ""value"":""e""
                            },
                            ""body"":{
                                ""__type"":""Block"",
                                ""offset"":15,
                                ""length"":3
                            }
                        }
                    }
                    },
                    ""finally"":{
                    ""__type"":""FinallyStmt"",
                    ""offset"":19,
                    ""length"":10,
                    ""body"":{
                        ""__type"":""Block"",
                        ""offset"":26,
                        ""length"":3
                    }
                    }
                }
            ]
      }
   ]
}";
        #endregion

        [TestMethod]
        [WorkItem(286275)]
        public void FloatingValues()
        {
            var file = _session.FileFromText(@"3.402823466E+100 + 0.402823466E-99");
            var context = _session.OpenContext(file);

            // verify we do not hang
            var actual = context.GetASTAsJSON();
            VerifyJSON(actual, FloatingValues_Expected);
        }
        #region Test data
        const string FloatingValues_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":34,
   ""body"":[
        {
            ""__type"":""AddOper"",
            ""offset"":0,
            ""length"":34,
            ""semicolon"":""automatic"",
            ""left"":{
                ""__type"":""NumberLit"",
                ""offset"":0,
                ""length"":16,
                ""value"":3.40282e+100
            },
            ""right"":{
                ""__type"":""NumberLit"",
                ""offset"":19,
                ""length"":15,
                ""value"":4.02823e-100
            }
        }
   ] 
}";
        #endregion

        [TestMethod]
        [WorkItem(471759)]
        [TestCategory("ES6"), TestCategory("StringTemplate")]
        public void SimpleStringTemplate()
        {
            var file = _session.FileFromText(@"`simple string template`");
            var context = _session.OpenContext(file);

            // verify we do not hang
            var actual = context.GetASTAsJSON();
            VerifyJSON(actual, SimpleStringTemplate_Expected);
        }
        #region Test data
        const string SimpleStringTemplate_Expected = @"{""__type"": ""Unit"", ""offset"": 0, ""length"": 24, ""body"":[{""__type"": ""StringTemplateDecl"", ""offset"": 0, ""length"": 24, ""semicolon"": ""automatic"", ""stringLiterals"":{""__type"": ""StringLit"", ""offset"": 0, ""length"": 24, ""value"": ""simple string template""}}]}";
        #endregion

        [TestMethod]
        [WorkItem(471759)]
        [TestCategory("ES6"), TestCategory("StringTemplate")]
        public void StringTemplateWithReplacement()
        {
            var file = _session.FileFromText(@"`string template ${'with'} ${'replacements'}`");
            var context = _session.OpenContext(file);

            // verify we do not hang
            var actual = context.GetASTAsJSON();
            VerifyJSON(actual, StringTemplateWithReplacement_Expected);
        }
        #region Test data
        const string StringTemplateWithReplacement_Expected = @"{""__type"": ""Unit"", ""offset"": 0, ""length"": 45, ""body"":[{""__type"": ""StringTemplateDecl"", ""offset"": 0, ""length"": 45, ""semicolon"": ""automatic"", ""stringLiterals"":[{""__type"": ""StringLit"", ""offset"": 0, ""length"": 19, ""value"": ""string template ""},{""__type"": ""StringLit"", ""offset"": 25, ""length"": 4, ""value"": "" ""},{""__type"": ""StringLit"", ""offset"": 43, ""length"": 2, ""value"": """"}], ""substitutionExpression"":[{""__type"": ""StringLit"", ""offset"": 19, ""length"": 6, ""value"": ""with""},{""__type"": ""StringLit"", ""offset"": 29, ""length"": 14, ""value"": ""replacements""}]}]}";
        #endregion

        [TestMethod]
        [WorkItem(471759)]
        [TestCategory("ES6"), TestCategory("StringTemplate")]
        public void StringTemplateWithTagFunction()
        {
            var file = _session.FileFromText(@"function tag() { }; tag`string template ${'with'} ${'replacements'}`");
            var context = _session.OpenContext(file);

            // verify we do not hang
            var actual = context.GetASTAsJSON();
            VerifyJSON(actual, StringTemplateWithTagFunction_Expected);
        }
        #region Test data
        const string StringTemplateWithTagFunction_Expected = @"{""__type"": ""Unit"", ""offset"": 0, ""length"": 68, ""body"":[{""__type"": ""FuncDecl"", ""offset"": 0, ""length"": 18, ""name"": ""tag""},{""__type"": ""CallExpr"", ""offset"": 20, ""length"": 48, ""semicolon"": ""automatic"", ""target"":{""__type"": ""NameExpr"", ""offset"": 20, ""length"": 3, ""value"": ""tag""}, ""args"":[{""__type"": ""StringTemplateDecl"", ""offset"": 23, ""length"": 45, ""stringLiterals"":[{""__type"": ""StringLit"", ""offset"": 23, ""length"": 19, ""value"": ""string template ""},{""__type"": ""StringLit"", ""offset"": 48, ""length"": 4, ""value"": "" ""},{""__type"": ""StringLit"", ""offset"": 66, ""length"": 2, ""value"": """"}], ""stringRawLiterals"":[{""__type"": ""StringLit"", ""offset"": 23, ""length"": 19, ""value"": ""string template ""},{""__type"": ""StringLit"", ""offset"": 48, ""length"": 4, ""value"": "" ""},{""__type"": ""StringLit"", ""offset"": 66, ""length"": 2, ""value"": """"}]},{""__type"": ""StringLit"", ""offset"": 42, ""length"": 6, ""value"": ""with""},{""__type"": ""StringLit"", ""offset"": 52, ""length"": 14, ""value"": ""replacements""}]}]}";
        #endregion

        [TestMethod]
        [WorkItem(802218)]
        [TestCategory("ES6"), TestCategory("Symbol")]
        public void SymbolValues()
        {
            var file = _session.FileFromText(@"var sym = Symbol('symbol name'); var obj = {}; obj[sym] = 'symbol value';");
            var context = _session.OpenContext(file);

            // verify we do not hang
            var actual = context.GetASTAsJSON();
            VerifyJSON(actual, SymbolValues_Expected);
        }
        #region Test data
        const string SymbolValues_Expected = @"{""__type"": ""Unit"", ""offset"": 0, ""length"": 73, ""body"":[{""__type"": ""VarDecl"", ""offset"": 0, ""length"": 31, ""name"": ""sym"", ""init"":{""__type"": ""CallExpr"", ""offset"": 10, ""length"": 21, ""target"":{""__type"": ""NameExpr"", ""offset"": 10, ""length"": 6, ""value"": ""Symbol""}, ""args"":[{""__type"": ""StringLit"", ""offset"": 17, ""length"": 13, ""value"": ""symbol name""}]}},{""__type"": ""VarDecl"", ""offset"": 33, ""length"": 12, ""name"": ""obj"", ""init"":{""__type"": ""ObjectExpr"", ""offset"": 43, ""length"": 2}},{""__type"": ""AssignmentOper"", ""offset"": 47, ""length"": 25, ""left"":{""__type"": ""IndexOper"", ""offset"": 47, ""length"": 8, ""target"":{""__type"": ""NameExpr"", ""offset"": 47, ""length"": 3, ""value"": ""obj""}, ""value"":{""__type"": ""NameExpr"", ""offset"": 51, ""length"": 3, ""value"": ""sym""}}, ""right"":{""__type"": ""StringLit"", ""offset"": 58, ""length"": 14, ""value"": ""symbol value""}}]}";
        #endregion

        [TestMethod]
        [WorkItem(372164)]
        public void DoWhileSemicolon()
        {
            var file = _session.FileFromText(@"do{}while(false); do{}while(false)");
            var context = _session.OpenContext(file);

            var actual = context.GetASTAsJSON();
            VerifyJSON(actual, DoWhileSemicolon_Expected);
        }
        #region Test data
        const string DoWhileSemicolon_Expected = @"{
   ""__type"":""Unit"",
   ""offset"":0,
   ""length"":34,
   ""body"":[
            {
               ""__type"":""DoWhileStmt"",
               ""offset"":0,
               ""length"":16,
               ""body"":{
                  ""__type"":""Block"",
                  ""offset"":2,
                  ""length"":2
               },
               ""condition"":{
                  ""__type"":""FalseLit"",
                  ""offset"":10,
                  ""length"":5
               }
            },
            {
               ""__type"":""DoWhileStmt"",
               ""offset"":18,
               ""length"":16,
               ""semicolon"":""automatic"",
               ""body"":{
                  ""__type"":""Block"",
                  ""offset"":20,
                  ""length"":2
               },
               ""condition"":{
                  ""__type"":""FalseLit"",
                  ""offset"":28,
                  ""length"":5
               }
            }
   ]
}";
        #endregion
    }
}